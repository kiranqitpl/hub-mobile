{"version":3,"sources":["webpack:///src/app/modals/image-modal/image-modal.page.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form-routing.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.ts","webpack:///src/app/services/loading-service/loading.service.ts","webpack:///src/app/services/shared-service/shared.service.ts","webpack:///src/app/modals/image-modal/image-modal.page.scss","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.scss","webpack:///src/app/modals/image-modal/image-modal.page.html","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.html"],"names":["ImageModalPage","modalController","sliderOpts","zoom","console","log","img","slides","update","zoomIn","getSwiper","slider","out","dismiss","ModalController","ViewChild","IonSlides","Input","Component","selector","template","routes","path","component","TelehandlerAddFormPage","TelehandlerAddFormPageRoutingModule","NgModule","imports","RouterModule","exports","TelehandlerAddFormPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","SharedModuleModule","declarations","fb","globalService","toastService","nav","loadingService","sharedService","actionSheetController","camera","alertService","activatedRoute","pName","isSubmitted","form_percent","form_percent_val","url_id","telehandlerData","data_plate_image","engine_oil_image","hydraulic_oil_image","equipment_inspect_image","coolant_level_image","belts_and_hoses_image","wheels_tyres_image","fire_extinguisher_image","fuel_flash_image","hydraulics_functional_image","lift_arms_image","chain_hose_image","cap_bolts_image","safety_stops_image","forks_image","overhead_guards_image","counterweight_image","engine_bay_components_image","horn_image","audible_image","headlights_image","turn_signals_image","warning_brake_lights_image","foot_brake_image","parking_brake_image","clutch_gear_shift_image","engine_noise_image","fluid_leaks_image","dash_gauges_image","operational_controls_image","first_aid_kit_image","loggedInUser","JSON","parse","localStorage","getItem","params","subscribe","undefined","loadData","teleHandlerForm","group","competency","telehandler_number","hour_meter","data_plate","data_plate_comment","engine_oil","engine_oil_comment","hydraulic_oil","hydraulic_oil_comment","fuel_level","equipment_inspect","equipment_inspect_comment","coolant_level","coolant_level_comment","belts_and_hoses","belts_and_hoses_comment","wheels_tyres","Validators","wheels_tyres_comment","fire_extinguisher","fire_extinguisher_comment","fuel_flash","fuel_flash_comment","hydraulics_functional","hydraulics_functional_comment","lift_arms","lift_arms_comment","chain_hose","chain_hose_comment","cap_bolts","cap_bolts_comment","safety_stops","safety_stops_comment","forks","forks_comment","overhead_guards","overhead_guards_comment","counterweight","counterweight_comment","engine_bay_components","engine_bay_components_comment","horn","horn_comment","audible","audible_comment","headlights","headlights_comment","turn_signals","turn_signals_comment","warning_brake_lights","warning_brake_lights_comment","foot_brake","foot_brake_comment","parking_brake","parking_brake_comment","clutch_gear_shift","clutch_gear_shift_comment","engine_noise","engine_noise_comment","fluid_leaks","fluid_leaks_comment","dash_gauges","dash_gauges_comment","operational_controls","operational_controls_comment","first_aid_kit","first_aid_kit_comment","comment","controls","create","cssClass","componentProps","modal","present","sourceType","rowName","options","quality","PictureSourceType","PHOTOLIBRARY","CAMERA","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","getPicture","then","imageData","image","length","unshift","push","setValue","err","header","buttons","text","handler","pickImage","role","actionSheet","event","type","mobileUploads","i","target","files","getBase64","error","index","splice","onProgressBar","complete_status","valid","value","toast","submitApi","data","id","formData","validation","detail","alert","content","scrollToPoint","myScrollContainer","nativeElement","scrollHeight","count","formControlList","Object","keys","map","ele","forEach","key","parseInt","toFixed","getData","result","patchValue","FormBuilder","GlobalService","ToastService","NavController","LoadingService","SharedService","ActionSheetController","Camera","AlertService","ActivatedRoute","IonContent","loadingController","message","loading","LoadingController","Injectable","providedIn","notViewNotiCount","prestartMenu","menuName","route","favorite","position_in_list","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","images","innerWidth"],"mappings":"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","file":"src_app_pages_home_safety-menu_prestart_telehandler_telehandler-add-form_telehandler-add-form-b0535c-es5.js","sourcesContent":["\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, IonSlides } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.page.html',\n  styleUrls: ['./image-modal.page.scss'],\n})\nexport class ImageModalPage implements OnInit {\n\n  @ViewChild(IonSlides) slides: IonSlides;\n  @Input('img') img: any;\n\n  sliderOpts = {\n    zoom: true\n  };\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n\n    console.log('img', this.img);\n\n    console.log('slides', this.slides);\n  }\n\n  ionViewDidEnter() {\n    this.slides.update();\n  }\n\n  async zoom(zoomIn: boolean) {\n    const slider = await this.slides.getSwiper();\n    const zoom = slider.zoom;\n    zoomIn ? zoom.in() : zoom.out();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TelehandlerAddFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TelehandlerAddFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TelehandlerAddFormPageRoutingModule } from './telehandler-add-form-routing.module';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nimport { SharedModuleModule } from 'src/app/shared-module/shared-module.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TelehandlerAddFormPageRoutingModule,\n    SharedModuleModule\n  ],\n  declarations: [\n    TelehandlerAddFormPage,\n  ]\n})\nexport class TelehandlerAddFormPageModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { IonContent, NavController } from '@ionic/angular';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\n\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport { ToastService } from 'src/app/services/toast-service/toast.service';\nimport { LoadingService } from 'src/app/services/loading-service/loading.service';\nimport { SharedService } from 'src/app/services/shared-service/shared.service';\nimport { ImageModalPage } from 'src/app/modals/image-modal/image-modal.page';\nimport { AlertService } from 'src/app/services/alert-service/alert.service';\n\n@Component({\n  selector: 'app-telehandler-add-form',\n  templateUrl: './telehandler-add-form.page.html',\n  styleUrls: ['./telehandler-add-form.page.scss'],\n})\nexport class TelehandlerAddFormPage implements OnInit {\n\n  @ViewChild(IonContent) content: IonContent;\n  @ViewChild('target') myScrollContainer: ElementRef\n\n  pName: String = 'Telehandler'\n  teleHandlerForm: FormGroup;\n  isSubmitted: boolean = false;\n  loggedInUser: any;\n  form_percent: number = 0;\n  form_percent_val: number = 0;\n  // showMsg: boolean = false;\n  url_id = '';\n  telehandlerData = [];\n\n  //--------------------------------------------------------Image Variables ------------------------------------------------------------------//\n\n  data_plate_image = [];\n  engine_oil_image = [];\n  hydraulic_oil_image = [];\n  equipment_inspect_image = [];\n  coolant_level_image = [];\n  belts_and_hoses_image = [];\n  wheels_tyres_image = [];\n  fire_extinguisher_image = [];\n  fuel_flash_image = [];\n  hydraulics_functional_image = [];\n  lift_arms_image = [];\n  chain_hose_image = [];\n  cap_bolts_image = [];\n  safety_stops_image = [];\n  forks_image = [];\n  overhead_guards_image = [];\n  counterweight_image = [];\n  engine_bay_components_image = [];\n  horn_image = [];\n  audible_image = [];\n  headlights_image = [];\n  turn_signals_image = [];\n  warning_brake_lights_image = [];\n  foot_brake_image = [];\n  parking_brake_image = [];\n  clutch_gear_shift_image = [];\n  engine_noise_image = [];\n  fluid_leaks_image = [];\n  dash_gauges_image = [];\n  operational_controls_image = [];\n  first_aid_kit_image = [];\n\n\n  //--------------------------------------------------------Image Variables ------------------------------------------------------------------//\n\n  constructor(\n    private fb: FormBuilder,\n    public globalService: GlobalService,\n    private toastService: ToastService,\n    public nav: NavController,\n    private loadingService: LoadingService,\n    private modalController: ModalController,\n    private sharedService: SharedService,\n    public actionSheetController: ActionSheetController,\n    private camera: Camera,\n    private alertService: AlertService,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.url_id = params['id'] != undefined ? params['id'] : '';\n      if (this.url_id != '' && this.url_id != undefined) {\n        this.loadData(this.url_id);\n      }\n    })\n\n    this.teleHandlerForm = this.fb.group({\n\n      competency: [''],\n      telehandler_number: ['TH40'],\n\n      hour_meter: [''],\n\n      data_plate: [''],\n      data_plate_comment: [''],\n      data_plate_image: [''],\n\n      engine_oil: [''],\n      engine_oil_comment: [''],\n      engine_oil_image: [''],\n\n      hydraulic_oil: [''],\n      hydraulic_oil_comment: [''],\n      hydraulic_oil_image: [''],\n\n      fuel_level: [''],\n\n      equipment_inspect: [''],\n      equipment_inspect_comment: [''],\n      equipment_inspect_image: [''],\n\n      coolant_level: [''],\n      coolant_level_comment: [''],\n      coolant_level_image: [''],\n\n      belts_and_hoses: [''],\n      belts_and_hoses_comment: [''],\n      belts_and_hoses_image: [''],\n\n      wheels_tyres: ['', Validators.required],\n      wheels_tyres_comment: [''],\n      wheels_tyres_image: [''],\n\n      fire_extinguisher: ['', Validators.required],\n      fire_extinguisher_comment: [''],\n      fire_extinguisher_image: [''],\n\n      fuel_flash: ['', Validators.required],\n      fuel_flash_comment: [''],\n      fuel_flash_image: [''],\n\n      hydraulics_functional: ['', Validators.required],\n      hydraulics_functional_comment: [''],\n      hydraulics_functional_image: [''],\n\n      lift_arms: ['', Validators.required],\n      lift_arms_comment: [''],\n      lift_arms_image: [''],\n\n      chain_hose: ['', Validators.required],\n      chain_hose_comment: [''],\n      chain_hose_image: [''],\n\n      cap_bolts: ['', Validators.required],\n      cap_bolts_comment: [''],\n      cap_bolts_image: [''],\n\n      safety_stops: ['', Validators.required],\n      safety_stops_comment: [''],\n      safety_stops_image: [''],\n\n      forks: ['', Validators.required],\n      forks_comment: [''],\n      forks_image: [''],\n\n      overhead_guards: ['', Validators.required],\n      overhead_guards_comment: [''],\n      overhead_guards_image: [''],\n\n      counterweight: ['', Validators.required],\n      counterweight_comment: [''],\n      counterweight_image: [''],\n\n      engine_bay_components: ['', Validators.required],\n      engine_bay_components_comment: [''],\n      engine_bay_components_image: [''],\n\n      horn: ['', Validators.required],\n      horn_comment: [''],\n      horn_image: [''],\n\n      audible: ['', Validators.required],\n      audible_comment: [''],\n      audible_image: [''],\n\n      headlights: ['', Validators.required],\n      headlights_comment: [''],\n      headlights_image: [''],\n\n      turn_signals: ['', Validators.required],\n      turn_signals_comment: [''],\n      turn_signals_image: [''],\n\n      warning_brake_lights: ['', Validators.required],\n      warning_brake_lights_comment: [''],\n      warning_brake_lights_image: [''],\n\n      foot_brake: ['', Validators.required],\n      foot_brake_comment: [''],\n      foot_brake_image: [''],\n\n      parking_brake: ['', Validators.required],\n      parking_brake_comment: [''],\n      parking_brake_image: [''],\n\n      clutch_gear_shift: ['', Validators.required],\n      clutch_gear_shift_comment: [''],\n      clutch_gear_shift_image: [''],\n\n      engine_noise: ['', Validators.required],\n      engine_noise_comment: [''],\n      engine_noise_image: [''],\n\n      fluid_leaks: ['', Validators.required],\n      fluid_leaks_comment: [''],\n      fluid_leaks_image: [''],\n\n      dash_gauges: ['', Validators.required],\n      dash_gauges_comment: [''],\n      dash_gauges_image: [''],\n\n      operational_controls: ['', Validators.required],\n      operational_controls_comment: [''],\n      operational_controls_image: [''],\n\n      first_aid_kit: ['', Validators.required],\n      first_aid_kit_comment: [''],\n      first_aid_kit_image: [''],\n\n      comment: [''],\n    })\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n  }\n\n  get errorControls() {\n    return this.teleHandlerForm.controls;\n  }\n\n  //------------------------------------------------------------------ Images ----------------------------------------------------------------//\n\n  async onOpenPreview(img) {\n    const modal = await this.modalController.create({\n      component: ImageModalPage,\n      cssClass: 'transparent-modal',\n      componentProps: {\n        img\n      }\n    });\n    modal.present();\n  }\n\n  async pickImage(sourceType, rowName) {\n    let image: any;\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType == 0 ? this.camera.PictureSourceType.PHOTOLIBRARY : (sourceType == 1 ? this.camera.PictureSourceType.CAMERA : 0),\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    this.camera.getPicture(options).then((imageData) => {\n      image = imageData != '' ? 'data:image/jpeg;base64,' + imageData : '';\n      if (this[rowName].length > 0) {\n        this[rowName].unshift(image);\n      } else {\n        this[rowName].push(image);\n      }\n      this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n    }, (err) => {\n      console.log(\"errOf Image \", err)\n    });\n  }\n\n  async mobileUploads(rowName) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY, rowName)\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.CAMERA, rowName);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async onSelectImage(event, type, rowName) {\n    if (type == 1) {\n      this.mobileUploads(rowName);\n    } else {\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.sharedService.getBase64(event.target.files[i]).then(image => {\n          if (this[rowName].length > 0) {\n            this[rowName].unshift(image);\n          } else {\n            this[rowName].push(image);\n          }\n\n          console.log('rowName', this[rowName]);\n          this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n          // this.teleHandlerForm.controls[rowName].setValue(image);\n        }).catch(error => {\n          console.log('error', error);\n        });\n      }\n    }\n  }\n\n  onDeleteImage(index, rowName) {\n    this[rowName].splice(index, 1);\n    this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n    this.onProgressBar('');\n  }\n\n  //------------------------------------------------------------------ Images ----------------------------------------------------------------//\n\n  validation(complete_status) {\n    if (this.teleHandlerForm.valid) {\n      this.isSubmitted = true;\n\n      // let formControlList = [];\n      // Object.keys(this.teleHandlerForm.controls).map(ele => formControlList.push(ele));\n\n      if (\n        (this.teleHandlerForm.value['data_plate'] == 'Faulty' && this.teleHandlerForm.value['data_plate_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_oil'] == 'Faulty' && this.teleHandlerForm.value['engine_oil_comment'] == '') ||\n        (this.teleHandlerForm.value['hydraulic_oil'] == 'Faulty' && this.teleHandlerForm.value['hydraulic_oil_comment'] == '') ||\n        (this.teleHandlerForm.value['equipment_inspect'] == 'Faulty' && this.teleHandlerForm.value['equipment_inspect_comment'] == '') ||\n        (this.teleHandlerForm.value['coolant_level'] == 'Faulty' && this.teleHandlerForm.value['coolant_level_comment'] == '') ||\n        (this.teleHandlerForm.value['belts_and_hoses'] == 'Faulty' && this.teleHandlerForm.value['belts_and_hoses_comment'] == '') ||\n        (this.teleHandlerForm.value['wheels_tyres'] == 'Faulty' && this.teleHandlerForm.value['wheels_tyres_comment'] == '') ||\n        (this.teleHandlerForm.value['fire_extinguisher'] == 'Faulty' && this.teleHandlerForm.value['fire_extinguisher_comment'] == '') ||\n        (this.teleHandlerForm.value['fuel_flash'] == 'Faulty' && this.teleHandlerForm.value['fuel_flash_comment'] == '') ||\n        (this.teleHandlerForm.value['hydraulics_functional'] == 'Faulty' && this.teleHandlerForm.value['hydraulics_functional_comment'] == '') ||\n        (this.teleHandlerForm.value['lift_arms'] == 'Faulty' && this.teleHandlerForm.value['lift_arms_comment'] == '') ||\n        (this.teleHandlerForm.value['chain_hose'] == 'Faulty' && this.teleHandlerForm.value['chain_hose_comment'] == '') ||\n        (this.teleHandlerForm.value['cap_bolts'] == 'Faulty' && this.teleHandlerForm.value['cap_bolts_comment'] == '') ||\n        (this.teleHandlerForm.value['safety_stops'] == 'Faulty' && this.teleHandlerForm.value['safety_stops_comment'] == '') ||\n        (this.teleHandlerForm.value['forks'] == 'Faulty' && this.teleHandlerForm.value['forks_comment'] == '') ||\n        (this.teleHandlerForm.value['overhead_guards'] == 'Faulty' && this.teleHandlerForm.value['overhead_guards_comment'] == '') ||\n        (this.teleHandlerForm.value['counterweight'] == 'Faulty' && this.teleHandlerForm.value['counterweight_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_bay'] == 'Faulty' && this.teleHandlerForm.value['engine_bay_components_comment'] == '') ||\n        (this.teleHandlerForm.value['horn'] == 'Faulty' && this.teleHandlerForm.value['horn_comment'] == '') ||\n        (this.teleHandlerForm.value['audible'] == 'Faulty' && this.teleHandlerForm.value['audible_comment'] == '') ||\n        (this.teleHandlerForm.value['headlights'] == 'Faulty' && this.teleHandlerForm.value['headlights_comment'] == '') ||\n        (this.teleHandlerForm.value['turn_signals'] == 'Faulty' && this.teleHandlerForm.value['turn_signals_comment'] == '') ||\n        (this.teleHandlerForm.value['warning_brake_lights'] == 'Faulty' && this.teleHandlerForm.value['warning_brake_lights_comment'] == '') ||\n        (this.teleHandlerForm.value['foot_brake'] == 'Faulty' && this.teleHandlerForm.value['foot_brake_comment'] == '') ||\n        (this.teleHandlerForm.value['parking_brake'] == 'Faulty' && this.teleHandlerForm.value['parking_brake_comment'] == '') ||\n        (this.teleHandlerForm.value['clutch_gear_shift'] == 'Faulty' && this.teleHandlerForm.value['clutch_gear_shift_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_noise'] == 'Faulty' && this.teleHandlerForm.value['engine_noise_comment'] == '') ||\n        (this.teleHandlerForm.value['dash_gauges'] == 'Faulty' && this.teleHandlerForm.value['dash_gauges_comment'] == '') ||\n        (this.teleHandlerForm.value['operational_controls'] == 'Faulty' && this.teleHandlerForm.value['operational_controls_comment'] == '') ||\n        (this.teleHandlerForm.value['fluid_leaks'] == 'Faulty' && this.teleHandlerForm.value['fluid_leaks_comment'] == '') ||\n        (this.teleHandlerForm.value['first_aid_kit'] == 'Faulty' && this.teleHandlerForm.value['first_aid_kit_comment'] == '')\n      ) {\n        // this.loadingService.dismissLoading();\n        this.toastService.toast('Please fill all required fields.', 'danger');\n        return;\n      }\n      this.submitApi(complete_status);\n    }\n  }\n\n  submitApi(complete_status) {\n    let data = this.teleHandlerForm.value;\n    data['user_id'] = this.loggedInUser.id;\n    data['complete_status'] = complete_status;\n    let formData = { 'formData': data };\n\n    if (this.url_id != '' && this.url_id != undefined) {\n      formData['id'] = this.teleHandlerForm['id'];\n    }\n\n    console.log('formData', formData);\n\n    // this.globalService.postData('Telehandler/submit', formData).subscribe(result => {\n    //   if (result && result['status']) {\n    //     this.toastService.toast(result['message'], 'success');\n    //     this.nav.back();\n    //   } else {\n    //     this.toastService.toast(result['message'], 'danger');\n    //   }\n    // }, error => {\n    //   console.log('error', error);\n    // })\n  }\n\n  onSubmit(complete_status) {\n    if (complete_status == 1) {\n      this.validation(complete_status);\n    } else {\n      this.submitApi(complete_status);\n    }\n  }\n\n  onCompetency(event) {\n    if (event.detail.value == 'Not completed') {\n      this.alertService.alert('STOP do not proceed and see your supervisor to complete a VOC.')\n    }\n  }\n\n  onFuelLevel(event) {\n    if (event.detail.value == 'Empty') {\n      this.alertService.alert('Please ensure you fill up the Telehandler prior to use.')\n    }\n  }\n\n  onRadioButtonChange(event, rowName) {\n    this.content.scrollToPoint(0, this.myScrollContainer.nativeElement.scrollHeight, 6000);\n    let comment = rowName + '_comment';\n    let image = rowName + '_image';\n    this.teleHandlerForm.controls[comment].setValue('');\n    this.teleHandlerForm.controls[image].setValue('');\n  }\n\n  onProgressBar(event) {\n    let count = 0;\n    let formControlList = [];\n    Object.keys(this.teleHandlerForm.controls).map(ele => formControlList.push(ele));\n    formControlList.forEach(key => {\n      if (this.teleHandlerForm.value[key] && this.teleHandlerForm.value[key] != '' && this.teleHandlerForm.value[key] == 'Ok') {\n        count = (count + 3);\n      } else if (this.teleHandlerForm.value[key] && this.teleHandlerForm.value[key] != '' && this.teleHandlerForm.value[key] != 'Ok') {\n        count = ++count;\n      }\n    })\n\n    this.form_percent = ((1 / Object.keys(this.teleHandlerForm.controls).length) * count);\n    this.form_percent_val = parseInt((((1 / Object.keys(this.teleHandlerForm.controls).length) * count) * 100).toFixed());\n    // console.log('this.form_percent_val', this.form_percent_val);\n  }\n\n  loadData(id) {\n    this.globalService.getData('add_form/getSingleData?table_name=telehandler&id=' + id).subscribe(result => {\n      if (result && result['data'] && result['data'][0]) {\n        this.telehandlerData = result['data'][0];\n        this.teleHandlerForm.patchValue(this.telehandlerData);\n        this.onProgressBar('');\n      }\n    }), error => {\n      console.log(error);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    public loadingController: LoadingController\n  ) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n}\n","import { Injectable, } from '@angular/core';\nimport { GlobalService } from '../global-service/global.service';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  notViewNotiCount: any = 0;\n\n  //------------------------------------------------------------------ Global Variable -------------------------------------------------------//\n\n  prestartMenu = [\n    {\n      menuName: 'LV', route: '#', favorite: false, position_in_list: 1\n    },\n    {\n      menuName: 'Forklift', route: '#', favorite: false, position_in_list: 2\n    },\n    {\n      menuName: 'Telehandler', route: '/home/safety-menu/telehandler-add-form', favorite: false, position_in_list: 3\n    },\n    {\n      menuName: 'Crane', route: '/home/safety-menu/crane-add-form', favorite: false, position_in_list: 4\n    },\n    {\n      menuName: 'Vehicle Hoist', route: '/home/safety-menu/vehicle-hoist-add-form', favorite: false, position_in_list: 5\n    },\n  ];\n\n  //------------------------------------------------------------------ Global Variable -------------------------------------------------------//\n\n  constructor(\n    private globalService: GlobalService,\n    public actionSheetController: ActionSheetController,\n    public camera: Camera\n  ) { }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // fileToBase64 = (file) => {\n  //   let image: any;\n  //   let reader = new FileReader();\n  //   reader.onload = (function (file) {\n  //     return function (e) {\n  //       image = e.target.result;\n  //       this.base64Image = e.target.result;\n  //     };\n  //   })(file);\n  //   reader.readAsDataURL(file);\n  // };\n\n  // convertDataURIToBinary(dataURI) {\n  //   var BASE64_MARKER = ';base64,';\n  //   var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  //   var base64 = dataURI.substring(base64Index);\n  //   var raw = window.atob(base64);\n  //   var rawLength = raw.length;\n  //   var array = new Uint8Array(new ArrayBuffer(rawLength));\n  //   for (let i = 0; i < rawLength; i++) {\n  //     array[i] = raw.charCodeAt(i);\n  //   }\n  //   return array;\n  // }\n\n  async mobileUploadImages() {\n    let images: any;\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.CAMERA);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async pickImage(sourceType) {\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    await this.camera.getPicture(options).then(\n      (imageData) => {\n        console.log('imageData', imageData);\n        // const file = this.DataURIToBlob('data:image/jpeg;base64,' + imageData);\n        let image = 'data:image/jpeg;base64,' + imageData;\n        console.log('pickImage', image);\n        return image;\n      },\n      (err) => {\n        console.log(\"errOf Image \", err)\n      }\n    );\n  }\n\n  resize(event) {\n    return event.innerWidth ? event.innerWidth : event.target.innerWidth;\n  }\n\n}\n","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\nion-footer {\\n  margin-bottom: 10px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6ImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmlvbi1mb290ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW9uLXNsaWRlcyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZWxlaGFuZGxlci1hZGQtZm9ybS5wYWdlLnNjc3MifQ== */\";","export default \"\\n<ion-content>\\n  <ion-slides [options]=\\\"sliderOpts\\\">\\n    <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [src]=\\\"img\\\">\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(false)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"remove\\\" slot=\\\"start\\\"></ion-icon>\\n        out\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n        close\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(true)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"add\\\" slot=\\\"start\\\"></ion-icon>\\n        in\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";","export default \"<ion-content>\\n  <div class=\\\"toolbar\\\">\\n    <ion-text *ngIf=\\\"url_id == ''\\\">Telehandler</ion-text>\\n    <ion-text *ngIf=\\\"url_id != ''\\\">Edit Telehandler</ion-text>\\n    <ion-buttons class=\\\"back\\\">\\n      <ion-button (click)=\\\"nav.back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons class='saveBtn' (click)=\\\"onSubmit(0)\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"save-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </div>\\n\\n  <div class=\\\"container\\\" #target>\\n    <ion-row>\\n      <ion-col size-xl=\\\"3\\\" size-lg=\\\"2\\\" size-md=\\\"2\\\"></ion-col>\\n      <ion-col size-xl=\\\"6\\\" size-lg=\\\"8\\\" size-md=\\\"8\\\" size-sm=\\\"12\\\" size-xs=\\\"12\\\">\\n        <ion-card (ionChange)=\\\"onProgressBar($event)\\\">\\n          <ion-grid [formGroup]=\\\"teleHandlerForm\\\">\\n\\n            <ion-radio-group formControlName=\\\"competency\\\" (ionChange)=\\\"onCompetency($event)\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-label>Verification of Competency : </ion-label>\\n                </ion-col>\\n                <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                  <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                    <ion-label> Completed</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"Completed\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n                <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                  <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                    <ion-label> Not completed</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"Not completed\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-radio-group>\\n\\n            <ion-grid *ngIf=\\\"teleHandlerForm.value['competency'] != ''\\\">\\n              <ion-row>\\n                <ion-label> Telehandler Number : </ion-label>\\n              </ion-row>\\n              <ion-row>\\n                <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"telehandler_number\\\"></ion-input>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <ion-grid\\n              *ngIf=\\\"(teleHandlerForm.value['competency'] != '' && teleHandlerForm.value['telehandler_number'] != '' )\\\">\\n              <ion-row>\\n                <ion-label> Hour / Meter :</ion-label>\\n              </ion-row>\\n              <ion-row>\\n                <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"hour_meter\\\"></ion-input>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['hour_meter'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"data_plate\\\" (ionChange)=\\\"onRadioButtonChange($event, 'data_plate')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\" 12\\\">\\n                    <ion-label>Data plate attached and legible : </ion-label>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.data_plate.value && errorControls.data_plate.value =='Faulty'\\\">\\n\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"data_plate_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.data_plate_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'data_plate_image')\\\">\\n                    Upload\\n                    Image</ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"data_plate_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'data_plate_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"data_plate_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let dataPlateImage of data_plate_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"dataPlateImage\\\" tappable (click)=\\\"onOpenPreview(dataPlateImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'data_plate_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['data_plate'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"engine_oil\\\" (ionChange)=\\\"onRadioButtonChange($event, 'engine_oil')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\" 12\\\">\\n                    <ion-label> Engine Oil Level :</ion-label>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.engine_oil.value  && errorControls.engine_oil.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_oil_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.engine_oil_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_oil_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"engine_oil_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'engine_oil_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"engine_oil_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let engineOilImage of engine_oil_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"engineOilImage\\\" tappable (click)=\\\"onOpenPreview(engineOilImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_oil_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['engine_oil'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"hydraulic_oil\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'hydraulic_oil')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    Hydraulic Oil :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.hydraulic_oil.value && errorControls.hydraulic_oil.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"hydraulic_oil_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.hydraulic_oil_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'hydraulic_oil_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"hydraulic_oil_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'hydraulic_oil_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"hydraulic_oil_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let hydraulicOilImage of hydraulic_oil_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"hydraulicOilImage\\\" tappable (click)=\\\"onOpenPreview(hydraulicOilImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'hydraulic_oil_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['hydraulic_oil'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"fuel_level\\\" (ionChange)=\\\"onFuelLevel($event)\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    Fuel Level :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"4\\\" size-lg=\\\"4\\\" size-md=\\\"6\\\" size-sm=\\\"12\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Full</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Full\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"4\\\" size-lg=\\\"4\\\" size-md=\\\"6\\\" size-sm=\\\"12\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Half</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Half\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"4\\\" size-lg=\\\"4\\\" size-md=\\\"6\\\" size-sm=\\\"12\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Empty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Empty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['fuel_level'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"equipment_inspect\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'equipment_inspect')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    Verify Equipment Inspections are Current :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.equipment_inspect.value && errorControls.equipment_inspect.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"equipment_inspect_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.equipment_inspect_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'equipment_inspect_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"equipment_inspect_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'equipment_inspect_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"equipment_inspect_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let equipmentInspectImage of equipment_inspect_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"equipmentInspectImage\\\" tappable (click)=\\\"onOpenPreview(equipmentInspectImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'equipment_inspect_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['equipment_inspect'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"coolant_level\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'coolant_level')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    Coolant Level :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.coolant_level.value && errorControls.coolant_level.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"coolant_level_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.coolant_level_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'coolant_level_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"coolant_level_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'coolant_level_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"coolant_level_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let coolantLevelImage of coolant_level_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"coolantLevelImage\\\" tappable (click)=\\\"onOpenPreview(coolantLevelImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'coolant_level_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['coolant_level'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"belts_and_hoses\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'belts_and_hoses')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    Belts and Hoses :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <div *ngIf=\\\"errorControls.belts_and_hoses.value && errorControls.belts_and_hoses.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"belts_and_hoses_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.belts_and_hoses_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'belts_and_hoses_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"belts_and_hoses_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'belts_and_hoses_image')\\\">\\n                  </ion-input>\\n                </div>\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"belts_and_hoses_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let beltsAndHosesImage of belts_and_hoses_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"beltsAndHosesImage\\\" tappable (click)=\\\"onOpenPreview(beltsAndHosesImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'belts_and_hoses_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['belts_and_hoses'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"wheels_tyres\\\" (ionChange)=\\\"onRadioButtonChange($event, 'wheels_tyres')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Wheels, Tyres and nuts :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.wheels_tyres.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.wheels_tyres.value && errorControls.wheels_tyres.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"wheels_tyres_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.wheels_tyres_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'wheels_tyres_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"wheels_tyres_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'wheels_tyres_image')\\\">\\n                  </ion-input>\\n                </div>\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"wheels_tyres_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let wheelsTyresImage of wheels_tyres_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"wheelsTyresImage\\\" tappable (click)=\\\"onOpenPreview(wheelsTyresImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'wheels_tyres_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['wheels_tyres'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"fire_extinguisher\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'fire_extinguisher')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Fire-Extinguisher :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.fire_extinguisher.value && errorControls.fire_extinguisher.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fire_extinguisher_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'fire_extinguisher_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"fire_extinguisher_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'fire_extinguisher_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"fire_extinguisher_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let fireExtinguisherImage of fire_extinguisher_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"fireExtinguisherImage\\\" tappable (click)=\\\"onOpenPreview(fireExtinguisherImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fire_extinguisher_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['fire_extinguisher'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"fuel_flash\\\" (ionChange)=\\\"onRadioButtonChange($event, 'fuel_flash')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Fuel Flash Screen: in Place :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fuel_flash.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.fuel_flash.value && errorControls.fuel_flash.value =='Faulty'\\\">\\n                <ion-row>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fuel_flash_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.fuel_flash_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fuel_flash_image')\\\">\\n                    Upload\\n                    Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"fuel_flash_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'fuel_flash_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"fuel_flash_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let fuelFlashImage of fuel_flash_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"fuelFlashImage\\\" tappable (click)=\\\"onOpenPreview(fuelFlashImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fuel_flash_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['fuel_flash'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"hydraulics_functional\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'hydraulics_functional')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Hydraulics Functional and No Leaks :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div\\n                *ngIf=\\\"errorControls.hydraulics_functional.value  && errorControls.hydraulics_functional.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\"\\n                    formControlName=\\\"hydraulics_functional_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'hydraulics_functional_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"hydraulics_functional_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'hydraulics_functional_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"hydraulics_functional_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let hydraulicsFunctionalImage of hydraulics_functional_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"hydraulicsFunctionalImage\\\" tappable\\n                            (click)=\\\"onOpenPreview(hydraulicsFunctionalImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'hydraulics_functional_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['hydraulics_functional'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"lift_arms\\\" (ionChange)=\\\"onRadioButtonChange($event, 'lift_arms')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Boom, Lift Arms, Extending Structure :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.lift_arms.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.lift_arms.value && errorControls.lift_arms.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"lift_arms_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.lift_arms_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'lift_arms_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"lift_arms_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'lift_arms_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"lift_arms_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let liftArmsImage of lift_arms_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"liftArmsImage\\\" tappable (click)=\\\"onOpenPreview(liftArmsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'lift_arms_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['lift_arms'] != ''\\\">\\n              <ion-row>\\n                In place / Correctly Tensioned\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"chain_hose\\\" (ionChange)=\\\"onRadioButtonChange($event, 'chain_hose')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Chain and Hose Guards :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.chain_hose.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.chain_hose.value && errorControls.chain_hose.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"chain_hose_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.chain_hose_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'chain_hose_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"chain_hose_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'chain_hose_image')\\\">\\n                  </ion-input>\\n                </div>\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"chain_hose_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let chainHoseImage of chain_hose_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"chainHoseImage\\\" tappable (click)=\\\"onOpenPreview(chainHoseImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'chain_hose_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['chain_hose'] != ''\\\">\\n              <ion-row>\\n                <ion-col> In place</ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"cap_bolts\\\" (ionChange)=\\\"onRadioButtonChange($event, 'cap_bolts')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Mast Cap Bolts :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.cap_bolts.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.cap_bolts.value && errorControls.cap_bolts.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"cap_bolts_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.cap_bolts_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'cap_bolts_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"cap_bolts_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'cap_bolts_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"cap_bolts_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let capBoltsImage of cap_bolts_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"capBoltsImage\\\" tappable (click)=\\\"onOpenPreview(capBoltsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'cap_bolts_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['cap_bolts'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">In place and secure</ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"safety_stops\\\" (ionChange)=\\\"onRadioButtonChange($event, 'safety_stops')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Safety Stops and Latches :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.safety_stops.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.safety_stops.value && errorControls.safety_stops.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"safety_stops_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.safety_stops_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'safety_stops_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"safety_stops_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'safety_stops_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"safety_stops_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let safetyStopsImage of safety_stops_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"safetyStopsImage\\\" tappable (click)=\\\"onOpenPreview(safetyStopsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'safety_stops_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['safety_stops'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\"> In place</ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"forks\\\" (ionChange)=\\\"onRadioButtonChange($event, 'forks')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Forks :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.forks.value && errorControls.forks.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"forks_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'forks_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"forks_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'forks_image')\\\">\\n                  </ion-input>\\n                </div>\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"forks_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let forksImage of forks_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"forksImage\\\" tappable (click)=\\\"onOpenPreview(forksImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'forks_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['forks'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\"> Condition / Tips Even</ion-col>\\n              </ion-row>\\n\\n              <ion-radio-group formControlName=\\\"overhead_guards\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'overhead_guards')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Overhead Guards :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.overhead_guards.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.overhead_guards.value && errorControls.overhead_guards.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"overhead_guards_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.overhead_guards_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'overhead_guards_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"overhead_guards_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'overhead_guards_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"overhead_guards_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let overheadGuardsImage of overhead_guards_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"overheadGuardsImage\\\" tappable (click)=\\\"onOpenPreview(overheadGuardsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'overhead_guards_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['overhead_guards'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  In place / Condition\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"counterweight\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'counterweight')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Counterweight / Counterweight bolts :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.counterweight.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.counterweight.value && errorControls.counterweight.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"counterweight_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.counterweight_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'counterweight_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"counterweight_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'counterweight_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"counterweight_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let counterweightImage of counterweight_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"counterweightImage\\\" tappable (click)=\\\"onOpenPreview(counterweightImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'counterweight_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['counterweight'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Condition / Leaks\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"engine_bay_components\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'engine_bay_components')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Engine Bay Components :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.engine_bay_components.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div\\n                *ngIf=\\\"errorControls.engine_bay_components.value && errorControls.engine_bay_components.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\"\\n                    formControlName=\\\"engine_bay_components_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.engine_bay_components_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'engine_bay_components_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"engine_bay_components_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'engine_bay_components_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"engine_bay_components_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let engineBayComponentsImage of engine_bay_components_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"engineBayComponentsImage\\\" tappable\\n                            (click)=\\\"onOpenPreview(engineBayComponentsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_bay_components_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['engine_bay_components'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Operating\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"horn\\\" (ionChange)=\\\"onRadioButtonChange($event, 'horn')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Horn :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.horn.value && errorControls.horn.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"horn_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'horn_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"horn_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'horn_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"horn_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let hornImage of horn_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"hornImage\\\" tappable (click)=\\\"onOpenPreview(hornImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'horn_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['horn'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"audible\\\" (ionChange)=\\\"onRadioButtonChange($event, 'audible')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Audible, Visual Warning Devices :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.audible.value && errorControls.audible.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"audible_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'audible_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"audible_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'audible_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"audible_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let audibleImage of audible_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"audibleImage\\\" tappable (click)=\\\"onOpenPreview(audibleImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'audible_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['audible'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"headlights\\\" (ionChange)=\\\"onRadioButtonChange($event, 'headlights')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Headlights :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.headlights.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.headlights.value && errorControls.headlights.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"headlights_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.headlights_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'headlights_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"headlights_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'headlights_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"headlights_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let headlightsImage of headlights_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"headlightsImage\\\" tappable (click)=\\\"onOpenPreview(headlightsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'headlights_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['headlights'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"turn_signals\\\" (ionChange)=\\\"onRadioButtonChange($event, 'turn_signals')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Turn Signals :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.turn_signals.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.turn_signals.value && errorControls.turn_signals.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"turn_signals_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.turn_signals_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'turn_signals_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"turn_signals_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'turn_signals_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"turn_signals_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let turnSignalsImage of turn_signals_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"turnSignalsImage\\\" tappable (click)=\\\"onOpenPreview(turnSignalsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'turn_signals_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['turn_signals'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"warning_brake_lights\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'warning_brake_lights')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Warning / Brake Lights :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div\\n                *ngIf=\\\"errorControls.warning_brake_lights.value && errorControls.warning_brake_lights.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\"\\n                    formControlName=\\\"warning_brake_lights_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'warning_brake_lights_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"warning_brake_lights_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'warning_brake_lights_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"warning_brake_lights_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let warningBrakeLightsImage of warning_brake_lights_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"warningBrakeLightsImage\\\" tappable\\n                            (click)=\\\"onOpenPreview(warningBrakeLightsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'warning_brake_lights_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['warning_brake_lights'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"foot_brake\\\" (ionChange)=\\\"onRadioButtonChange($event, 'foot_brake')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Foot Brake :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.foot_brake.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.foot_brake.value && errorControls.foot_brake.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"foot_brake_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.foot_brake_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'foot_brake_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"foot_brake_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'foot_brake_image')\\\">\\n                  </ion-input>\\n                </div>\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"foot_brake_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let footBrakeImage of foot_brake_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"footBrakeImage\\\" tappable (click)=\\\"onOpenPreview(footBrakeImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'foot_brake_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['foot_brake'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Pedal Holds / Smooth Stop\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"parking_brake\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'parking_brake')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Parking Brake :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.parking_brake.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.parking_brake.value && errorControls.parking_brake.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"parking_brake_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.parking_brake_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'parking_brake_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"parking_brake_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'parking_brake_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"parking_brake_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let parkingBrakeImage of parking_brake_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"parkingBrakeImage\\\" tappable (click)=\\\"onOpenPreview(parkingBrakeImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'parking_brake_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['parking_brake'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Holds against Accelerator\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"clutch_gear_shift\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'clutch_gear_shift')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Clutch / Gear Shift :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.clutch_gear_shift.value && errorControls.clutch_gear_shift.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"clutch_gear_shift_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'clutch_gear_shift_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"clutch_gear_shift_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'clutch_gear_shift_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"clutch_gear_shift_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let clutchGearShiftImage of clutch_gear_shift_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"clutchGearShiftImage\\\" tappable (click)=\\\"onOpenPreview(clutchGearShiftImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'clutch_gear_shift_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['clutch_gear_shift'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Smooth operation\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"engine_noise\\\" (ionChange)=\\\"onRadioButtonChange($event, 'engine_noise')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Engine Noise :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_noise.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.engine_noise.value && errorControls.engine_noise.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_noise_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.engine_noise_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_noise_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"engine_noise_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'engine_noise_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"engine_noise_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let engineNoiseImage of engine_noise_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"engineNoiseImage\\\" tappable (click)=\\\"onOpenPreview(engineNoiseImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_noise_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['engine_noise'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Sounds Normal\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"dash_gauges\\\" (ionChange)=\\\"onRadioButtonChange($event, 'dash_gauges')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Dash Gauges :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.dash_gauges.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.dash_gauges.value && errorControls.dash_gauges.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"dash_gauges_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.dash_gauges_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'dash_gauges_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"dash_gauges_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'dash_gauges_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"dash_gauges_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let dashGaugesImage of dash_gauges_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"dashGaugesImage\\\" tappable (click)=\\\"onOpenPreview(dashGaugesImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'dash_gauges_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['dash_gauges'] != ''\\\">\\n              <ion-radio-group formControlName=\\\"operational_controls\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'operational_controls')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> Operational Controls :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <!-- </ion-item> -->\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                *ngIf=\\\"isSubmitted && errorControls.operational_controls.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div\\n                *ngIf=\\\"errorControls.operational_controls.value && errorControls.operational_controls.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\"\\n                    formControlName=\\\"operational_controls_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.operational_controls_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                    (click)=\\\"onSelectImage($event, 1, 'operational_controls_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"operational_controls_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'operational_controls_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"operational_controls_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let operationalControlsImage of operational_controls_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"operationalControlsImage\\\" tappable\\n                            (click)=\\\"onOpenPreview(operationalControlsImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'operational_controls_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['operational_controls'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Smooth operation\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"fluid_leaks\\\" (ionChange)=\\\"onRadioButtonChange($event, 'fluid_leaks')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span>Fluid Leaks :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <!-- </ion-item> -->\\n\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fluid_leaks.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.fluid_leaks.value && errorControls.fluid_leaks.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fluid_leaks_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.fluid_leaks_comment.value  == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fluid_leaks_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"fluid_leaks_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'fluid_leaks_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"fluid_leaks_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let fluidLeaksImage of fluid_leaks_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"fluidLeaksImage\\\" tappable (click)=\\\"onOpenPreview(fluidLeaksImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fluid_leaks_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"teleHandlerForm.value['fluid_leaks'] != ''\\\">\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  Under truck and Near Hoses\\n                </ion-col>\\n              </ion-row>\\n              <ion-radio-group formControlName=\\\"first_aid_kit\\\"\\n                (ionChange)=\\\"onRadioButtonChange($event, 'first_aid_kit')\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"12\\\">\\n                    <span class=\\\"error\\\">* </span> First Aid Kit :\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label> Ok</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col size-xl=\\\"6\\\" size-lg=\\\"6\\\" size-md=\\\"6\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                    <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                      <ion-label>Faulty</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-radio-group>\\n              <!-- </ion-item> -->\\n              <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.first_aid_kit.errors?.required\\\">\\n                Please select value.\\n              </ion-item>\\n\\n              <div *ngIf=\\\"errorControls.first_aid_kit.value && errorControls.first_aid_kit.value =='Faulty'\\\">\\n                <ion-row>\\n                  <span class=\\\"error\\\">* </span>\\n                  <ion-label> Comment : </ion-label>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"first_aid_kit_comment\\\">\\n                  </ion-textarea>\\n                </ion-row>\\n\\n                <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n                  *ngIf=\\\"isSubmitted && errorControls.first_aid_kit_comment.value == ''\\\">\\n                  Please enter comment.\\n                </ion-item>\\n\\n                <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n                  <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'first_aid_kit_image')\\\">\\n                    Upload Image\\n                  </ion-button>\\n                </ion-row>\\n\\n                <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n                  <ion-row>\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label> Upload Image :</ion-label>\\n                    </ion-item>\\n                  </ion-row>\\n                  <ion-input type=\\\"file\\\" formControlName=\\\"first_aid_kit_image\\\" multiple\\n                    (change)=\\\"onSelectImage($event, 2, 'first_aid_kit_image')\\\">\\n                  </ion-input>\\n                </div>\\n\\n                <ion-slides class=\\\"preview-slides\\\" *ngIf=\\\"first_aid_kit_image.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let firstAidKitImage of first_aid_kit_image; let i=index\\\">\\n                    <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"11\\\">\\n                          <img [src]=\\\"firstAidKitImage\\\" tappable (click)=\\\"onOpenPreview(firstAidKitImage)\\\">\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\">\\n                          <p class=\\\"question\\\">\\n                            <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'first_aid_kit_image')\\\"></ion-icon>\\n                          </p>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n            </div>\\n\\n            <ion-grid *ngIf=\\\"teleHandlerForm.value['first_aid_kit'] != ''\\\">\\n              <ion-row>\\n                <ion-label>Comment : </ion-label>\\n              </ion-row>\\n              <ion-row>\\n                <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"comment\\\">\\n                </ion-textarea>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <div *ngIf=\\\"teleHandlerForm.valid\\\">\\n              <p>\\n                <ion-text color=\\\"danger\\\">By clicking the submit button below you are stating that you have done the\\n                  safety\\n                  check on the fork truck to the best of you ability and that all details in this inspection are true\\n                  and\\n                  correct at the time of the inspection.</ion-text>\\n              </p>\\n              <p>\\n                <ion-text color=\\\"tertiary\\\"> Your name, date and the time the inspection is submitted will also be added\\n                  to\\n                  this report.</ion-text>\\n              </p>\\n            </div>\\n\\n            <ion-grid class=\\\"progress-bar\\\">\\n              <ion-row>\\n                <ion-col size-xl=\\\"10\\\" size-lg=\\\"10\\\" size-md=\\\"10\\\" size-sm=\\\"9\\\" size-xs=\\\"9\\\">\\n                  Form progress bar\\n                </ion-col>\\n                <ion-col size-xl=\\\"2\\\" size-lg=\\\"2\\\" size-md=\\\"2\\\" size-sm=\\\"3\\\" size-xs=\\\"3\\\">\\n                  {{form_percent_val}}{{'%'}}\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-progress-bar [value]=\\\"form_percent\\\"></ion-progress-bar>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <ion-button *ngIf=\\\"url_id == '' && form_percent_val == 100\\\" (click)=\\\"onSubmit(1)\\\" class=\\\"btn\\\">SUBMIT\\n            </ion-button>\\n\\n            <ion-button *ngIf=\\\"url_id != '' && form_percent_val== 100 \\\" (click)=\\\"onSubmit(1)\\\" class=\\\"btn\\\">Update\\n            </ion-button>\\n\\n          </ion-grid>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col size-xl=\\\"3\\\" size-lg=\\\"2\\\" size-md=\\\"2\\\"></ion-col>\\n    </ion-row>\\n  </div>\\n\\n</ion-content>\";"]}