{"version":3,"sources":["webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/dashboard/dashboard.page.ts","webpack:///src/app/services/shared-service/shared.service.ts","webpack:///src/app/pages/dashboard/dashboard.page.scss","webpack:///src/app/pages/dashboard/dashboard.page.html"],"names":["routes","path","component","DashboardPage","DashboardPageRoutingModule","NgModule","imports","RouterModule","exports","DashboardPageModule","CommonModule","FormsModule","IonicModule","declarations","HeaderComponent","nav","global","sharedService","menu","menuName","route","type","environment","imageUrl","loggedInUserDetails","JSON","parse","localStorage","getItem","onNotificationLoad","clear","navigateRoot","formData","FormData","append","id","url","postData","subscribe","result","count","forEach","element","is_seen","notViewNotiCount","console","log","error","navigateForward","NavController","GlobalService","SharedService","Component","selector","template","globalService","actionSheetController","camera","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","create","header","buttons","text","handler","images","pickImage","PictureSourceType","PHOTOLIBRARY","CAMERA","role","actionSheet","present","sourceType","options","quality","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","getPicture","then","imageData","image","err","ActionSheetController","Camera","Injectable","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,6CAAAC;AAFb,OADqB,CAAvB;;UAWaC,2BAA0B;AAAA;AAAA,O;;AAA1BA,iCAA0B,uDAJtC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIsC,GAA1BH,2BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAK,oBAAmB;AAAA;AAAA,O;;AAAnBA,0BAAmB,uDAZ/B,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,uDAAAR,0BAJO,CADD;AAORS,oBAAY,EAAE,CACZ,6CAAAV,aADY,EAEZ,8EAAAW,eAFY;AAPN,OAAT,CAY+B,GAAnBL,oBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCZAN,cAAa;AAwBxB,+BACUY,GADV,EAEUC,MAFV,EAGUC,aAHV,EAGsC;AAAA;;AAF5B,eAAAF,GAAA,GAAAA,GAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAjBV,eAAAC,IAAA,GAAY,CACV;AACEC,oBAAQ,EAAE,gBADZ;AAC8BC,iBAAK,EAAE;AADrC,WADU,EAIV;AACED,oBAAQ,EAAE,cADZ;AAC4BC,iBAAK,EAAE;AADnC,WAJU,CAAZ;AASA,eAAAC,IAAA,GAAY,0DAAAC,WAAA,QAAZ;AACA,eAAAC,QAAA,GAAW,0DAAAD,WAAA,SAAX;AAQK;;AA5BmB;AAAA;AAAA,iBA8BxB,oBAAW;AACT,iBAAKE,mBAAL,GAA2BC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,iBAAKC,kBAAL;AACD;AAjCuB;AAAA;AAAA,iBAmCxB,oBAAW;AACTF,wBAAY,CAACG,KAAb;AACA,iBAAKf,GAAL,CAASgB,YAAT,CAAsB,OAAtB;AACD;AAtCuB;AAAA;AAAA,iBAwCxB,8BAAqB;AAAA;;AACnB,gBAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKb,IAA7B;AACAW,oBAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKV,mBAAL,CAAyBW,EAApD;AACA,gBAAIC,GAAG,GAAG,EAAV,CAJmB,CAKnB;AACA;AACA;AACA;AACA;;AACA,gBAAIA,GAAG,IAAI,EAAX,EAAe;AACb,mBAAKpB,MAAL,CAAYqB,QAAZ,CAAqBD,GAArB,EAA0BJ,QAA1B,EAAoCM,SAApC,CAA8C,UAAAC,MAAM,EAAI;AACtD,oBAAIA,MAAM,CAAC,QAAD,CAAV,EAAsB;AACpB,sBAAIC,KAAK,GAAW,CAApB;AACAD,wBAAM,CAAC,MAAD,CAAN,CAAeE,OAAf,CAAuB,UAAAC,OAAO,EAAI;AAChC,wBAAIA,OAAO,CAACC,OAAR,IAAmB,CAAvB,EAA0B;AACxBH,2BAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;AACF,mBAJD;AAKA,uBAAI,CAACvB,aAAL,CAAmB2B,gBAAnB,GAAsCJ,KAAtC;AACD,iBARD,MAQO;AACL,uBAAI,CAACvB,aAAL,CAAmB2B,gBAAnB,GAAsC,CAAtC;AACAC,yBAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,eAbD,GAaI,UAAAC,KAAK,EAAI;AACXF,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD,eAfD;AAgBD,aAjBD,MAiBO;AACLF,qBAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;AAtEuB;AAAA;AAAA,iBAwExB,qBAAY;AACV,iBAAK/B,GAAL,CAASiC,eAAT,CAAyB,MAAzB;AACD;AA1EuB;;AAAA;AAAA,S;;;;gBAXjB,4CAAAC;;gBAEA,qEAAAC;;gBAEA,4EAAAC;;;;AAOIhD,oBAAa,uDALzB,+CAAAiD,SAAA,EAAU;AACTC,gBAAQ,EAAE,eADD;AAETC,gBAAQ,EAAR,uEAFS;;AAAA,OAAV,CAKyB,GAAbnD,cAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAgD,cAAa;AAIxB,+BACUI,aADV,EAESC,qBAFT,EAGSC,MAHT,EAGuB;AAAA;;AAFb,eAAAF,aAAA,GAAAA,aAAA;AACD,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AALT,eAAAb,gBAAA,GAAwB,CAAxB;AAMK;;AARmB;AAAA;AAAA,iBAUxB,mBAAUc,IAAV,EAAgB;AACd,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,oBAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,oBAAM,CAACG,MAAP,GAAgB;AAAA,uBAAML,OAAO,CAACE,MAAM,CAACvB,MAAR,CAAb;AAAA,eAAhB;;AACAuB,oBAAM,CAACI,OAAP,GAAiB,UAAAnB,KAAK;AAAA,uBAAIc,MAAM,CAACd,KAAD,CAAV;AAAA,eAAtB;AACD,aALM,CAAP;AAMD,WAjBuB,CAmBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1CwB;AAAA;AAAA,iBA6ClB,8BAAqB;;;;;;;;;;AAEL,6BAAM,KAAKS,qBAAL,CAA2BW,MAA3B,CAAkC;AAC1DC,8BAAM,EAAE,qBADkD;AAE1DC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,mBADR;AAEEC,iCAAO,EAAE,mBAAM;AACb,mCAAOC,MAAM,GAAG,MAAI,CAACC,SAAL,CAAe,MAAI,CAAChB,MAAL,CAAYiB,iBAAZ,CAA8BC,YAA7C,CAAhB;AACD;AAJH,yBADO,EAOP;AACEL,8BAAI,EAAE,YADR;AAEEC,iCAAO,EAAE,mBAAM;AACb,mCAAOC,MAAM,GAAG,MAAI,CAACC,SAAL,CAAe,MAAI,CAAChB,MAAL,CAAYiB,iBAAZ,CAA8BE,MAA7C,CAAhB;AACD;AAJH,yBAPO,EAaP;AACEN,8BAAI,EAAE,QADR;AAEEO,8BAAI,EAAE;AAFR,yBAbO;AAFiD,uBAAlC,CAAN;;;AAAdC,iC;;AAqBN,6BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;AArEuB;AAAA;AAAA,iBAuExB,mBAAUC,UAAV,EAAsB;AACpBnC,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BkC,UAA1B;AACA,gBAAMC,OAAO,GAAkB;AAC7BC,qBAAO,EAAE,GADoB;AAE7BF,wBAAU,EAAEA,UAFiB;AAG7BG,6BAAe,EAAE,KAAK1B,MAAL,CAAY2B,eAAZ,CAA4BC,QAHhB;AAI7BC,0BAAY,EAAE,KAAK7B,MAAL,CAAY8B,YAAZ,CAAyBC,IAJV;AAK7BC,uBAAS,EAAE,KAAKhC,MAAL,CAAYiC,SAAZ,CAAsBC;AALJ,aAA/B;AAOA,iBAAKlC,MAAL,CAAYmC,UAAZ,CAAuBX,OAAvB,EAAgCY,IAAhC,CACE,UAACC,SAAD,EAAe;AACbjD,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBgD,SAAzB,EADa,CAEb;;AACA,kBAAIC,KAAK,GAAG,4BAA4BD,SAAxC;AACA,qBAAOC,KAAP;AACD,aANH,EAOE,UAACC,GAAD,EAAS;AACPnD,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BkD,GAA5B;AACD,aATH;AAWD;AA3FuB;;AAAA;AAAA,S;;;;gBAPjB,4DAAA9C;;gBACA,4CAAA+C;;gBACA,sDAAAC;;;;AAKI/C,oBAAa,uDAHzB,+CAAAgD,UAAA,EAAW;AACVC,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbjD,cAAa,CAAb;;;;;;;;;;;;;;;ACRb;;;AAAA,uCAAe,m7CAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,yiCAAf","file":"src_app_pages_dashboard_dashboard_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [\n    DashboardPage,\n    HeaderComponent\n  ]\n})\nexport class DashboardPageModule {}\n","import { NavController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../services/global-service/global.service';\nimport { environment } from 'src/environments/environment';\nimport { SharedService } from 'src/app/services/shared-service/shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  role: any;\n  userRole: any;\n  gmRole: any;\n  investigatorRole: any;\n  managerRole: any;\n  supervisorRole: any;\n  roleId: string;\n\n  menu: any = [\n    {\n      menuName: \"Submitted Form\", route: \"/incident-form-list\"\n    },\n    {\n      menuName: \"Notification\", route: \"/notification\"\n    },\n  ];\n\n  type: any = environment.allType;\n  imageUrl = environment.imageUrl;\n\n  loggedInUserDetails: any;\n\n  constructor(\n    private nav: NavController,\n    private global: GlobalService,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.loggedInUserDetails = JSON.parse(localStorage.getItem('userDetails'));\n    this.onNotificationLoad();\n  }\n\n  onLogOut() {\n    localStorage.clear();\n    this.nav.navigateRoot(\"login\")\n  }\n\n  onNotificationLoad() {\n    let formData = new FormData();\n    formData.append(\"type\", this.type);\n    formData.append(\"user_id\", this.loggedInUserDetails.id);\n    let url = \"\";\n    // if (this.roleId == this.global.investigator) {\n    //   url = 'api/notification/getInvestigatorNotificationByInvestigatorID';\n    // } else if (this.roleId == this.global.gm) {\n    //   url = 'api/notification/getGMNotificationByGmID';\n    // }\n    if (url != \"\") {\n      this.global.postData(url, formData).subscribe(result => {\n        if (result['status']) {\n          let count: number = 0;\n          result['data'].forEach(element => {\n            if (element.is_seen == 0) {\n              count = count + 1;\n            }\n          });\n          this.sharedService.notViewNotiCount = count\n        } else {\n          this.sharedService.notViewNotiCount = 0\n          console.log('error');\n        }\n      }), error => {\n        console.log('error', error);\n      }\n    } else {\n      console.log(\"error\");\n    }\n  }\n\n  onAddForm() {\n    this.nav.navigateForward(\"home\")\n  }\n}\n","import { Injectable, } from '@angular/core';\nimport { GlobalService } from '../global-service/global.service';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/Camera/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  notViewNotiCount: any = 0;\n\n  constructor(\n    private globalService: GlobalService,\n    public actionSheetController: ActionSheetController,\n    public camera: Camera\n  ) { }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // fileToBase64 = (file) => {\n  //   let image: any;\n  //   let reader = new FileReader();\n  //   reader.onload = (function (file) {\n  //     return function (e) {\n  //       image = e.target.result;\n  //       this.base64Image = e.target.result;\n  //     };\n  //   })(file);\n  //   reader.readAsDataURL(file);\n  // };\n\n  // convertDataURIToBinary(dataURI) {\n  //   var BASE64_MARKER = ';base64,';\n  //   var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  //   var base64 = dataURI.substring(base64Index);\n  //   var raw = window.atob(base64);\n  //   var rawLength = raw.length;\n  //   var array = new Uint8Array(new ArrayBuffer(rawLength));\n  //   for (let i = 0; i < rawLength; i++) {\n  //     array[i] = raw.charCodeAt(i);\n  //   }\n  //   return array;\n  // }\n\n\n  async mobileUploadImages() {\n    let images: any;\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.CAMERA);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  pickImage(sourceType) {\n    console.log('sourceType', sourceType);\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    this.camera.getPicture(options).then(\n      (imageData) => {\n        console.log('imageData', imageData);\n        // const file = this.DataURIToBlob('data:image/jpeg;base64,' + imageData);\n        let image = 'data:image/jpeg;base64,' + imageData;\n        return image;\n      },\n      (err) => {\n        console.log(\"errOf Image \", err)\n      }\n    );\n  }\n}\n","export default \"ion-content .addForm {\\n  align-items: center;\\n  align-self: center;\\n  align-content: center;\\n  justify-content: center;\\n  text-align: center;\\n  padding: 40px;\\n  border: 2px dashed #c3c3c3;\\n  border-radius: 20px;\\n  margin: 7px;\\n  margin-top: 40px;\\n}\\nion-content .addF {\\n  font-family: \\\"mon-bold\\\";\\n  font-size: 17px;\\n  text-transform: capitalize;\\n  color: var(--white-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLDBCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUFBSjtBQUVFO0VBQ0UsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFFQSx5QkFBQTtBQURKIiwiZmlsZSI6ImRhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC5hZGRGb3JtIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgYm9yZGVyOiAycHggZGFzaGVkICNjM2MzYzM7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBtYXJnaW46IDdweDtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICB9XG4gIC5hZGRGIHtcbiAgICBmb250LWZhbWlseTogXCJtb24tYm9sZFwiO1xuICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICAvLyBjb2xvcjogdmFyKC0tYmxhY2stY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS13aGl0ZS1jb2xvcik7XG4gIH1cbn1cbiJdfQ== */\";","export default \"<ion-content>\\n  <div class=\\\"toolbar\\\">\\n    <ion-text>Dashboard</ion-text>\\n    <ion-buttons class='logout' slot=\\\"end\\\">\\n      <ion-button (click)=\\\"onLogOut()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"addForm\\\" (click)=\\\"onAddForm()\\\">\\n      <!-- <div class=\\\"addForm\\\" (click)=\\\"onAddForm()\\\" *ngIf=\\\"roleId != gmRole\\\"> -->\\n      <img src=\\\"{{imageUrl + 'form.png'}}\\\" />\\n      <p class=\\\" addF\\\">ADD FORM</p>\\n    </div>\\n    <div *ngFor=\\\"let tabVal of menu\\\">\\n      <ion-button class=\\\"btn\\\" [routerLink]=\\\"tabVal.route\\\">\\n        {{tabVal.menuName}}\\n        <ion-badge class=\\\"badge\\\" *ngIf=\\\"tabVal.menuName == 'Notification' && sharedService.notViewNotiCount != 0 \\\"\\n          color=\\\"danger\\\">\\n          {{sharedService.notViewNotiCount}}</ion-badge>\\n      </ion-button>\\n    </div>\\n    <ion-button class=\\\"btn logouts\\\" (click)=\\\"onLogOut()\\\">\\n      Logout\\n    </ion-button>\\n  </div>\\n</ion-content>\";"]}