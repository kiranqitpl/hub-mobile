{"version":3,"sources":["./src/app/modals/image-modal/image-modal.page.ts","./src/app/pages/home/safety-menu/incident/incident-details/incident-details-routing.module.ts","./src/app/pages/home/safety-menu/incident/incident-details/incident-details.module.ts","./src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.ts","./src/app/services/global-service/global.service.ts","./src/app/modals/image-modal/image-modal.page.scss","./src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.scss","./src/app/modals/image-modal/image-modal.page.html","./src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.html"],"names":[],"mappings":"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","file":"src_app_pages_home_safety-menu_incident_incident-details_incident-details_module_ts-es2015.js","sourcesContent":["\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, IonSlides } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.page.html',\n  styleUrls: ['./image-modal.page.scss'],\n})\nexport class ImageModalPage implements OnInit {\n\n  @ViewChild(IonSlides) slides: IonSlides;\n  @Input('img') img: any;\n\n  sliderOpts = {\n    zoom: true\n  };\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n\n    console.log('img', this.img);\n\n    console.log('slides', this.slides);\n  }\n\n  ionViewDidEnter() {\n    this.slides.update();\n  }\n\n  async zoom(zoomIn: boolean) {\n    const slider = await this.slides.getSwiper();\n    const zoom = slider.zoom;\n    zoomIn ? zoom.in() : zoom.out();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDetailsPage } from './incident-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDetailsPageRoutingModule } from './incident-details-routing.module';\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\nimport { IncidentDetailsPage } from './incident-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDetailsPageRoutingModule\n  ],\n  declarations: [\n    IncidentDetailsPage,\n    HeaderComponent\n  ]\n})\nexport class IncidentDetailsPageModule { }\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { ModalController, IonSlides } from '@ionic/angular';\nimport { ImageModalPage } from 'src/app/modals/image-modal/image-modal.page';\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-incident-details',\n  templateUrl: './incident-details.page.html',\n  styleUrls: ['./incident-details.page.scss'],\n})\nexport class IncidentDetailsPage implements OnInit {\n\n  pName: String = 'Incident Details';\n  incidentDetails: any = [];\n  classificationList = [];\n\n  sliderOpts = {\n    zoom: false,\n    slidesPerView: 1.5,\n    spaceBetween: 20,\n    centeredSlides: true\n  };\n\n  constructor(\n    private global: GlobalService,\n    private activatedRoute: ActivatedRoute,\n    private modalController: ModalController,\n    private changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.global.presentLoading();\n    this.activatedRoute.params.subscribe(\n      (params: Params) => {\n        this.global.getData1('add_form/getIncidentFormByID/' + params['incident_id']).subscribe(result => {\n          console.log('result', result);\n          if (result && result['data'] && result['data'][0]) {\n            this.incidentDetails = result['data'][0];\n            this.classificationList = this.incidentDetails['classification_value'].split(',');\n            this.global.dismissLoading();\n          }\n          this.global.dismissLoading();\n        }), error => {\n          this.global.dismissLoading();\n          console.log(error);\n        }\n        this.global.dismissLoading();\n      }\n    ), error => {\n      this.global.dismissLoading()\n      console.log('param error', error)\n    }\n  }\n\n  async onOpenPreview(img) {\n    const modal = await this.modalController.create({\n      component: ImageModalPage,\n      cssClass: 'transparent-modal',\n      componentProps: {\n        img\n      }\n    });\n    modal.present();\n  }\n\n}\n","import { LoadingController, ToastController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  baseUrl: string = 'https://mforms-api-devel.horts.com.au/';\n  baseUrl1: string = 'https://mforms-api-devel.horts.com.au/api/';\n\n  //Role \n  user: any = \"31\";\n  gm: any = \"32\";\n  investigator: any = \"33\";\n  manager: any = \"34\";\n  supervisior: any = \"35\";\n  formType_user = 1;\n  formType_investigator = 2;\n\n  constructor(\n    public toastController: ToastController,\n    public http: HttpClient,\n    public loadingController: LoadingController\n  ) { }\n\n  async presentToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      mode: \"ios\",\n      color: \"dark\"\n    });\n    toast.present();\n  }\n\n  async toast(msg, type) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      // mode: \"ios\",\n      color: type,\n      animated: true,\n    });\n    toast.present();\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n\n  setHeader() {\n    let header = new HttpHeaders()\n      .set('apikey', 'as*37486a*()HGY')\n      .set(\"Access-Control-Allow-Origin\", \"*\")\n      .set(\"Access-Control-Allow-Headers\", \"*\")\n      .set(\"Access-Control-Allow-Methods\", \"DELETE, POST, GET, OPTIONS\")\n      .set(\"Access-Control-Allow-Headers\", \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\");\n    // if (localStorage.getItem(\"token\") && localStorage.getItem(\"token\") != \"\")\n    //   header.append(\"token\", localStorage.getItem(\"token\"));\n    return header;\n  }\n\n  getData(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl + url, { headers: headers });\n  }\n\n  postData(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl + url, data, { headers: headers });\n  }\n\n  // --------------------------------------------------New Services ---------------------------------------------//\n\n  postData1(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl1 + url, data, { headers: headers });\n  }\n\n  getData1(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl1 + url, { headers: headers });\n    // return this.http.get(this.baseUrl1 + url, { headers: headers }).pipe(\n    //   map((response) => {\n    //     console.log('response', response);\n    //     if (!response['status']) {\n    //       throw new Error('Value expected!');\n    //     }\n    //     response;\n    //   }),\n    //   catchError(() => of())\n    // );\n  }\n}\n// ---------------------------------------------  New Services --------------------------------------------------//","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\nion-footer {\\n  margin-bottom: 10px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6ImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmlvbi1mb290ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW9uLXNsaWRlcyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmNpZGVudC1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\";","export default \"\\n<ion-content>\\n  <ion-slides [options]=\\\"sliderOpts\\\">\\n    <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [src]=\\\"img\\\">\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(false)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"remove\\\" slot=\\\"start\\\"></ion-icon>\\n        out\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n        close\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(true)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"add\\\" slot=\\\"start\\\"></ion-icon>\\n        in\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";","export default \"<ion-content>\\n  <app-header [pageName]=\\\"pName\\\"></app-header>\\n\\n  <div class=\\\"ion-padding-start ion-padding-end container\\\">\\n    <!-- <div class=\\\"activeBackground\\\"> -->\\n    <!----------------------------------------------------------- Incident Detalis ---------------------------------------------------->\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>Incident </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_value}}</p>\\n        <ion-item *ngIf=\\\"incidentDetails?.incident_value == 'Near Miss'\\\" lines=\\\"none\\\">\\n          <ion-row>\\n            <ion-col>\\n              <p class=\\\"question\\\">Who witnessed the near miss ? :</p>\\n              <p class=\\\"value\\\">{{incidentDetails?.incident_near_miss}}</p>\\n              <p class=\\\"question\\\">Possible consequence under different circumstances :</p>\\n              <p class=\\\"value\\\">{{incidentDetails?.incident_near_miss_other}}</p>\\n            </ion-col>\\n          </ion-row>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n    <!----------------------------------------------------------- Incident Detalis ---------------------------------------------------->\\n\\n    <!------------------------------------------------------------ Photography -------------------------------------------------------->\\n    <ion-card\\n      *ngIf=\\\"incidentDetails && incidentDetails['photography_image'] && incidentDetails['photography_image'].length && incidentDetails['photography_image'].length > 0\\\">\\n      <ion-card-header>\\n        <ion-card-title>\\n          Photography\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\">\\n          <ion-slide *ngFor=\\\"let photography_image of incidentDetails['photography_image']\\\">\\n            <img [src]=\\\"photography_image\\\" tappable (click)=\\\"onOpenPreview(photography_image)\\\">\\n          </ion-slide>\\n        </ion-slides>\\n      </ion-card-content>\\n    </ion-card>\\n    <!------------------------------------------------------------ Photography -------------------------------------------------------->\\n\\n    <!----------------------------------------------------------- Incident Description ------------------------------------------------>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Incident Description\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Description of incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_description}}</p>\\n        <p class=\\\"question\\\">Immediate action taken :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_description_action}}</p>\\n        <p class=\\\"question\\\">What could have been done differently ? :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.seen_differently}}</p>\\n        <p class=\\\"question\\\">Was there any Witnesses of the incident ? :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.was_there_any_witness_of_the_incident}}</p>\\n\\n\\n        <div *ngIf=\\\"incidentDetails?.incident_description_alcohol_test != '' \\\">\\n          <p class=\\\"question\\\">Alcohol test completed :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.incident_description_alcohol_test}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['alcohol_test_image'] && incidentDetails['alcohol_test_image'].length > 0\\\">\\n            <ion-slide *ngFor=\\\"let alcohol_test_image of incidentDetails['alcohol_test_image']\\\">\\n              <img [src]=\\\"alcohol_test_image\\\" tappable (click)=\\\"onOpenPreview(alcohol_test_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n\\n        <div *ngIf=\\\"incidentDetails?.drug_test_completed !='' \\\">\\n          <p class=\\\"question\\\">Drug test completed :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.drug_test_completed}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['drug_test_image'] && incidentDetails['drug_test_image'].length > 0\\\">\\n            <ion-slide *ngFor=\\\"let drug_test_image of incidentDetails['drug_test_image']\\\">\\n              <img [src]=\\\"drug_test_image\\\" tappable (click)=\\\"onOpenPreview(drug_test_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n\\n        <div *ngIf=\\\"incidentDetails?.return_to_alternate_duties!==''\\\">\\n          <p class=\\\"question\\\">Return to Alternate Duties :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.return_to_alternate_duties}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['return_to_alternate_duties_image'] && incidentDetails['return_to_alternate_duties_image'].length > 0\\\">\\n            <ion-slide\\n              *ngFor=\\\"let return_to_alternate_duties_image of incidentDetails['return_to_alternate_duties_image']\\\">\\n              <img [src]=\\\"return_to_alternate_duties_image\\\" tappable\\n                (click)=\\\"onOpenPreview(return_to_alternate_duties_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n    <!----------------------------------------------------------- Incident Description ------------------------------------------------>\\n\\n    <!------------------------------------------------------------- Classification ---------------------------------------------------->\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Classification\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Classification :</p>\\n        <ion-row class='ion-no-padding'>\\n          <ion-col size=\\\"6\\\" *ngFor=\\\"let classificationValue of classificationList; let i=index\\\">\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n              <p class=\\\"value\\\">{{classificationValue}}</p>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <p class=\\\"question\\\">Date of Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['date_of_incident'] }}</p>\\n\\n        <p class=\\\"question\\\">Time Of Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['time_of_incident']}}</p>\\n\\n        <p class=\\\"question\\\">Date Reported :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['date_reported'] }}</p>\\n\\n        <p class=\\\"question\\\">Time Reported :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['time_reported'] }}</p>\\n\\n        <p class=\\\"question\\\">Location Type :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_location_option'] }}</p>\\n\\n        <p class=\\\"value\\\">{{incidentDetails['classification_location_value'] }}</p>\\n\\n        <!-- <ion-text *ngIf=\\\"incidentDetails['classification_location_option']  == 'Add Location'\\\" class=\\\"regularTexrt\\\">\\n          {{incidentDetails['classification_location_value']}}</ion-text>\\n        <ion-text *ngIf=\\\"incidentDetails['classification_location_option']  == 'Choose Location'\\\" class=\\\"regularTexrt\\\">\\n          {{incidentDetails['classification_location_value']}}</ion-text> -->\\n\\n        <p class=\\\"question\\\">Shift Type :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_shift_type'] }}</p>\\n\\n        <p class=\\\"question\\\">Supervisor :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_supervisor'] }}</p>\\n\\n        <p class=\\\"question\\\">Name of Manager :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_manager']}}</p>\\n      </ion-card-content>\\n    </ion-card>\\n    <!------------------------------------------------------------- Classification ---------------------------------------------------->\\n\\n    <div *ngFor=\\\"let classificationValue of classificationList; let i=index\\\">\\n      <!------------------------------------------------------------- Injury ------------------------------------------------------------>\\n      <ion-card *ngIf=\\\"classificationValue == 'Injury'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Injury\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-card *ngFor=\\\"let personDetails of incidentDetails['person_details']; let i=index\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                Person {{(i+1)}} Details\\n              </ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <p class=\\\"question\\\">Full Name of Injured Person :</p>\\n              <p class=\\\"value\\\">{{personDetails['injured_person_option'] }}</p>\\n              <p class=\\\"value\\\" *ngIf=\\\"personDetails['injured_person_option_value'] == 'Other' \\\">\\n                {{personDetails['injured_person_option_value'] }}</p>\\n\\n              <p class=\\\"question\\\">Gender :</p>\\n              <p class=\\\"value\\\">{{personDetails['gender'] }}</p>\\n\\n              <p class=\\\"question\\\">Date of Birth :</p>\\n              <p class=\\\"value\\\">{{personDetails['date_of_birth'] }}</p>\\n\\n              <p class=\\\"question\\\">Return to Normal Duties :</p>\\n              <p class=\\\"value\\\">{{personDetails['normal_duties'] }}</p>\\n\\n              <ion-item lines=\\\"none\\\"\\n                *ngIf=\\\"personDetails['normal_duties_explanation'] != ''  && personDetails['normal_duties_explanation'] != null\\\">\\n                <ion-row>\\n                  <ion-col>\\n                    <p class=\\\"question\\\">Explanation :</p>\\n                    <p class=\\\"value\\\">{{personDetails['normal_duties_explanation'] }}</p>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-item>\\n\\n              <p class=\\\"question\\\">Return to Alternate Duties :</p>\\n              <p class=\\\"value\\\">{{personDetails['alternate_duties'] }}</p>\\n\\n              <ion-item lines=\\\"none\\\"\\n                *ngIf=\\\"personDetails['duties_explanation'] != '' && personDetails['duties_explanation'] != null\\\">\\n                <ion-row>\\n                  <ion-col>\\n                    <p class=\\\"question\\\">Explanation :</p>\\n                    <p class=\\\"value\\\">{{personDetails['duties_explanation'] }}</p>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-item>\\n\\n              <p class=\\\"question\\\">Initial Injury / IIIness Classification :</p>\\n              <p class=\\\"value\\\">{{personDetails['initital_injury'] }}</p>\\n\\n              <p class=\\\"question\\\">Part of body injured :</p>\\n              <p class=\\\"value\\\" *ngFor=\\\"let injuryPart of personDetails['part_of_body_injured_occured']\\\">{{injuryPart}}\\n              </p>\\n\\n              <p class=\\\"question\\\">Was immediate treatment given ? :</p>\\n              <p class=\\\"value\\\">{{personDetails['was_immediate_treatment'] }}</p>\\n\\n              <ion-item *ngIf=\\\"personDetails['was_immediate_treatment'] == ''\\\" lines=\\\"none\\\">\\n                <ion-row>\\n                  <p class=\\\"question\\\">What treatment was given ? :</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_given_explanation'] }}</p>\\n\\n                  <p class=\\\"question\\\">Who administered treatment ? :</p>\\n                  <p class=\\\"question\\\">Person Name</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_person_name'] }}</p>\\n\\n                  <p class=\\\"question\\\">Contact Details :</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_person_number'] }}</p>\\n                </ion-row>\\n              </ion-item>\\n\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-card-content>\\n      </ion-card>\\n      <!------------------------------------------------------------ Injury ------------------------------------------------------------->\\n      <!----------------------------------------------------------- Environmental ------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Environmental'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Environmental\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n\\n          <p class=\\\"question\\\">Immediate action taken to minimize Environment impact :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['environmental_description']}}</p>\\n\\n          <p class=\\\"question\\\">Was a chemical split ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['was_a_chemical_split']}}</p>\\n\\n\\n          <ion-item *ngIf=\\\"incidentDetails['was_a_chemical_split']==='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\">Name of chemical :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['chemical_details'].chemical_name}}</p>\\n\\n                <p class=\\\"question\\\">Insert Photo :</p>\\n\\n                <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n                  *ngIf=\\\"incidentDetails['chemical_details'] && incidentDetails['chemical_details'].chemical_photo && incidentDetails['chemical_details'].chemical_photo.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let chemical_photo of incidentDetails['chemical_details'].chemical_photo\\\">\\n                    <img [src]=\\\"chemical_photo\\\" tappable (click)=\\\"onOpenPreview(chemical_photo)\\\">\\n                  </ion-slide>\\n                </ion-slides>\\n\\n                <p class=\\\"question\\\">Approximate quantity of chemical spilled :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['chemical_details'].approximate_quantity}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Was the emergency spill kit used ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['emergency_spill_kit_used']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['emergency_spill_kit_used']==='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\" question\\\"> What was used out of the chemical spill kit ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['out_of_split_kit']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Environmental -------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Reputation ----------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Reputation'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Reputation\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n\\n          <p class=\\\"question\\\">Was the reputation damages an individual or Company ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['reputation_option']}}</p>\\n\\n          <ion-item lines=\\\"none\\\"\\n            *ngIf=\\\"incidentDetails['individual_damage_value'] == 'Individual' || incidentDetails['company_damage_value'] == 'Company'\\\">\\n\\n            <p class=\\\"question\\\">Reputation damages type : </p>\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\" *ngIf=\\\"incidentDetails['individual_damage_value'] == 'Individual' \\\">How has the\\n                  Individual's reputation been damaged ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['individual_damage_value']}}</p>\\n\\n                <p class=\\\"question\\\" *ngIf=\\\"incidentDetails['company_damage_value'] == 'Company' \\\">How has the\\n                  Company's reputation been damaged ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['company_damage_value']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Was the negative effect internal or external ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['reputation_negative_effect']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['effected_department'] != '' || incidentDetails['external_party'] != ''\\\"\\n            lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div *ngIf=\\\"incidentDetails['effected_department'] != ''\\\">\\n                  <p class=\\\"question\\\">What Department was effected ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['effected_department']}}</p>\\n                </div>\\n                <div *ngIf=\\\"incidentDetails['external_party'] != ''\\\">\\n                  <p class=\\\"question\\\">Who is the external party ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['external_party']}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Name of any witness :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['name_of_witness']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['name_of_witness'] == 'Other'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  <p class=\\\"question\\\">Name :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_name}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Mobile No :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_mobile_no}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Email id :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_email}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">What is the possible outcome of this incident ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['possible_outcome_incident']}}</p>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Reputation ----------------------------------------------------------->\\n      <!----------------------------------------------------------- Security ------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Security'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Security\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\">Security :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['security_option']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'IT'\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\">What kind of IT Security Incident ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['it_option_value']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'Theft'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  <p class=\\\"question\\\"> What has been stolen ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['what_has_been_stolen_item']}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Approximate value of stolen item ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['approximate_value_of_stolen']}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'Other'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\"> What is the Security incident ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['what_is_the_specific_securities_incident']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Security ------------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Assets --------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Asset'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Assets\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\">Asset description :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['asset_description']}}</p>\\n\\n          <p class=\\\"question\\\">Does Asset have a number ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['asset_has_number']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['asset_has_number']=='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\"> Asset Number :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['asset_number']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Extent of Damage :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['extent_of_damage']}}</p>\\n\\n          <div *ngIf=\\\"incidentDetails['extent_damage_image'] && incidentDetails['extent_damage_image'].length > 0\\\">\\n            <p class=\\\"question\\\">Upload photo of damage :</p>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\">\\n              <ion-slide *ngFor=\\\"let extent_damage_image of incidentDetails['extent_damage_image']\\\">\\n                <img [src]=\\\"extent_damage_image\\\" tappable (click)=\\\"onOpenPreview(extent_damage_image)\\\">\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Assets --------------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Report --------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Report'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Report\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\"> What could have done differently ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['report']}}</p>\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Report --------------------------------------------------------------->\\n    </div>\\n  </div>\\n  <!-- </div> -->\\n</ion-content>\";"],"sourceRoot":"webpack:///"}