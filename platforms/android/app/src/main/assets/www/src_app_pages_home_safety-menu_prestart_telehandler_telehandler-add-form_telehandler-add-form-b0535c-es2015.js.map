{"version":3,"sources":["./src/app/modals/image-modal/image-modal.page.ts","./src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form-routing.module.ts","./src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.module.ts","./src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.ts","./src/app/services/loading-service/loading.service.ts","./src/app/services/shared-service/shared.service.ts","./src/app/modals/image-modal/image-modal.page.scss","./src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.scss","./src/app/modals/image-modal/image-modal.page.html","./src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.html"],"names":[],"mappings":"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","file":"src_app_pages_home_safety-menu_prestart_telehandler_telehandler-add-form_telehandler-add-form-b0535c-es2015.js","sourcesContent":["\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, IonSlides } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.page.html',\n  styleUrls: ['./image-modal.page.scss'],\n})\nexport class ImageModalPage implements OnInit {\n\n  @ViewChild(IonSlides) slides: IonSlides;\n  @Input('img') img: any;\n\n  sliderOpts = {\n    zoom: true\n  };\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n\n    console.log('img', this.img);\n\n    console.log('slides', this.slides);\n  }\n\n  ionViewDidEnter() {\n    this.slides.update();\n  }\n\n  async zoom(zoomIn: boolean) {\n    const slider = await this.slides.getSwiper();\n    const zoom = slider.zoom;\n    zoomIn ? zoom.in() : zoom.out();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TelehandlerAddFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TelehandlerAddFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TelehandlerAddFormPageRoutingModule } from './telehandler-add-form-routing.module';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TelehandlerAddFormPageRoutingModule\n  ],\n  declarations: [\n    TelehandlerAddFormPage,\n    HeaderComponent\n  ]\n})\nexport class TelehandlerAddFormPageModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { IonContent, NavController } from '@ionic/angular';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\n\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport { ToastService } from 'src/app/services/toast-service/toast.service';\nimport { LoadingService } from 'src/app/services/loading-service/loading.service';\nimport { SharedService } from 'src/app/services/shared-service/shared.service';\nimport { ImageModalPage } from 'src/app/modals/image-modal/image-modal.page';\nimport { AlertService } from 'src/app/services/alert-service/alert.service';\n\n@Component({\n  selector: 'app-telehandler-add-form',\n  templateUrl: './telehandler-add-form.page.html',\n  styleUrls: ['./telehandler-add-form.page.scss'],\n})\nexport class TelehandlerAddFormPage implements OnInit {\n\n  @ViewChild(IonContent) content: IonContent;\n  @ViewChild('target') myScrollContainer: ElementRef\n\n  pName: String = 'Telehandler'\n  teleHandlerForm: FormGroup;\n  isSubmitted: boolean = false;\n  loggedInUser: any;\n  form_percent: number = 0;\n  // showMsg: boolean = false;\n  url_id = '';\n  telehandlerData = [];\n\n  //--------------------------------------------------------Image Variables ------------------------------------------------------------------//\n\n  data_plate_image = [];\n  engine_oil_image = [];\n  hydraulic_oil_image = [];\n  equipment_inspect_image = [];\n  coolant_level_image = [];\n  belts_and_hoses_image = [];\n  wheels_tyres_image = [];\n  fire_extinguisher_image = [];\n  fuel_flash_image = [];\n  hydraulics_functional_image = [];\n  lift_arms_image = [];\n  chain_hose_image = [];\n  cap_bolts_image = [];\n  safety_stops_image = [];\n  forks_image = [];\n  overhead_guards_image = [];\n  counterweight_image = [];\n  engine_bay_components_image = [];\n  horn_image = [];\n  audible_image = [];\n  headlights_image = [];\n  turn_signals_image = [];\n  warning_brake_lights_image = [];\n  foot_brake_image = [];\n  parking_brake_image = [];\n  clutch_gear_shift_image = [];\n  engine_noise_image = [];\n  fluid_leaks_image = [];\n  dash_gauges_image = [];\n  operational_controls_image = [];\n  first_aid_kit_image = [];\n\n\n  //--------------------------------------------------------Image Variables ------------------------------------------------------------------//\n\n  constructor(\n    private fb: FormBuilder,\n    private globalService: GlobalService,\n    private toastService: ToastService,\n    private nav: NavController,\n    private loadingService: LoadingService,\n    private modalController: ModalController,\n    private sharedService: SharedService,\n    public actionSheetController: ActionSheetController,\n    private camera: Camera,\n    private alertService: AlertService,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.url_id = params['id'] != undefined ? params['id'] : '';\n      if (this.url_id != '' && this.url_id != undefined) {\n        this.loadData(this.url_id);\n      }\n    })\n\n    this.teleHandlerForm = this.fb.group({\n\n      competency: [''],\n      telehandler_number: ['TH40'],\n\n      hour_meter: [''],\n\n      data_plate: [''],\n      data_plate_comment: [''],\n      data_plate_image: [''],\n\n      engine_oil: [''],\n      engine_oil_comment: [''],\n      engine_oil_image: [''],\n\n      hydraulic_oil: [''],\n      hydraulic_oil_comment: [''],\n      hydraulic_oil_image: [''],\n\n      fuel_level: [''],\n\n      equipment_inspect: [''],\n      equipment_inspect_comment: [''],\n      equipment_inspect_image: [''],\n\n      coolant_level: [''],\n      coolant_level_comment: [''],\n      coolant_level_image: [''],\n\n      belts_and_hoses: [''],\n      belts_and_hoses_comment: [''],\n      belts_and_hoses_image: [''],\n\n      wheels_tyres: ['', Validators.required],\n      wheels_tyres_comment: [''],\n      wheels_tyres_image: [''],\n\n      fire_extinguisher: ['', Validators.required],\n      fire_extinguisher_comment: [''],\n      fire_extinguisher_image: [''],\n\n      fuel_flash: ['', Validators.required],\n      fuel_flash_comment: [''],\n      fuel_flash_image: [''],\n\n      hydraulics_functional: ['', Validators.required],\n      hydraulics_functional_comment: [''],\n      hydraulics_functional_image: [''],\n\n      lift_arms: ['', Validators.required],\n      lift_arms_comment: [''],\n      lift_arms_image: [''],\n\n      chain_hose: ['', Validators.required],\n      chain_hose_comment: [''],\n      chain_hose_image: [''],\n\n      cap_bolts: ['', Validators.required],\n      cap_bolts_comment: [''],\n      cap_bolts_image: [''],\n\n      safety_stops: ['', Validators.required],\n      safety_stops_comment: [''],\n      safety_stops_image: [''],\n\n      forks: ['', Validators.required],\n      forks_comment: [''],\n      forks_image: [''],\n\n      overhead_guards: ['', Validators.required],\n      overhead_guards_comment: [''],\n      overhead_guards_image: [''],\n\n      counterweight: ['', Validators.required],\n      counterweight_comment: [''],\n      counterweight_image: [''],\n\n      engine_bay_components: ['', Validators.required],\n      engine_bay_components_comment: [''],\n      engine_bay_components_image: [''],\n\n      horn: ['', Validators.required],\n      horn_comment: [''],\n      horn_image: [''],\n\n      audible: ['', Validators.required],\n      audible_comment: [''],\n      audible_image: [''],\n\n      headlights: ['', Validators.required],\n      headlights_comment: [''],\n      headlights_image: [''],\n\n      turn_signals: ['', Validators.required],\n      turn_signals_comment: [''],\n      turn_signals_image: [''],\n\n      warning_brake_lights: ['', Validators.required],\n      warning_brake_lights_comment: [''],\n      warning_brake_lights_image: [''],\n\n      foot_brake: ['', Validators.required],\n      foot_brake_comment: [''],\n      foot_brake_image: [''],\n\n      parking_brake: ['', Validators.required],\n      parking_brake_comment: [''],\n      parking_brake_image: [''],\n\n      clutch_gear_shift: ['', Validators.required],\n      clutch_gear_shift_comment: [''],\n      clutch_gear_shift_image: [''],\n\n      engine_noise: ['', Validators.required],\n      engine_noise_comment: [''],\n      engine_noise_image: [''],\n\n      fluid_leaks: ['', Validators.required],\n      fluid_leaks_comment: [''],\n      fluid_leaks_image: [''],\n\n      dash_gauges: ['', Validators.required],\n      dash_gauges_comment: [''],\n      dash_gauges_image: [''],\n\n      operational_controls: ['', Validators.required],\n      operational_controls_comment: [''],\n      operational_controls_image: [''],\n\n      first_aid_kit: ['', Validators.required],\n      first_aid_kit_comment: [''],\n      first_aid_kit_image: [''],\n\n      comment: [''],\n    })\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n  }\n\n  get errorControls() {\n    return this.teleHandlerForm.controls;\n  }\n\n  //------------------------------------------------------------------ Images ----------------------------------------------------------------//\n\n  async onOpenPreview(img) {\n    const modal = await this.modalController.create({\n      component: ImageModalPage,\n      cssClass: 'transparent-modal',\n      componentProps: {\n        img\n      }\n    });\n    modal.present();\n  }\n\n  async pickImage(sourceType, rowName) {\n    let image: any;\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType == 0 ? this.camera.PictureSourceType.PHOTOLIBRARY : (sourceType == 1 ? this.camera.PictureSourceType.CAMERA : 0),\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    this.camera.getPicture(options).then((imageData) => {\n      image = imageData != '' ? 'data:image/jpeg;base64,' + imageData : '';\n      if (this[rowName].length > 0) {\n        this[rowName].unshift(image);\n      } else {\n        this[rowName].push(image);\n      }\n      this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n    }, (err) => {\n      console.log(\"errOf Image \", err)\n    });\n  }\n\n  async mobileUploads(rowName) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY, rowName)\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.CAMERA, rowName);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async onSelectImage(event, type, rowName) {\n    if (type == 1) {\n      this.mobileUploads(rowName);\n    } else {\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.sharedService.getBase64(event.target.files[i]).then(image => {\n          if (this[rowName].length > 0) {\n            this[rowName].unshift(image);\n          } else {\n            this[rowName].push(image);\n          }\n\n          console.log('rowName', this[rowName]);\n          this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n          // this.teleHandlerForm.controls[rowName].setValue(image);\n        }).catch(error => {\n          console.log('error', error);\n        });\n      }\n    }\n  }\n\n  onDeleteImage(index, rowName) {\n    this[rowName].splice(index, 1);\n    this.teleHandlerForm.controls[rowName].setValue(this[rowName]);\n    this.onProgressBar('');\n  }\n\n  //------------------------------------------------------------------ Images ----------------------------------------------------------------//\n\n  validation(complete_status) {\n    if (this.teleHandlerForm.valid) {\n      this.isSubmitted = true;\n\n      // let formControlList = [];\n      // Object.keys(this.teleHandlerForm.controls).map(ele => formControlList.push(ele));\n\n      if (\n        (this.teleHandlerForm.value['data_plate'] == 'Faulty' && this.teleHandlerForm.value['data_plate_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_oil'] == 'Faulty' && this.teleHandlerForm.value['engine_oil_comment'] == '') ||\n        (this.teleHandlerForm.value['hydraulic_oil'] == 'Faulty' && this.teleHandlerForm.value['hydraulic_oil_comment'] == '') ||\n        (this.teleHandlerForm.value['equipment_inspect'] == 'Faulty' && this.teleHandlerForm.value['equipment_inspect_comment'] == '') ||\n        (this.teleHandlerForm.value['coolant_level'] == 'Faulty' && this.teleHandlerForm.value['coolant_level_comment'] == '') ||\n        (this.teleHandlerForm.value['belts_and_hoses'] == 'Faulty' && this.teleHandlerForm.value['belts_and_hoses_comment'] == '') ||\n        (this.teleHandlerForm.value['wheels_tyres'] == 'Faulty' && this.teleHandlerForm.value['wheels_tyres_comment'] == '') ||\n        (this.teleHandlerForm.value['fire_extinguisher'] == 'Faulty' && this.teleHandlerForm.value['fire_extinguisher_comment'] == '') ||\n        (this.teleHandlerForm.value['fuel_flash'] == 'Faulty' && this.teleHandlerForm.value['fuel_flash_comment'] == '') ||\n        (this.teleHandlerForm.value['hydraulics_functional'] == 'Faulty' && this.teleHandlerForm.value['hydraulics_functional_comment'] == '') ||\n        (this.teleHandlerForm.value['lift_arms'] == 'Faulty' && this.teleHandlerForm.value['lift_arms_comment'] == '') ||\n        (this.teleHandlerForm.value['chain_hose'] == 'Faulty' && this.teleHandlerForm.value['chain_hose_comment'] == '') ||\n        (this.teleHandlerForm.value['cap_bolts'] == 'Faulty' && this.teleHandlerForm.value['cap_bolts_comment'] == '') ||\n        (this.teleHandlerForm.value['safety_stops'] == 'Faulty' && this.teleHandlerForm.value['safety_stops_comment'] == '') ||\n        (this.teleHandlerForm.value['forks'] == 'Faulty' && this.teleHandlerForm.value['forks_comment'] == '') ||\n        (this.teleHandlerForm.value['overhead_guards'] == 'Faulty' && this.teleHandlerForm.value['overhead_guards_comment'] == '') ||\n        (this.teleHandlerForm.value['counterweight'] == 'Faulty' && this.teleHandlerForm.value['counterweight_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_bay'] == 'Faulty' && this.teleHandlerForm.value['engine_bay_components_comment'] == '') ||\n        (this.teleHandlerForm.value['horn'] == 'Faulty' && this.teleHandlerForm.value['horn_comment'] == '') ||\n        (this.teleHandlerForm.value['audible'] == 'Faulty' && this.teleHandlerForm.value['audible_comment'] == '') ||\n        (this.teleHandlerForm.value['headlights'] == 'Faulty' && this.teleHandlerForm.value['headlights_comment'] == '') ||\n        (this.teleHandlerForm.value['turn_signals'] == 'Faulty' && this.teleHandlerForm.value['turn_signals_comment'] == '') ||\n        (this.teleHandlerForm.value['warning_brake_lights'] == 'Faulty' && this.teleHandlerForm.value['warning_brake_lights_comment'] == '') ||\n        (this.teleHandlerForm.value['foot_brake'] == 'Faulty' && this.teleHandlerForm.value['foot_brake_comment'] == '') ||\n        (this.teleHandlerForm.value['parking_brake'] == 'Faulty' && this.teleHandlerForm.value['parking_brake_comment'] == '') ||\n        (this.teleHandlerForm.value['clutch_gear_shift'] == 'Faulty' && this.teleHandlerForm.value['clutch_gear_shift_comment'] == '') ||\n        (this.teleHandlerForm.value['engine_noise'] == 'Faulty' && this.teleHandlerForm.value['engine_noise_comment'] == '') ||\n        (this.teleHandlerForm.value['dash_gauges'] == 'Faulty' && this.teleHandlerForm.value['dash_gauges_comment'] == '') ||\n        (this.teleHandlerForm.value['operational_controls'] == 'Faulty' && this.teleHandlerForm.value['operational_controls_comment'] == '') ||\n        (this.teleHandlerForm.value['fluid_leaks'] == 'Faulty' && this.teleHandlerForm.value['fluid_leaks_comment'] == '') ||\n        (this.teleHandlerForm.value['first_aid_kit'] == 'Faulty' && this.teleHandlerForm.value['first_aid_kit_comment'] == '')\n      ) {\n        // this.loadingService.dismissLoading();\n        this.toastService.toast('Please fill all required fields.', 'danger');\n        return;\n      }\n      this.submitApi(complete_status);\n    }\n  }\n\n  submitApi(complete_status) {\n    let data = this.teleHandlerForm.value;\n    data['user_id'] = this.loggedInUser.id;\n    data['complete_status'] = complete_status;\n    let formData = { 'formData': data };\n\n    if (this.url_id != '' && this.url_id != undefined) {\n      formData['id'] = this.teleHandlerForm['id'];\n    }\n\n    console.log('formData', formData);\n\n    // this.globalService.postData('Telehandler/submit', formData).subscribe(result => {\n    //   if (result && result['status']) {\n    //     this.toastService.toast(result['message'], 'success');\n    //     this.nav.back();\n    //   } else {\n    //     this.toastService.toast(result['message'], 'danger');\n    //   }\n    // }, error => {\n    //   console.log('error', error);\n    // })\n  }\n\n  onSubmit(complete_status) {\n    if (complete_status == 1) {\n      this.validation(complete_status);\n    } else {\n      this.submitApi(complete_status);\n    }\n  }\n\n  onCompetency(event) {\n    if (event.detail.value == 'Not completed') {\n      this.alertService.alert('STOP do not proceed and see your supervisor to complete a VOC.')\n    }\n  }\n\n  onFuelLevel(event) {\n    if (event.detail.value == 'Empty') {\n      this.alertService.alert('Please ensure you fill up the Telehandler prior to use.')\n    }\n  }\n\n  onRadioButtonChange(event, rowName) {\n    this.content.scrollToPoint(0, this.myScrollContainer.nativeElement.scrollHeight, 6000);\n    let comment = rowName + '_comment';\n    let image = rowName + '_image';\n    this.teleHandlerForm.controls[comment].setValue('');\n    this.teleHandlerForm.controls[image].setValue('');\n  }\n\n  onProgressBar(event) {\n    let count = 0;\n    let formControlList = [];\n    Object.keys(this.teleHandlerForm.controls).map(ele => formControlList.push(ele));\n    formControlList.forEach(key => {\n      if (this.teleHandlerForm.value[key] && this.teleHandlerForm.value[key] != '' && this.teleHandlerForm.value[key] == 'Ok') {\n        count = (count + 3);\n      } else if (this.teleHandlerForm.value[key] && this.teleHandlerForm.value[key] != '' && this.teleHandlerForm.value[key] != 'Ok') {\n        count = ++count;\n      }\n    })\n    this.form_percent = ((1 / Object.keys(this.teleHandlerForm.controls).length) * count);\n\n    // Object.values(this.teleHandlerForm.value).map(ele => formControlList.push(ele));\n    // formControlList.forEach(key => {\n    //   if (key != '') {\n    //     count = ++count;\n    //   }\n    // })\n    // this.form_percent = ((1 / Object.values(this.teleHandlerForm.value).length) * count);\n  }\n\n  loadData(id) {\n    this.globalService.getData('add_form/getSingleData?table_name=telehandler&id=' + id).subscribe(result => {\n      if (result && result['data'] && result['data'][0]) {\n        this.telehandlerData = result['data'][0];\n        this.teleHandlerForm.patchValue(this.telehandlerData);\n        this.onProgressBar('');\n      }\n    }), error => {\n      console.log(error);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    public loadingController: LoadingController\n  ) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n}\n","import { Injectable, } from '@angular/core';\nimport { GlobalService } from '../global-service/global.service';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  notViewNotiCount: any = 0;\n\n  constructor(\n    private globalService: GlobalService,\n    public actionSheetController: ActionSheetController,\n    public camera: Camera\n  ) { }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // fileToBase64 = (file) => {\n  //   let image: any;\n  //   let reader = new FileReader();\n  //   reader.onload = (function (file) {\n  //     return function (e) {\n  //       image = e.target.result;\n  //       this.base64Image = e.target.result;\n  //     };\n  //   })(file);\n  //   reader.readAsDataURL(file);\n  // };\n\n  // convertDataURIToBinary(dataURI) {\n  //   var BASE64_MARKER = ';base64,';\n  //   var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  //   var base64 = dataURI.substring(base64Index);\n  //   var raw = window.atob(base64);\n  //   var rawLength = raw.length;\n  //   var array = new Uint8Array(new ArrayBuffer(rawLength));\n  //   for (let i = 0; i < rawLength; i++) {\n  //     array[i] = raw.charCodeAt(i);\n  //   }\n  //   return array;\n  // }\n\n  async mobileUploadImages() {\n    let images: any;\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.CAMERA);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async pickImage(sourceType) {\n    console.log('sourceType', sourceType);\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    await this.camera.getPicture(options).then(\n      (imageData) => {\n        console.log('imageData', imageData);\n        // const file = this.DataURIToBlob('data:image/jpeg;base64,' + imageData);\n        let image = 'data:image/jpeg;base64,' + imageData;\n        console.log('pickImage', image);\n        return image;\n      },\n      (err) => {\n        console.log(\"errOf Image \", err)\n      }\n    );\n  }\n}\n","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\nion-footer {\\n  margin-bottom: 10px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6ImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmlvbi1mb290ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW9uLXNsaWRlcyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZWxlaGFuZGxlci1hZGQtZm9ybS5wYWdlLnNjc3MifQ== */\";","export default \"\\n<ion-content>\\n  <ion-slides [options]=\\\"sliderOpts\\\">\\n    <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [src]=\\\"img\\\">\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(false)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"remove\\\" slot=\\\"start\\\"></ion-icon>\\n        out\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n        close\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(true)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"add\\\" slot=\\\"start\\\"></ion-icon>\\n        in\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";","export default \"<ion-content>\\n  <!-- <app-header [pageName]=\\\"pName\\\"></app-header> -->\\n  <div class=\\\"toolbar\\\">\\n    <ion-text *ngIf=\\\"url_id == ''\\\">Telehandler</ion-text>\\n    <ion-text *ngIf=\\\"url_id != ''\\\">Edit Telehandler</ion-text>\\n    <ion-buttons class=\\\"back\\\">\\n      <ion-button (click)=\\\"nav.back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons class='saveBtn' (click)=\\\"onSubmit(0)\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"save-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </div>\\n\\n  <div class=\\\"container\\\" #target>\\n    <ion-card (ionChange)=\\\"onProgressBar($event)\\\">\\n      <ion-grid [formGroup]=\\\"teleHandlerForm\\\">\\n\\n        <ion-radio-group formControlName=\\\"competency\\\" (ionChange)=\\\"onCompetency($event)\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-label>Verification of Competency : </ion-label>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Completed</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Completed\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Not completed</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Not completed\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n\\n        <ion-grid *ngIf=\\\"teleHandlerForm.value['competency'] != ''\\\">\\n          <ion-row>\\n            <ion-label> Telehandler Number : </ion-label>\\n          </ion-row>\\n          <ion-row>\\n            <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"telehandler_number\\\"></ion-input>\\n          </ion-row>\\n        </ion-grid>\\n\\n        <ion-grid\\n          *ngIf=\\\"(teleHandlerForm.value['competency'] != '' && teleHandlerForm.value['telehandler_number'] != '' )\\\">\\n          <ion-row>\\n            <ion-label> Hour / Meter :</ion-label>\\n          </ion-row>\\n          <ion-row>\\n            <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"hour_meter\\\"></ion-input>\\n          </ion-row>\\n        </ion-grid>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['hour_meter'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"data_plate\\\" (ionChange)=\\\"onRadioButtonChange($event, 'data_plate')\\\">\\n            <ion-row>\\n              <ion-col size=\\\" 12\\\">\\n                <ion-label>Data plate attached and legible : </ion-label>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.data_plate.value && errorControls.data_plate.value =='Faulty'\\\">\\n\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"data_plate_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.data_plate_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'data_plate_image')\\\">Upload\\n                Image</ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"data_plate_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'data_plate_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"data_plate_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let dataPlateImage of data_plate_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"dataPlateImage\\\" tappable (click)=\\\"onOpenPreview(dataPlateImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'data_plate_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['data_plate'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"engine_oil\\\" (ionChange)=\\\"onRadioButtonChange($event, 'engine_oil')\\\">\\n            <ion-row>\\n              <ion-col size=\\\" 12\\\">\\n                <ion-label> Engine Oil Level :</ion-label>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.engine_oil.value  && errorControls.engine_oil.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_oil_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_oil_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_oil_image')\\\">Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"engine_oil_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'engine_oil_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"engine_oil_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let engineOilImage of engine_oil_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"engineOilImage\\\" tappable (click)=\\\"onOpenPreview(engineOilImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_oil_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['engine_oil'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"hydraulic_oil\\\" (ionChange)=\\\"onRadioButtonChange($event, 'hydraulic_oil')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                Hydraulic Oil :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.hydraulic_oil.value && errorControls.hydraulic_oil.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"hydraulic_oil_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.hydraulic_oil_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'hydraulic_oil_image')\\\">Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"hydraulic_oil_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'hydraulic_oil_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"hydraulic_oil_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let hydraulicOilImage of hydraulic_oil_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"hydraulicOilImage\\\" tappable (click)=\\\"onOpenPreview(hydraulicOilImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'hydraulic_oil_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['hydraulic_oil'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"fuel_level\\\" (ionChange)=\\\"onFuelLevel($event)\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                Fuel Level :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Full</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Full\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Half</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Half\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Empty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Empty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['fuel_level'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"equipment_inspect\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'equipment_inspect')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                Verify Equipment Inspections are Current :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.equipment_inspect.value && errorControls.equipment_inspect.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"equipment_inspect_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.equipment_inspect_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'equipment_inspect_image')\\\">\\n                Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"equipment_inspect_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'equipment_inspect_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"equipment_inspect_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let equipmentInspectImage of equipment_inspect_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"equipmentInspectImage\\\" tappable (click)=\\\"onOpenPreview(equipmentInspectImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'equipment_inspect_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['equipment_inspect'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"coolant_level\\\" (ionChange)=\\\"onRadioButtonChange($event, 'coolant_level')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                Coolant Level :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.coolant_level.value && errorControls.coolant_level.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"coolant_level_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.coolant_level_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'coolant_level_image')\\\">Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"coolant_level_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'coolant_level_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"coolant_level_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let coolantLevelImage of coolant_level_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"coolantLevelImage\\\" tappable (click)=\\\"onOpenPreview(coolantLevelImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'coolant_level_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['coolant_level'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"belts_and_hoses\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'belts_and_hoses')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                Belts and Hoses :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <div *ngIf=\\\"errorControls.belts_and_hoses.value && errorControls.belts_and_hoses.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"belts_and_hoses_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.belts_and_hoses_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'belts_and_hoses_image')\\\">\\n                Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"belts_and_hoses_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'belts_and_hoses_image')\\\">\\n              </ion-input>\\n            </div>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"belts_and_hoses_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let beltsAndHosesImage of belts_and_hoses_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"beltsAndHosesImage\\\" tappable (click)=\\\"onOpenPreview(beltsAndHosesImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'belts_and_hoses_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['belts_and_hoses'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"wheels_tyres\\\" (ionChange)=\\\"onRadioButtonChange($event, 'wheels_tyres')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Wheels, Tyres and nuts :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.wheels_tyres.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.wheels_tyres.value && errorControls.wheels_tyres.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"wheels_tyres_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.wheels_tyres_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'wheels_tyres_image')\\\">Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"wheels_tyres_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'wheels_tyres_image')\\\">\\n              </ion-input>\\n            </div>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"wheels_tyres_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let wheelsTyresImage of wheels_tyres_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"wheelsTyresImage\\\" tappable (click)=\\\"onOpenPreview(wheelsTyresImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'wheels_tyres_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['wheels_tyres'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"fire_extinguisher\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'fire_extinguisher')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Fire-Extinguisher :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.fire_extinguisher.value && errorControls.fire_extinguisher.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fire_extinguisher_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fire_extinguisher_image')\\\">\\n                Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"fire_extinguisher_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'fire_extinguisher_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"fire_extinguisher_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let fireExtinguisherImage of fire_extinguisher_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"fireExtinguisherImage\\\" tappable (click)=\\\"onOpenPreview(fireExtinguisherImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fire_extinguisher_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['fire_extinguisher'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"fuel_flash\\\" (ionChange)=\\\"onRadioButtonChange($event, 'fuel_flash')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Fuel Flash Screen: in Place :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fuel_flash.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.fuel_flash.value && errorControls.fuel_flash.value =='Faulty'\\\">\\n            <ion-row>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fuel_flash_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fuel_flash_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fuel_flash_image')\\\">Upload\\n                Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"fuel_flash_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'fuel_flash_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"fuel_flash_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let fuelFlashImage of fuel_flash_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"fuelFlashImage\\\" tappable (click)=\\\"onOpenPreview(fuelFlashImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fuel_flash_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['fuel_flash'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"hydraulics_functional\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'hydraulics_functional')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Hydraulics Functional and No Leaks :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n            *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div\\n            *ngIf=\\\"errorControls.hydraulics_functional.value  && errorControls.hydraulics_functional.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"hydraulics_functional_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                (click)=\\\"onSelectImage($event, 1, 'hydraulics_functional_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"hydraulics_functional_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'hydraulics_functional_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"hydraulics_functional_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let hydraulicsFunctionalImage of hydraulics_functional_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"hydraulicsFunctionalImage\\\" tappable\\n                        (click)=\\\"onOpenPreview(hydraulicsFunctionalImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'hydraulics_functional_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['hydraulics_functional'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"lift_arms\\\" (ionChange)=\\\"onRadioButtonChange($event, 'lift_arms')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Boom, Lift Arms, Extending Structure :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.lift_arms.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.lift_arms.value && errorControls.lift_arms.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"lift_arms_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.lift_arms_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'lift_arms_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"lift_arms_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'lift_arms_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"lift_arms_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let liftArmsImage of lift_arms_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"liftArmsImage\\\" tappable\\n                        (click)=\\\"onOpenPreview(liftArmsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'lift_arms_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['lift_arms'] != ''\\\">\\n          <ion-row>\\n            In place / Correctly Tensioned\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"chain_hose\\\" (ionChange)=\\\"onRadioButtonChange($event, 'chain_hose')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Chain and Hose Guards :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.chain_hose.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.chain_hose.value && errorControls.chain_hose.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"chain_hose_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.chain_hose_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'chain_hose_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"chain_hose_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'chain_hose_image')\\\">\\n              </ion-input>\\n            </div>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"chain_hose_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let chainHoseImage of chain_hose_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"chainHoseImage\\\" tappable (click)=\\\"onOpenPreview(chainHoseImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'chain_hose_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['chain_hose'] != ''\\\">\\n          <ion-row>\\n            <ion-col> In place</ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"cap_bolts\\\" (ionChange)=\\\"onRadioButtonChange($event, 'cap_bolts')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Mast Cap Bolts :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.cap_bolts.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.cap_bolts.value && errorControls.cap_bolts.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"cap_bolts_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.cap_bolts_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'cap_bolts_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"cap_bolts_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'cap_bolts_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"cap_bolts_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let capBoltsImage of cap_bolts_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"capBoltsImage\\\" tappable (click)=\\\"onOpenPreview(capBoltsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'cap_bolts_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['cap_bolts'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">In place and secure</ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"safety_stops\\\" (ionChange)=\\\"onRadioButtonChange($event, 'safety_stops')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Safety Stops and Latches :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.safety_stops.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.safety_stops.value && errorControls.safety_stops.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"safety_stops_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.safety_stops_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'safety_stops_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"safety_stops_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'safety_stops_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"safety_stops_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let safetyStopsImage of safety_stops_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"safetyStopsImage\\\" tappable (click)=\\\"onOpenPreview(safetyStopsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'safety_stops_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['safety_stops'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\"> In place</ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"forks\\\" (ionChange)=\\\"onRadioButtonChange($event, 'forks')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Forks :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.forks.value && errorControls.forks.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"forks_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'forks_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"forks_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'forks_image')\\\">\\n              </ion-input>\\n            </div>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"forks_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let forksImage of forks_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"forksImage\\\" tappable (click)=\\\"onOpenPreview(forksImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'forks_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['forks'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\"> Condition / Tips Even</ion-col>\\n          </ion-row>\\n\\n          <ion-radio-group formControlName=\\\"overhead_guards\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'overhead_guards')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Overhead Guards :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.overhead_guards.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.overhead_guards.value && errorControls.overhead_guards.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"overhead_guards_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.overhead_guards_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'overhead_guards_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"overhead_guards_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'overhead_guards_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"overhead_guards_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let overheadGuardsImage of overhead_guards_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"overheadGuardsImage\\\" tappable (click)=\\\"onOpenPreview(overheadGuardsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'overhead_guards_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['overhead_guards'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              In place / Condition\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"counterweight\\\" (ionChange)=\\\"onRadioButtonChange($event, 'counterweight')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Counterweight / Counterweight bolts :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.counterweight.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.counterweight.value && errorControls.counterweight.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"counterweight_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.counterweight_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'counterweight_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"counterweight_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'counterweight_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"counterweight_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let counterweightImage of counterweight_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"counterweightImage\\\" tappable (click)=\\\"onOpenPreview(counterweightImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'counterweight_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['counterweight'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Condition / Leaks\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"engine_bay_components\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'engine_bay_components')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Engine Bay Components :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n            *ngIf=\\\"isSubmitted && errorControls.engine_bay_components.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div\\n            *ngIf=\\\"errorControls.engine_bay_components.value && errorControls.engine_bay_components.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_bay_components_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.engine_bay_components_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                (click)=\\\"onSelectImage($event, 1, 'engine_bay_components_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"engine_bay_components_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'engine_bay_components_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"engine_bay_components_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let engineBayComponentsImage of engine_bay_components_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"engineBayComponentsImage\\\" tappable (click)=\\\"onOpenPreview(engineBayComponentsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_bay_components_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['engine_bay_components'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Operating\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"horn\\\" (ionChange)=\\\"onRadioButtonChange($event, 'horn')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Horn :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.horn.value && errorControls.horn.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"horn_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'horn_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"horn_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'horn_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"horn_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let hornImage of horn_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"hornImage\\\" tappable (click)=\\\"onOpenPreview(hornImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'horn_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['horn'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"audible\\\" (ionChange)=\\\"onRadioButtonChange($event, 'audible')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Audible, Visual Warning Devices :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.audible.value && errorControls.audible.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"audible_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'audible_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"audible_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'audible_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"audible_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let audibleImage of audible_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"audibleImage\\\" tappable (click)=\\\"onOpenPreview(audibleImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'audible_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['audible'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"headlights\\\" (ionChange)=\\\"onRadioButtonChange($event, 'headlights')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Headlights :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.headlights.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.headlights.value && errorControls.headlights.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"headlights_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.headlights_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'headlights_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"headlights_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'headlights_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"headlights_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let headlightsImage of headlights_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"headlightsImage\\\" tappable (click)=\\\"onOpenPreview(headlightsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'headlights_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['headlights'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"turn_signals\\\" (ionChange)=\\\"onRadioButtonChange($event, 'turn_signals')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Turn Signals :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.turn_signals.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.turn_signals.value && errorControls.turn_signals.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"turn_signals_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.turn_signals_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'turn_signals_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"turn_signals_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'turn_signals_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"turn_signals_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let turnSignalsImage of turn_signals_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"turnSignalsImage\\\" tappable (click)=\\\"onOpenPreview(turnSignalsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'turn_signals_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['turn_signals'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"warning_brake_lights\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'warning_brake_lights')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Warning / Brake Lights :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n            *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.warning_brake_lights.value && errorControls.warning_brake_lights.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"warning_brake_lights_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                (click)=\\\"onSelectImage($event, 1, 'warning_brake_lights_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"warning_brake_lights_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'warning_brake_lights_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"warning_brake_lights_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let warningBrakeLightsImage of warning_brake_lights_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"warningBrakeLightsImage\\\" tappable (click)=\\\"onOpenPreview(warningBrakeLightsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'warning_brake_lights_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['warning_brake_lights'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"foot_brake\\\" (ionChange)=\\\"onRadioButtonChange($event, 'foot_brake')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Foot Brake :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.foot_brake.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.foot_brake.value && errorControls.foot_brake.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"foot_brake_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.foot_brake_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'foot_brake_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"foot_brake_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'foot_brake_image')\\\">\\n              </ion-input>\\n            </div>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"foot_brake_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let footBrakeImage of foot_brake_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"footBrakeImage\\\" tappable (click)=\\\"onOpenPreview(footBrakeImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'foot_brake_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['foot_brake'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Pedal Holds / Smooth Stop\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"parking_brake\\\" (ionChange)=\\\"onRadioButtonChange($event, 'parking_brake')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Parking Brake :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.parking_brake.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.parking_brake.value && errorControls.parking_brake.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"parking_brake_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.parking_brake_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'parking_brake_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"parking_brake_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'parking_brake_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"parking_brake_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let parkingBrakeImage of parking_brake_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"parkingBrakeImage\\\" tappable (click)=\\\"onOpenPreview(parkingBrakeImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'parking_brake_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['parking_brake'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Holds against Accelerator\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"clutch_gear_shift\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'clutch_gear_shift')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Clutch / Gear Shift :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.clutch_gear_shift.value && errorControls.clutch_gear_shift.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"clutch_gear_shift_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'clutch_gear_shift_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"clutch_gear_shift_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'clutch_gear_shift_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"clutch_gear_shift_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let clutchGearShiftImage of clutch_gear_shift_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"clutchGearShiftImage\\\" tappable (click)=\\\"onOpenPreview(clutchGearShiftImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'clutch_gear_shift_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['clutch_gear_shift'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Smooth operation\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"engine_noise\\\" (ionChange)=\\\"onRadioButtonChange($event, 'engine_noise')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Engine Noise :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_noise.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.engine_noise.value && errorControls.engine_noise.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_noise_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_noise_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_noise_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"engine_noise_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'engine_noise_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"engine_noise_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let engineNoiseImage of engine_noise_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"engineNoiseImage\\\" tappable (click)=\\\"onOpenPreview(engineNoiseImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'engine_noise_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['engine_noise'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Sounds Normal\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"dash_gauges\\\" (ionChange)=\\\"onRadioButtonChange($event, 'dash_gauges')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Dash Gauges :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.dash_gauges.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.dash_gauges.value && errorControls.dash_gauges.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"dash_gauges_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.dash_gauges_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'dash_gauges_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"dash_gauges_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'dash_gauges_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"dash_gauges_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let dashGaugesImage of dash_gauges_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"dashGaugesImage\\\" tappable (click)=\\\"onOpenPreview(dashGaugesImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'dash_gauges_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['dash_gauges'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"operational_controls\\\"\\n            (ionChange)=\\\"onRadioButtonChange($event, 'operational_controls')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> Operational Controls :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <!-- </ion-item> -->\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n            *ngIf=\\\"isSubmitted && errorControls.operational_controls.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.operational_controls.value && errorControls.operational_controls.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"operational_controls_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n              *ngIf=\\\"isSubmitted && errorControls.operational_controls_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\"\\n                (click)=\\\"onSelectImage($event, 1, 'operational_controls_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"operational_controls_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'operational_controls_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"operational_controls_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let operationalControlsImage of operational_controls_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"operationalControlsImage\\\" tappable (click)=\\\"onOpenPreview(operationalControlsImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'operational_controls_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['operational_controls'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Smooth operation\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"fluid_leaks\\\" (ionChange)=\\\"onRadioButtonChange($event, 'fluid_leaks')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span>Fluid Leaks :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <!-- </ion-item> -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fluid_leaks.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.fluid_leaks.value && errorControls.fluid_leaks.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fluid_leaks_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fluid_leaks_comment.value  == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fluid_leaks_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"fluid_leaks_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'fluid_leaks_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"fluid_leaks_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let fluidLeaksImage of fluid_leaks_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"fluidLeaksImage\\\" tappable (click)=\\\"onOpenPreview(fluidLeaksImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'fluid_leaks_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"teleHandlerForm.value['fluid_leaks'] != ''\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              Under truck and Near Hoses\\n            </ion-col>\\n          </ion-row>\\n          <ion-radio-group formControlName=\\\"first_aid_kit\\\" (ionChange)=\\\"onRadioButtonChange($event, 'first_aid_kit')\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <span class=\\\"error\\\">* </span> First Aid Kit :\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <!-- </ion-item> -->\\n          <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.first_aid_kit.errors?.required\\\">\\n            Please select value.\\n          </ion-item>\\n\\n          <div *ngIf=\\\"errorControls.first_aid_kit.value && errorControls.first_aid_kit.value =='Faulty'\\\">\\n            <ion-row>\\n              <span class=\\\"error\\\">* </span>\\n              <ion-label> Comment : </ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"first_aid_kit_comment\\\">\\n              </ion-textarea>\\n            </ion-row>\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.first_aid_kit_comment.value == ''\\\">\\n              Please enter comment.\\n            </ion-item>\\n\\n            <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n              <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'first_aid_kit_image')\\\">\\n                Upload Image\\n              </ion-button>\\n            </ion-row>\\n\\n            <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n              <ion-row>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Upload Image :</ion-label>\\n                </ion-item>\\n              </ion-row>\\n              <ion-input type=\\\"file\\\" formControlName=\\\"first_aid_kit_image\\\" multiple\\n                (change)=\\\"onSelectImage($event, 2, 'first_aid_kit_image')\\\">\\n              </ion-input>\\n            </div>\\n\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"first_aid_kit_image.length > 0\\\">\\n              <ion-slide *ngFor=\\\"let firstAidKitImage of first_aid_kit_image; let i=index\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"11\\\">\\n                      <img [src]=\\\"firstAidKitImage\\\" tappable (click)=\\\"onOpenPreview(firstAidKitImage)\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\">\\n                      <p class=\\\"question\\\">\\n                        <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage(i, 'first_aid_kit_image')\\\"></ion-icon>\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n        </div>\\n\\n        <ion-grid *ngIf=\\\"teleHandlerForm.value['first_aid_kit'] != ''\\\">\\n          <ion-row>\\n            <ion-label>Comment : </ion-label>\\n          </ion-row>\\n          <ion-row>\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"comment\\\">\\n            </ion-textarea>\\n          </ion-row>\\n        </ion-grid>\\n\\n        <div *ngIf=\\\"teleHandlerForm.valid\\\">\\n          <p>\\n            <ion-text color=\\\"danger\\\">By clicking the submit button below you are stating that you have done the safety\\n              check on the fork truck to the best of you ability and that all details in this inspection are true and\\n              correct at the time of the inspection.</ion-text>\\n          </p>\\n          <p>\\n            <ion-text color=\\\"tertiary\\\"> Your name, date and the time the inspection is submitted will also be added to\\n              this report.</ion-text>\\n          </p>\\n        </div>\\n\\n        <ion-grid class=\\\"progress-bar\\\">\\n          <ion-row>\\n            <ion-col size=\\\"10.5\\\">\\n              Form progress bar\\n            </ion-col>\\n            <ion-col size=\\\"1.5\\\">\\n              {{(form_percent*100) | number : '1.0-0'}}{{'%'}}\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-progress-bar [value]=\\\"form_percent\\\"></ion-progress-bar>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n\\n        <ion-button *ngIf=\\\"url_id == '' && ((form_percent*100) | number : '1.0-0') == 100\\\" (click)=\\\"onSubmit(1)\\\"\\n          class=\\\"btn\\\">SUBMIT </ion-button>\\n\\n        <ion-button *ngIf=\\\"url_id != '' && ((form_percent*100) | number : '1.0-0') == 100 \\\" (click)=\\\"onSubmit(1)\\\"\\n          class=\\\"btn\\\">Update</ion-button>\\n\\n      </ion-grid>\\n    </ion-card>\\n  </div>\\n\\n</ion-content>\";"],"sourceRoot":"webpack:///"}