{"version":3,"sources":["webpack:///src/app/modals/image-modal/image-modal.page.ts","webpack:///src/app/pages/home/safety-menu/incident/incident-details/incident-details-routing.module.ts","webpack:///src/app/pages/home/safety-menu/incident/incident-details/incident-details.module.ts","webpack:///src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.ts","webpack:///src/app/services/global-service/global.service.ts","webpack:///src/app/modals/image-modal/image-modal.page.scss","webpack:///src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.scss","webpack:///src/app/modals/image-modal/image-modal.page.html","webpack:///src/app/pages/home/safety-menu/incident/incident-details/incident-details.page.html"],"names":["ImageModalPage","modalController","sliderOpts","zoom","console","log","img","slides","update","zoomIn","getSwiper","slider","out","dismiss","ModalController","ViewChild","IonSlides","Input","Component","selector","template","routes","path","component","IncidentDetailsPage","IncidentDetailsPageRoutingModule","NgModule","imports","RouterModule","exports","IncidentDetailsPageModule","CommonModule","FormsModule","IonicModule","declarations","HeaderComponent","global","activatedRoute","changeDetectorRef","pName","incidentDetails","classificationList","slidesPerView","spaceBetween","centeredSlides","loadData","presentLoading","params","subscribe","getData1","result","split","dismissLoading","error","create","cssClass","componentProps","modal","present","GlobalService","ActivatedRoute","ChangeDetectorRef","toastController","http","loadingController","baseUrl","baseUrl1","user","gm","investigator","manager","supervisior","formType_user","formType_investigator","msg","message","duration","mode","color","toast","type","animated","loading","header","HttpHeaders","set","url","headers","setHeader","get","data","post","ToastController","HttpClient","LoadingController","Injectable","providedIn"],"mappings":"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","file":"src_app_pages_home_safety-menu_incident_incident-details_incident-details_module_ts-es5.js","sourcesContent":["\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, IonSlides } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.page.html',\n  styleUrls: ['./image-modal.page.scss'],\n})\nexport class ImageModalPage implements OnInit {\n\n  @ViewChild(IonSlides) slides: IonSlides;\n  @Input('img') img: any;\n\n  sliderOpts = {\n    zoom: true\n  };\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n\n    console.log('img', this.img);\n\n    console.log('slides', this.slides);\n  }\n\n  ionViewDidEnter() {\n    this.slides.update();\n  }\n\n  async zoom(zoomIn: boolean) {\n    const slider = await this.slides.getSwiper();\n    const zoom = slider.zoom;\n    zoomIn ? zoom.in() : zoom.out();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDetailsPage } from './incident-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDetailsPageRoutingModule } from './incident-details-routing.module';\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\nimport { IncidentDetailsPage } from './incident-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDetailsPageRoutingModule\n  ],\n  declarations: [\n    IncidentDetailsPage,\n    HeaderComponent\n  ]\n})\nexport class IncidentDetailsPageModule { }\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { ModalController, IonSlides } from '@ionic/angular';\nimport { ImageModalPage } from 'src/app/modals/image-modal/image-modal.page';\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-incident-details',\n  templateUrl: './incident-details.page.html',\n  styleUrls: ['./incident-details.page.scss'],\n})\nexport class IncidentDetailsPage implements OnInit {\n\n  pName: String = 'Incident Details';\n  incidentDetails: any = [];\n  classificationList = [];\n\n  sliderOpts = {\n    zoom: false,\n    slidesPerView: 1.5,\n    spaceBetween: 20,\n    centeredSlides: true\n  };\n\n  constructor(\n    private global: GlobalService,\n    private activatedRoute: ActivatedRoute,\n    private modalController: ModalController,\n    private changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.global.presentLoading();\n    this.activatedRoute.params.subscribe(\n      (params: Params) => {\n        this.global.getData1('add_form/getIncidentFormByID/' + params['incident_id']).subscribe(result => {\n          console.log('result', result);\n          if (result && result['data'] && result['data'][0]) {\n            this.incidentDetails = result['data'][0];\n            this.classificationList = this.incidentDetails['classification_value'].split(',');\n            this.global.dismissLoading();\n          }\n          this.global.dismissLoading();\n        }), error => {\n          this.global.dismissLoading();\n          console.log(error);\n        }\n        this.global.dismissLoading();\n      }\n    ), error => {\n      this.global.dismissLoading()\n      console.log('param error', error)\n    }\n  }\n\n  async onOpenPreview(img) {\n    const modal = await this.modalController.create({\n      component: ImageModalPage,\n      cssClass: 'transparent-modal',\n      componentProps: {\n        img\n      }\n    });\n    modal.present();\n  }\n\n}\n","import { LoadingController, ToastController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  baseUrl: string = 'https://mforms-api-devel.horts.com.au/';\n  baseUrl1: string = 'https://mforms-api-devel.horts.com.au/api/';\n\n  //Role \n  user: any = \"31\";\n  gm: any = \"32\";\n  investigator: any = \"33\";\n  manager: any = \"34\";\n  supervisior: any = \"35\";\n  formType_user = 1;\n  formType_investigator = 2;\n\n  constructor(\n    public toastController: ToastController,\n    public http: HttpClient,\n    public loadingController: LoadingController\n  ) { }\n\n  async presentToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      mode: \"ios\",\n      color: \"dark\"\n    });\n    toast.present();\n  }\n\n  async toast(msg, type) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      // mode: \"ios\",\n      color: type,\n      animated: true,\n    });\n    toast.present();\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n\n  setHeader() {\n    let header = new HttpHeaders()\n      .set('apikey', 'as*37486a*()HGY')\n      .set(\"Access-Control-Allow-Origin\", \"*\")\n      .set(\"Access-Control-Allow-Headers\", \"*\")\n      .set(\"Access-Control-Allow-Methods\", \"DELETE, POST, GET, OPTIONS\")\n      .set(\"Access-Control-Allow-Headers\", \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\");\n    // if (localStorage.getItem(\"token\") && localStorage.getItem(\"token\") != \"\")\n    //   header.append(\"token\", localStorage.getItem(\"token\"));\n    return header;\n  }\n\n  getData(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl + url, { headers: headers });\n  }\n\n  postData(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl + url, data, { headers: headers });\n  }\n\n  // --------------------------------------------------New Services ---------------------------------------------//\n\n  postData1(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl1 + url, data, { headers: headers });\n  }\n\n  getData1(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl1 + url, { headers: headers });\n    // return this.http.get(this.baseUrl1 + url, { headers: headers }).pipe(\n    //   map((response) => {\n    //     console.log('response', response);\n    //     if (!response['status']) {\n    //       throw new Error('Value expected!');\n    //     }\n    //     response;\n    //   }),\n    //   catchError(() => of())\n    // );\n  }\n}\n// ---------------------------------------------  New Services --------------------------------------------------//","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\nion-footer {\\n  margin-bottom: 10px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6ImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmlvbi1mb290ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW9uLXNsaWRlcyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmNpZGVudC1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\";","export default \"\\n<ion-content>\\n  <ion-slides [options]=\\\"sliderOpts\\\">\\n    <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [src]=\\\"img\\\">\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(false)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"remove\\\" slot=\\\"start\\\"></ion-icon>\\n        out\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n        close\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(true)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"add\\\" slot=\\\"start\\\"></ion-icon>\\n        in\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";","export default \"<ion-content>\\n  <app-header [pageName]=\\\"pName\\\"></app-header>\\n\\n  <div class=\\\"ion-padding-start ion-padding-end container\\\">\\n    <!-- <div class=\\\"activeBackground\\\"> -->\\n    <!----------------------------------------------------------- Incident Detalis ---------------------------------------------------->\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>Incident </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_value}}</p>\\n        <ion-item *ngIf=\\\"incidentDetails?.incident_value == 'Near Miss'\\\" lines=\\\"none\\\">\\n          <ion-row>\\n            <ion-col>\\n              <p class=\\\"question\\\">Who witnessed the near miss ? :</p>\\n              <p class=\\\"value\\\">{{incidentDetails?.incident_near_miss}}</p>\\n              <p class=\\\"question\\\">Possible consequence under different circumstances :</p>\\n              <p class=\\\"value\\\">{{incidentDetails?.incident_near_miss_other}}</p>\\n            </ion-col>\\n          </ion-row>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n    <!----------------------------------------------------------- Incident Detalis ---------------------------------------------------->\\n\\n    <!------------------------------------------------------------ Photography -------------------------------------------------------->\\n    <ion-card\\n      *ngIf=\\\"incidentDetails && incidentDetails['photography_image'] && incidentDetails['photography_image'].length && incidentDetails['photography_image'].length > 0\\\">\\n      <ion-card-header>\\n        <ion-card-title>\\n          Photography\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\">\\n          <ion-slide *ngFor=\\\"let photography_image of incidentDetails['photography_image']\\\">\\n            <img [src]=\\\"photography_image\\\" tappable (click)=\\\"onOpenPreview(photography_image)\\\">\\n          </ion-slide>\\n        </ion-slides>\\n      </ion-card-content>\\n    </ion-card>\\n    <!------------------------------------------------------------ Photography -------------------------------------------------------->\\n\\n    <!----------------------------------------------------------- Incident Description ------------------------------------------------>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Incident Description\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Description of incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_description}}</p>\\n        <p class=\\\"question\\\">Immediate action taken :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.incident_description_action}}</p>\\n        <p class=\\\"question\\\">What could have been done differently ? :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.seen_differently}}</p>\\n        <p class=\\\"question\\\">Was there any Witnesses of the incident ? :</p>\\n        <p class=\\\"value\\\">{{incidentDetails?.was_there_any_witness_of_the_incident}}</p>\\n\\n\\n        <div *ngIf=\\\"incidentDetails?.incident_description_alcohol_test != '' \\\">\\n          <p class=\\\"question\\\">Alcohol test completed :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.incident_description_alcohol_test}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['alcohol_test_image'] && incidentDetails['alcohol_test_image'].length > 0\\\">\\n            <ion-slide *ngFor=\\\"let alcohol_test_image of incidentDetails['alcohol_test_image']\\\">\\n              <img [src]=\\\"alcohol_test_image\\\" tappable (click)=\\\"onOpenPreview(alcohol_test_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n\\n        <div *ngIf=\\\"incidentDetails?.drug_test_completed !='' \\\">\\n          <p class=\\\"question\\\">Drug test completed :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.drug_test_completed}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['drug_test_image'] && incidentDetails['drug_test_image'].length > 0\\\">\\n            <ion-slide *ngFor=\\\"let drug_test_image of incidentDetails['drug_test_image']\\\">\\n              <img [src]=\\\"drug_test_image\\\" tappable (click)=\\\"onOpenPreview(drug_test_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n\\n        <div *ngIf=\\\"incidentDetails?.return_to_alternate_duties!==''\\\">\\n          <p class=\\\"question\\\">Return to Alternate Duties :</p>\\n          <p class=\\\"value\\\">{{incidentDetails?.return_to_alternate_duties}}</p>\\n          <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n            *ngIf=\\\"incidentDetails['return_to_alternate_duties_image'] && incidentDetails['return_to_alternate_duties_image'].length > 0\\\">\\n            <ion-slide\\n              *ngFor=\\\"let return_to_alternate_duties_image of incidentDetails['return_to_alternate_duties_image']\\\">\\n              <img [src]=\\\"return_to_alternate_duties_image\\\" tappable\\n                (click)=\\\"onOpenPreview(return_to_alternate_duties_image)\\\">\\n            </ion-slide>\\n          </ion-slides>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n    <!----------------------------------------------------------- Incident Description ------------------------------------------------>\\n\\n    <!------------------------------------------------------------- Classification ---------------------------------------------------->\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Classification\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"question\\\">Classification :</p>\\n        <ion-row class='ion-no-padding'>\\n          <ion-col size=\\\"6\\\" *ngFor=\\\"let classificationValue of classificationList; let i=index\\\">\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n              <p class=\\\"value\\\">{{classificationValue}}</p>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <p class=\\\"question\\\">Date of Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['date_of_incident'] }}</p>\\n\\n        <p class=\\\"question\\\">Time Of Incident :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['time_of_incident']}}</p>\\n\\n        <p class=\\\"question\\\">Date Reported :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['date_reported'] }}</p>\\n\\n        <p class=\\\"question\\\">Time Reported :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['time_reported'] }}</p>\\n\\n        <p class=\\\"question\\\">Location Type :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_location_option'] }}</p>\\n\\n        <p class=\\\"value\\\">{{incidentDetails['classification_location_value'] }}</p>\\n\\n        <!-- <ion-text *ngIf=\\\"incidentDetails['classification_location_option']  == 'Add Location'\\\" class=\\\"regularTexrt\\\">\\n          {{incidentDetails['classification_location_value']}}</ion-text>\\n        <ion-text *ngIf=\\\"incidentDetails['classification_location_option']  == 'Choose Location'\\\" class=\\\"regularTexrt\\\">\\n          {{incidentDetails['classification_location_value']}}</ion-text> -->\\n\\n        <p class=\\\"question\\\">Shift Type :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_shift_type'] }}</p>\\n\\n        <p class=\\\"question\\\">Supervisor :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_supervisor'] }}</p>\\n\\n        <p class=\\\"question\\\">Name of Manager :</p>\\n        <p class=\\\"value\\\">{{incidentDetails['classification_manager']}}</p>\\n      </ion-card-content>\\n    </ion-card>\\n    <!------------------------------------------------------------- Classification ---------------------------------------------------->\\n\\n    <div *ngFor=\\\"let classificationValue of classificationList; let i=index\\\">\\n      <!------------------------------------------------------------- Injury ------------------------------------------------------------>\\n      <ion-card *ngIf=\\\"classificationValue == 'Injury'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Injury\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-card *ngFor=\\\"let personDetails of incidentDetails['person_details']; let i=index\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                Person {{(i+1)}} Details\\n              </ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <p class=\\\"question\\\">Full Name of Injured Person :</p>\\n              <p class=\\\"value\\\">{{personDetails['injured_person_option'] }}</p>\\n              <p class=\\\"value\\\" *ngIf=\\\"personDetails['injured_person_option_value'] == 'Other' \\\">\\n                {{personDetails['injured_person_option_value'] }}</p>\\n\\n              <p class=\\\"question\\\">Gender :</p>\\n              <p class=\\\"value\\\">{{personDetails['gender'] }}</p>\\n\\n              <p class=\\\"question\\\">Date of Birth :</p>\\n              <p class=\\\"value\\\">{{personDetails['date_of_birth'] }}</p>\\n\\n              <p class=\\\"question\\\">Return to Normal Duties :</p>\\n              <p class=\\\"value\\\">{{personDetails['normal_duties'] }}</p>\\n\\n              <ion-item lines=\\\"none\\\"\\n                *ngIf=\\\"personDetails['normal_duties_explanation'] != ''  && personDetails['normal_duties_explanation'] != null\\\">\\n                <ion-row>\\n                  <ion-col>\\n                    <p class=\\\"question\\\">Explanation :</p>\\n                    <p class=\\\"value\\\">{{personDetails['normal_duties_explanation'] }}</p>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-item>\\n\\n              <p class=\\\"question\\\">Return to Alternate Duties :</p>\\n              <p class=\\\"value\\\">{{personDetails['alternate_duties'] }}</p>\\n\\n              <ion-item lines=\\\"none\\\"\\n                *ngIf=\\\"personDetails['duties_explanation'] != '' && personDetails['duties_explanation'] != null\\\">\\n                <ion-row>\\n                  <ion-col>\\n                    <p class=\\\"question\\\">Explanation :</p>\\n                    <p class=\\\"value\\\">{{personDetails['duties_explanation'] }}</p>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-item>\\n\\n              <p class=\\\"question\\\">Initial Injury / IIIness Classification :</p>\\n              <p class=\\\"value\\\">{{personDetails['initital_injury'] }}</p>\\n\\n              <p class=\\\"question\\\">Part of body injured :</p>\\n              <p class=\\\"value\\\" *ngFor=\\\"let injuryPart of personDetails['part_of_body_injured_occured']\\\">{{injuryPart}}\\n              </p>\\n\\n              <p class=\\\"question\\\">Was immediate treatment given ? :</p>\\n              <p class=\\\"value\\\">{{personDetails['was_immediate_treatment'] }}</p>\\n\\n              <ion-item *ngIf=\\\"personDetails['was_immediate_treatment'] == ''\\\" lines=\\\"none\\\">\\n                <ion-row>\\n                  <p class=\\\"question\\\">What treatment was given ? :</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_given_explanation'] }}</p>\\n\\n                  <p class=\\\"question\\\">Who administered treatment ? :</p>\\n                  <p class=\\\"question\\\">Person Name</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_person_name'] }}</p>\\n\\n                  <p class=\\\"question\\\">Contact Details :</p>\\n                  <p class=\\\"value\\\">{{personDetails['immediate_treatment_person_number'] }}</p>\\n                </ion-row>\\n              </ion-item>\\n\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-card-content>\\n      </ion-card>\\n      <!------------------------------------------------------------ Injury ------------------------------------------------------------->\\n      <!----------------------------------------------------------- Environmental ------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Environmental'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Environmental\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n\\n          <p class=\\\"question\\\">Immediate action taken to minimize Environment impact :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['environmental_description']}}</p>\\n\\n          <p class=\\\"question\\\">Was a chemical split ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['was_a_chemical_split']}}</p>\\n\\n\\n          <ion-item *ngIf=\\\"incidentDetails['was_a_chemical_split']==='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\">Name of chemical :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['chemical_details'].chemical_name}}</p>\\n\\n                <p class=\\\"question\\\">Insert Photo :</p>\\n\\n                <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n                  *ngIf=\\\"incidentDetails['chemical_details'] && incidentDetails['chemical_details'].chemical_photo && incidentDetails['chemical_details'].chemical_photo.length > 0\\\">\\n                  <ion-slide *ngFor=\\\"let chemical_photo of incidentDetails['chemical_details'].chemical_photo\\\">\\n                    <img [src]=\\\"chemical_photo\\\" tappable (click)=\\\"onOpenPreview(chemical_photo)\\\">\\n                  </ion-slide>\\n                </ion-slides>\\n\\n                <p class=\\\"question\\\">Approximate quantity of chemical spilled :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['chemical_details'].approximate_quantity}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Was the emergency spill kit used ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['emergency_spill_kit_used']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['emergency_spill_kit_used']==='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\" question\\\"> What was used out of the chemical spill kit ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['out_of_split_kit']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Environmental -------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Reputation ----------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Reputation'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Reputation\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n\\n          <p class=\\\"question\\\">Was the reputation damages an individual or Company ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['reputation_option']}}</p>\\n\\n          <ion-item lines=\\\"none\\\"\\n            *ngIf=\\\"incidentDetails['individual_damage_value'] == 'Individual' || incidentDetails['company_damage_value'] == 'Company'\\\">\\n\\n            <p class=\\\"question\\\">Reputation damages type : </p>\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\" *ngIf=\\\"incidentDetails['individual_damage_value'] == 'Individual' \\\">How has the\\n                  Individual's reputation been damaged ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['individual_damage_value']}}</p>\\n\\n                <p class=\\\"question\\\" *ngIf=\\\"incidentDetails['company_damage_value'] == 'Company' \\\">How has the\\n                  Company's reputation been damaged ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['company_damage_value']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Was the negative effect internal or external ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['reputation_negative_effect']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['effected_department'] != '' || incidentDetails['external_party'] != ''\\\"\\n            lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div *ngIf=\\\"incidentDetails['effected_department'] != ''\\\">\\n                  <p class=\\\"question\\\">What Department was effected ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['effected_department']}}</p>\\n                </div>\\n                <div *ngIf=\\\"incidentDetails['external_party'] != ''\\\">\\n                  <p class=\\\"question\\\">Who is the external party ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['external_party']}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Name of any witness :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['name_of_witness']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['name_of_witness'] == 'Other'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  <p class=\\\"question\\\">Name :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_name}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Mobile No :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_mobile_no}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Email id :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['other_witness_details'].other_witness_email}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">What is the possible outcome of this incident ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['possible_outcome_incident']}}</p>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Reputation ----------------------------------------------------------->\\n      <!----------------------------------------------------------- Security ------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Security'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Security\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\">Security :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['security_option']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'IT'\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\">What kind of IT Security Incident ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['it_option_value']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'Theft'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <div>\\n                  <p class=\\\"question\\\"> What has been stolen ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['what_has_been_stolen_item']}}</p>\\n                </div>\\n                <div>\\n                  <p class=\\\"question\\\">Approximate value of stolen item ? :</p>\\n                  <p class=\\\"value\\\">{{incidentDetails['approximate_value_of_stolen']}}</p>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['security_option'] == 'Other'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\"> What is the Security incident ? :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['what_is_the_specific_securities_incident']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Security ------------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Assets --------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Asset'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Assets\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\">Asset description :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['asset_description']}}</p>\\n\\n          <p class=\\\"question\\\">Does Asset have a number ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['asset_has_number']}}</p>\\n\\n          <ion-item *ngIf=\\\"incidentDetails['asset_has_number']=='Yes'\\\" lines=\\\"none\\\">\\n            <ion-row>\\n              <ion-col>\\n                <p class=\\\"question\\\"> Asset Number :</p>\\n                <p class=\\\"value\\\">{{incidentDetails['asset_number']}}</p>\\n              </ion-col>\\n            </ion-row>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Extent of Damage :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['extent_of_damage']}}</p>\\n\\n          <div *ngIf=\\\"incidentDetails['extent_damage_image'] && incidentDetails['extent_damage_image'].length > 0\\\">\\n            <p class=\\\"question\\\">Upload photo of damage :</p>\\n            <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\">\\n              <ion-slide *ngFor=\\\"let extent_damage_image of incidentDetails['extent_damage_image']\\\">\\n                <img [src]=\\\"extent_damage_image\\\" tappable (click)=\\\"onOpenPreview(extent_damage_image)\\\">\\n              </ion-slide>\\n            </ion-slides>\\n          </div>\\n\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Assets --------------------------------------------------------------->\\n\\n      <!----------------------------------------------------------- Report --------------------------------------------------------------->\\n      <ion-card *ngIf=\\\"classificationValue == 'Report'\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Report\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p class=\\\"question\\\"> What could have done differently ? :</p>\\n          <p class=\\\"value\\\">{{incidentDetails['report']}}</p>\\n        </ion-card-content>\\n      </ion-card>\\n      <!----------------------------------------------------------- Report --------------------------------------------------------------->\\n    </div>\\n  </div>\\n  <!-- </div> -->\\n</ion-content>\";"]}