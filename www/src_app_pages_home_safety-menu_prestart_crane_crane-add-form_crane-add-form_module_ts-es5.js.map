{"version":3,"sources":["webpack:///src/app/pages/home/safety-menu/prestart/crane/crane-add-form/crane-add-form-routing.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/crane/crane-add-form/crane-add-form.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/crane/crane-add-form/crane-add-form.page.ts","webpack:///src/app/services/loading-service/loading.service.ts","webpack:///src/app/pages/home/safety-menu/prestart/crane/crane-add-form/crane-add-form.page.scss","webpack:///src/app/pages/home/safety-menu/prestart/crane/crane-add-form/crane-add-form.page.html"],"names":["routes","path","component","CraneAddFormPage","CraneAddFormPageRoutingModule","NgModule","imports","RouterModule","exports","CraneAddFormPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","HeaderComponent","fb","alertService","globalService","toastService","loadingService","nav","activatedRoute","pName","craneNoList","id","name","form_percent","url_id","craneData","loggedInUser","JSON","parse","localStorage","getItem","params","subscribe","undefined","loadData","craneForm","group","crane_number","Validators","operate_crane","swi","equipment_isolated","inspect_pendant","inspect_control_operation","directional_swl_sign","brakes_operational","limit_switches_operational","hook","hoist_chain_rope","mechanically_sound","passed_inspection","comment","event","detail","value","alert","presentLoading","data","console","log","postData","result","toast","reset","back","dismissLoading","error","count","formControlList","Object","keys","controls","map","ele","push","forEach","key","length","getData","patchValue","onProgressBar","FormBuilder","AlertService","GlobalService","ToastService","LoadingService","NavController","ActivatedRoute","ViewChild","IonContent","Component","selector","template","loadingController","create","cssClass","message","loading","present","dismiss","LoadingController","Injectable","providedIn"],"mappings":"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","file":"src_app_pages_home_safety-menu_prestart_crane_crane-add-form_crane-add-form_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CraneAddFormPage } from './crane-add-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CraneAddFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CraneAddFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { CraneAddFormPageRoutingModule } from './crane-add-form-routing.module';\n\nimport { CraneAddFormPage } from './crane-add-form.page';\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CraneAddFormPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    CraneAddFormPage,\n    HeaderComponent\n  ]\n})\nexport class CraneAddFormPageModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { IonContent, NavController } from '@ionic/angular';\n\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport { ToastService } from 'src/app/services/toast-service/toast.service';\nimport { AlertService } from 'src/app/services/alert-service/alert.service';\nimport { LoadingService } from 'src/app/services/loading-service/loading.service';\n\n@Component({\n  selector: 'app-crane-add-form',\n  templateUrl: './crane-add-form.page.html',\n  styleUrls: ['./crane-add-form.page.scss'],\n})\n\nexport class CraneAddFormPage implements OnInit {\n\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n  @ViewChild('target') myScrollContianer: ElementRef\n\n  pName: String = 'Crane';\n  craneNoList = [\n    {\n      id: 'OHC01',\n      name: 'OHC01',\n    },\n    {\n      id: 'OHC02',\n      name: 'OHC02',\n    },\n    {\n      id: 'OHC03',\n      name: 'OHC03',\n    },\n    {\n      id: 'JC01',\n      name: 'JC01',\n    },\n    {\n      id: 'JC02',\n      name: 'JC02',\n    },\n    {\n      id: 'JC03',\n      name: 'JC03',\n    },\n    {\n      id: 'JC04',\n      name: 'JC04',\n    },\n    {\n      id: 'JC05',\n      name: 'JC05',\n    },\n    {\n      id: 'JC06',\n      name: 'JC06',\n    }\n  ];\n  craneForm: FormGroup;\n  form_percent: number = 0;\n  url_id = '';\n  craneData = [];\n  loggedInUser: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private alertService: AlertService,\n    private globalService: GlobalService,\n    private toastService: ToastService,\n    private loadingService: LoadingService,\n    private nav: NavController,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.url_id = params['id'] != undefined ? params['id'] : '';\n      if (this.url_id != '' && this.url_id != undefined) {\n        this.loadData(this.url_id);\n      }\n    })\n\n    this.craneForm = this.fb.group({\n      crane_number: ['', Validators.required],\n      operate_crane: ['', Validators.required],\n      swi: ['', Validators.required],\n      equipment_isolated: ['', Validators.required],\n      inspect_pendant: ['', Validators.required],\n      inspect_control_operation: ['', Validators.required],\n      directional_swl_sign: ['', Validators.required],\n      brakes_operational: ['', Validators.required],\n      limit_switches_operational: ['', Validators.required],\n      hook: ['', Validators.required],\n      hoist_chain_rope: ['', Validators.required],\n      mechanically_sound: ['', Validators.required],\n      passed_inspection: ['', Validators.required],\n      comment: ['']\n    })\n  }\n\n  onPassedInspection(event) {\n    if (event.detail.value == \"No\") {\n      this.alertService.alert('Tag the crane out of service and report any abnormalities immediately to your supervisor.');\n    }\n  }\n\n  onSubmit() {\n    this.loadingService.presentLoading();\n\n    let data = { 'formData': this.craneForm.value };\n    data['formData']['user_id'] = this.loggedInUser.id;\n\n    console.log('      this.craneData', this.craneData);\n\n    // if (this.url_id != '' && this.url_id != undefined) {\n    //   data['formData']['user_id'] = this.loggedInUser.id;\n    // }\n\n    this.globalService.postData('crane/submit', data).subscribe(result => {\n      if (result && result['status']) {\n        this.toastService.toast(result['message'], 'success');\n        this.craneForm.reset();\n        this.nav.back();\n      } else {\n        this.toastService.toast(result['message'], 'danger');\n      }\n      this.loadingService.dismissLoading();\n    }, error => {\n      this.loadingService.dismissLoading();\n      console.log(error);\n    })\n  }\n\n  onProgressBar(event) {\n    let count = 0;\n    let formControlList = [];\n    Object.keys(this.craneForm.controls).map(ele => formControlList.push(ele));\n    formControlList.forEach(key => {\n      if (this.craneForm.value[key] && this.craneForm.value[key] != '') {\n        count = ++count;\n      }\n    })\n    this.form_percent = ((1 / Object.keys(this.craneForm.controls).length) * count);\n  }\n\n  loadData(id) {\n    this.globalService.getData('add_form/getSingleData?table_name=crane&id=' + id).subscribe(result => {\n      if (result && result['data'] && result['data'][0]) {\n        this.craneData = result['data'][0];\n        this.craneForm.patchValue(this.craneData);\n        this.onProgressBar('');\n        console.log('this.craneForm ', this.craneForm);\n      }\n    }), error => {\n      console.log(error);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    public loadingController: LoadingController\n  ) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmFuZS1hZGQtZm9ybS5wYWdlLnNjc3MifQ== */\";","export default \"<ion-content>\\n  <app-header [pageName]=\\\"pName\\\"></app-header>\\n  <div class=\\\"container\\\" #target>\\n    <ion-card>\\n      <ion-grid class=\\\"progress-bar\\\">\\n        <ion-row>\\n          <ion-col size=\\\"10.5\\\">\\n            Form progress bar\\n          </ion-col>\\n          <ion-col size=\\\"1.5\\\">\\n            {{(form_percent*100) | number : '1.0-0'}}{{'%'}}\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-progress-bar [value]=\\\"form_percent\\\"></ion-progress-bar>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid [formGroup]=\\\"craneForm\\\" (ionChange)=\\\"onProgressBar($event)\\\">\\n\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label>Crane number :</ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-select placeholder=\\\"Please select crane no.\\\" interface=\\\"action-sheet\\\" formControlName=\\\"crane_number\\\">\\n              <ion-select-option value=\\\"{{craneNoKey?.id}}\\\" *ngFor=\\\"let craneNoKey of craneNoList\\\">{{craneNoKey?.name}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['crane_number'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"operate_crane\\\">\\n            <ion-item lines=\\\"none\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-label>Are you fully qualified and trained to operate the crane ?</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Yes</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Yes\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>No</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"No\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-text class=\\\"mandatoryField\\\">* If you are unsure contact your supervisor. </ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['operate_crane'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"swi\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Have you read and understood the relevant SWI for the equipment ? </ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Yes</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Yes\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>No </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"No\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['swi'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"equipment_isolated\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Is the equipment isolated ? </ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Ensure there are no maintenance, lock-out tags or isolation procedures in\\n            place. </ion-text>\\n        </ion-grid>\\n\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['equipment_isolated'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"inspect_pendant\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Inspect Pendant :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Ensure that you can identify each of the buttons on the pendant and that\\n            they\\n            move freely without sticking.\\n          </ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['inspect_pendant'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"inspect_control_operation\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Inspect Control operation :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Activate each directional button on the pendant control and ensure the\\n            correct movement.</ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['inspect_control_operation'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"directional_swl_sign\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Directional and SWL sign in place : </ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Ensure the directional and SWL sign is attached to the crane.</ion-text>\\n        </ion-grid>\\n\\n        <div *ngIf=\\\"(craneForm.value['crane_number'] == 'OHC01' || craneForm.value['crane_number'] == 'OHC02'\\n      || craneForm.value['crane_number'] == 'OHC03') && craneForm.value['directional_swl_sign'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"brakes_operational\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Brakes operational :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n          <ion-text class=\\\"mandatoryField\\\">* Drive and stop the crane a few times in each direction to check the\\n            breaks\\n            for adjustment and operation of the crane for the job.</ion-text>\\n        </div>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['directional_swl_sign'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"limit_switches_operational\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Limit Switches operational :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Test the operation of the working limit switches.</ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['limit_switches_operational'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"hook\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Hook :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Check the hook is fitted with a safety catch, make sure it is working\\n            correctly.</ion-text>\\n        </ion-grid>\\n\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['hook'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"hoist_chain_rope\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Hoist chain/rope :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Inspect the hoist chain/ rope is free of kinks, wear, rust or damage.\\n          </ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['hoist_chain_rope'] != ''\\\">\\n          <ion-radio-group formControlName=\\\"mechanically_sound\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Mechanically Sound :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label> Ok</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Faulty </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-text class=\\\"mandatoryField\\\">* Check for any obvious mechanical problems (undue noises, signs of strain or\\n            leaking oil).\\n          </ion-text>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"craneForm.value['mechanically_sound'] != ''\\\">\\n          <ion-radio-group (ionChange)=\\\"onPassedInspection($event)\\\" formControlName=\\\"passed_inspection\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Passed Inspection :</ion-label>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col size-md=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Yes</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Yes\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size-md=\\\"6\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>No </ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"No\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-grid>\\n\\n      </ion-grid>\\n\\n      <ion-button *ngIf=\\\"url_id == ''\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn\\\" [disabled]=\\\"craneForm.invalid\\\">SUBMIT\\n      </ion-button>\\n\\n      <ion-button *ngIf=\\\"url_id != ''\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn\\\" [disabled]=\\\"craneForm.invalid\\\">Update\\n      </ion-button>\\n\\n    </ion-card>\\n  </div>\\n</ion-content>\";"]}