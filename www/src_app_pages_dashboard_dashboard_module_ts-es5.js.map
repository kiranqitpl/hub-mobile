{"version":3,"sources":["webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/dashboard/dashboard.page.ts","webpack:///src/app/services/global-service/global.service.ts","webpack:///src/app/services/shared-service/shared.service.ts","webpack:///src/app/pages/dashboard/dashboard.page.scss","webpack:///src/app/pages/dashboard/dashboard.page.html"],"names":["routes","path","component","DashboardPage","DashboardPageRoutingModule","NgModule","imports","RouterModule","exports","DashboardPageModule","CommonModule","FormsModule","IonicModule","declarations","HeaderComponent","nav","global","sharedService","data","type","environment","imageUrl","userId","localStorage","getItem","roleId","onNotificationLoad","userRole","user","gmRole","gm","investigatorRole","investigator","managerRole","manager","supervisorRole","supervisior","role","item","navigateForward","notViewNotiCount","clear","navigateRoot","formData","FormData","append","url","postData","subscribe","result","console","log","count","forEach","element","is_seen","error","NavController","GlobalService","SharedService","Component","selector","template","toastController","http","loadingController","baseUrl","baseUrl1","formType_user","formType_investigator","msg","create","message","duration","mode","color","toast","present","animated","cssClass","loading","dismiss","header","HttpHeaders","set","headers","setHeader","get","post","ToastController","HttpClient","LoadingController","Injectable","providedIn","globalService","actionSheetController","camera","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","buttons","text","handler","images","pickImage","PictureSourceType","PHOTOLIBRARY","CAMERA","actionSheet","sourceType","options","quality","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","getPicture","then","imageData","image","err","ActionSheetController","Camera"],"mappings":"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","file":"src_app_pages_dashboard_dashboard_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [\n    DashboardPage,\n    HeaderComponent\n  ]\n})\nexport class DashboardPageModule {}\n","import { NavController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../services/global-service/global.service';\nimport { environment } from 'src/environments/environment';\nimport { SharedService } from 'src/app/services/shared-service/shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  data: any = [];\n  role: any;\n  userRole: any;\n  gmRole: any;\n  investigatorRole: any;\n  managerRole: any;\n  supervisorRole: any;\n  userId: string;\n  roleId: string;\n  type: any = environment.allType;\n  imageUrl = environment.imageUrl;\n\n  constructor(\n    private nav: NavController,\n    private global: GlobalService,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.userId = localStorage.getItem('id');\n    this.roleId = localStorage.getItem('role');\n    this.onNotificationLoad();\n  }\n\n  ionViewWillEnter() {\n    this.userRole = this.global.user;\n    this.gmRole = this.global.gm;\n    this.investigatorRole = this.global.investigator;\n    this.managerRole = this.global.manager;\n    this.supervisorRole = this.global.supervisior\n    this.role = localStorage.getItem(\"role\");\n    if (this.role == this.userRole) {\n      this.data = [\"Previous Form\", \"Notification\"]\n    } else {\n      this.data = [\"Submitted Form\", \"Notification\"]\n    }\n  }\n\n  onNavGo(item) {\n    if (item === 'Previous Form' || item == 'Submitted Form') {\n      this.nav.navigateForward(\"/incident-form-list\");\n    } else if ((localStorage.getItem(\"role\") != this.userRole) && (item === 'Notification') && this.sharedService.notViewNotiCount != 0) {\n      this.nav.navigateForward(\"/notification\");\n    }\n  }\n\n  onLogOut() {\n    localStorage.clear();\n    this.nav.navigateRoot(\"login\")\n  }\n\n  onNotificationLoad() {\n    let formData = new FormData();\n    formData.append(\"type\", this.type);\n    formData.append(\"user_id\", this.userId);\n    let url = \"\";\n    if (this.roleId == this.global.investigator) {\n      url = 'api/notification/getInvestigatorNotificationByInvestigatorID';\n    } else if (this.roleId == this.global.gm) {\n      url = 'api/notification/getGMNotificationByGmID';\n    }\n    if (url != \"\") {\n      this.global.postData(url, formData).subscribe(result => {\n        console.log('onNotificationLoad', result);\n        if (result['status']) {\n          let count: number = 0;\n          result['data'].forEach(element => {\n            if (element.is_seen == 0) {\n              count = count + 1;\n            }\n          });\n          this.sharedService.notViewNotiCount = count\n        } else {\n          this.sharedService.notViewNotiCount = 0\n          console.log('error');\n        }\n      }), error => {\n        console.log('error', error);\n      }\n    } else {\n      console.log(\"error\");\n    }\n  }\n\n  onAddForm() {\n    this.nav.navigateForward(\"home\")\n  }\n}\n","import { LoadingController, ToastController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  baseUrl: string = 'https://mforms-api-devel.horts.com.au/';\n  baseUrl1: string = 'https://mforms-api-devel.horts.com.au/api/';\n\n  //Role \n  user: any = \"31\";\n  gm: any = \"32\";\n  investigator: any = \"33\";\n  manager: any = \"34\";\n  supervisior: any = \"35\";\n  formType_user = 1;\n  formType_investigator = 2;\n\n  constructor(\n    public toastController: ToastController,\n    public http: HttpClient,\n    public loadingController: LoadingController\n  ) { }\n\n  async presentToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      mode: \"ios\",\n      color: \"dark\"\n    });\n    toast.present();\n  }\n\n  async toast(msg, type) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000,\n      // mode: \"ios\",\n      color: type,\n      animated: true,\n    });\n    toast.present();\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n\n  setHeader() {\n    let header = new HttpHeaders()\n      .set('apikey', 'as*37486a*()HGY')\n      .set(\"Access-Control-Allow-Origin\", \"*\")\n      .set(\"Access-Control-Allow-Headers\", \"*\")\n      .set(\"Access-Control-Allow-Methods\", \"DELETE, POST, GET, OPTIONS\")\n      .set(\"Access-Control-Allow-Headers\", \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\");\n    // if (localStorage.getItem(\"token\") && localStorage.getItem(\"token\") != \"\")\n    //   header.append(\"token\", localStorage.getItem(\"token\"));\n    return header;\n  }\n\n  getData(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl + url, { headers: headers });\n  }\n\n  postData(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl + url, data, { headers: headers });\n  }\n\n  // --------------------------------------------------New Services ---------------------------------------------//\n\n  postData1(url, data) {\n    let headers = this.setHeader();\n    return this.http.post(this.baseUrl1 + url, data, { headers: headers });\n  }\n\n  getData1(url) {\n    let headers = this.setHeader();\n    return this.http.get(this.baseUrl1 + url, { headers: headers });\n    // return this.http.get(this.baseUrl1 + url, { headers: headers }).pipe(\n    //   map((response) => {\n    //     console.log('response', response);\n    //     if (!response['status']) {\n    //       throw new Error('Value expected!');\n    //     }\n    //     response;\n    //   }),\n    //   catchError(() => of())\n    // );\n  }\n}\n// ---------------------------------------------  New Services --------------------------------------------------//","import { Injectable, } from '@angular/core';\nimport { GlobalService } from '../global-service/global.service';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/Camera/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  notViewNotiCount: any = 0;\n\n  constructor(\n    private globalService: GlobalService,\n    public actionSheetController: ActionSheetController,\n    public camera: Camera\n  ) { }\n\n\n  // notificationLoad(formData) {\n  //   let roleId = localStorage.getItem('role');\n  //   let url = \"\";\n\n  //   if (roleId) {\n  //     if (roleId == this.globalService.investigator) {\n  //       url = 'api/notification/getInvestigatorNotificationByInvestigatorID';\n  //     } else if (roleId == this.globalService.gm) {\n  //       url = 'api/notification/getGMNotificationByGmID';\n  //     }\n  //   }\n\n  //   if (url != \"\") {\n  //     new Promise((resolve, reject) => {\n  //       this.globalService.postData(url, formData).subscribe(result => {\n  //         console.log('notificationLoad', result);\n  //         if (result['status']) {\n  //           let count: number = 0;\n  //           result['data'].forEach(element => {\n  //             if (element.is_seen == 0) {\n  //               count = count + 1;\n  //             }\n  //           });\n  //           this.notViewNotiCount = count;\n  //           return result['data'];\n  //         } else {\n  //           console.log('error');\n  //         }\n  //         setTimeout(function () {\n  //           resolve(\"Success!\");\n  //         });\n  //       });\n  //     });\n  //   }\n  // }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // fileToBase64 = (file) => {\n  //   let image: any;\n  //   let reader = new FileReader();\n  //   reader.onload = (function (file) {\n  //     return function (e) {\n  //       image = e.target.result;\n  //       this.base64Image = e.target.result;\n  //     };\n  //   })(file);\n  //   reader.readAsDataURL(file);\n  // };\n\n  // convertDataURIToBinary(dataURI) {\n  //   var BASE64_MARKER = ';base64,';\n  //   var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  //   var base64 = dataURI.substring(base64Index);\n  //   var raw = window.atob(base64);\n  //   var rawLength = raw.length;\n  //   var array = new Uint8Array(new ArrayBuffer(rawLength));\n  //   for (let i = 0; i < rawLength; i++) {\n  //     array[i] = raw.charCodeAt(i);\n  //   }\n  //   return array;\n  // }\n\n\n  async mobileUploadImages() {\n    let images: any;\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.CAMERA);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  pickImage(sourceType) {\n    console.log('sourceType', sourceType);\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    this.camera.getPicture(options).then(\n      (imageData) => {\n        console.log('imageData', imageData);\n        // const file = this.DataURIToBlob('data:image/jpeg;base64,' + imageData);\n        let image = 'data:image/jpeg;base64,' + imageData;\n        return image;\n      },\n      (err) => {\n        console.log(\"errOf Image \", err)\n      }\n    );\n  }\n}\n","export default \"ion-content .addForm {\\n  align-items: center;\\n  align-self: center;\\n  align-content: center;\\n  justify-content: center;\\n  text-align: center;\\n  padding: 40px;\\n  border: 2px dashed #c3c3c3;\\n  border-radius: 20px;\\n  margin: 7px;\\n  margin-top: 40px;\\n}\\nion-content .addF {\\n  font-family: \\\"mon-bold\\\";\\n  font-size: 17px;\\n  text-transform: capitalize;\\n  color: var(--white-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLDBCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUFBSjtBQUVFO0VBQ0UsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFFQSx5QkFBQTtBQURKIiwiZmlsZSI6ImRhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC5hZGRGb3JtIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgYm9yZGVyOiAycHggZGFzaGVkICNjM2MzYzM7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBtYXJnaW46IDdweDtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICB9XG4gIC5hZGRGIHtcbiAgICBmb250LWZhbWlseTogXCJtb24tYm9sZFwiO1xuICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICAvLyBjb2xvcjogdmFyKC0tYmxhY2stY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS13aGl0ZS1jb2xvcik7XG4gIH1cbn1cbiJdfQ== */\";","export default \"<ion-content>\\n  <div class=\\\"toolbar\\\">\\n    <ion-text>Dashboard</ion-text>\\n    <ion-buttons class='logout' slot=\\\"end\\\">\\n      <ion-button (click)=\\\"onLogOut()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"addForm\\\" (click)=\\\"onAddForm()\\\" *ngIf=\\\"roleId != gmRole\\\">\\n      <img src=\\\"{{imageUrl + 'form.png'}}\\\" />\\n      <p class=\\\" addF\\\">ADD FORM</p>\\n    </div>\\n    <div *ngFor=\\\"let tabVal of data\\\">\\n      <ion-button class=\\\"btn\\\" (click)=\\\"onNavGo(tabVal)\\\">\\n        {{tabVal}}\\n        <ion-badge class=\\\"badge\\\"\\n          *ngIf=\\\"tabVal == 'Notification' && sharedService.notViewNotiCount != 0 && roleId != userRole \\\" color=\\\"danger\\\">\\n          {{sharedService.notViewNotiCount}}</ion-badge>\\n      </ion-button>\\n    </div>\\n    <ion-button class=\\\"btn logouts\\\" (click)=\\\"onLogOut()\\\">\\n      Logout\\n    </ion-button>\\n  </div>\\n</ion-content>\";"]}