{"version":3,"sources":["webpack:///src/app/pages/investigator/actions/actions-routing.module.ts","webpack:///src/app/pages/investigator/actions/actions.module.ts","webpack:///src/app/pages/investigator/actions/actions.page.ts","webpack:///src/app/services/loading-service/loading.service.ts","webpack:///src/app/pages/investigator/actions/actions.page.scss","webpack:///src/app/pages/investigator/actions/actions.page.html"],"names":["routes","path","component","ActionsPage","ActionsPageRoutingModule","NgModule","imports","RouterModule","exports","ActionsPageModule","CommonModule","FormsModule","IonicModule","declarations","nav","global","loadingService","pName","data","description_of_required_action","priority","expected_completion","loggedInUser","JSON","parse","localStorage","getItem","d","incident_id","id","loadEmp","presentLoading","getData","subscribe","result","dismissLoading","console","log","err","isOpenFrom","isFrom","res","forEach","el","user_name","user_id","back","e","employee_id","detail","value","full_name","format","userDetails","presentToast","fd","FormData","append","postData","status","message","NavController","GlobalService","LoadingService","Component","selector","template","loadingController","create","cssClass","loading","present","dismiss","LoadingController","Injectable","providedIn"],"mappings":"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","file":"src_app_pages_investigator_actions_actions_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActionsPage } from './actions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActionsPageRoutingModule } from './actions-routing.module';\n\nimport { ActionsPage } from './actions.page';\n// import { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActionsPageRoutingModule\n  ],\n  declarations: [\n    ActionsPage,\n    // HeaderComponent\n  ]\n})\nexport class ActionsPageModule {}\n","import { GlobalService } from '../../../services/global-service/global.service';\nimport { NavController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport moment from 'moment';\nimport { LoadingService } from 'src/app/services/loading-service/loading.service';\n\n@Component({\n  selector: 'app-actions',\n  templateUrl: './actions.page.html',\n  styleUrls: ['./actions.page.scss'],\n})\nexport class ActionsPage implements OnInit {\n\n  pName: String = \"Actions\";\n  data: any = [];\n\n  //------------------------------------------------------------ Form Variables ---------------------------------------------------------------//\n\n  description_of_required_action: any = '';\n  user_name: any;\n  priority: any = '';\n  expected_completion: any = '';\n  isFrom: any;\n  user_id: any;\n  id: any;\n  incident_id: any;\n\n  loggedInUser = '';\n\n  //------------------------------------------------------------ Form Variables ---------------------------------------------------------------//\n\n  constructor(\n    private nav: NavController,\n    private global: GlobalService,\n    private loadingService: LoadingService\n  ) { }\n\n  ngOnInit() {\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n    let d = JSON.parse(localStorage.getItem(\"singleView\"));\n    this.incident_id = d.id;\n    this.loadEmp();\n  }\n\n  loadEmp() {\n    this.loadingService.presentLoading();\n    this.global.getData(\"user/getAllUser\").subscribe((result: any) => {\n      if (result && result.data) {\n        this.data = result.data;\n      }\n      this.loadingService.dismissLoading();\n      console.log('this.data ', this.data);\n    }, err => {\n      this.loadingService.dismissLoading();\n      console.log(err)\n    })\n  }\n\n  ionViewWillEnter() {\n    let isOpenFrom = localStorage.getItem(\"isActionsForm\");\n    this.isFrom = isOpenFrom;\n    if (isOpenFrom == 'edit') {\n      let d = JSON.parse(localStorage.getItem(\"singleView\"));\n      // this.incident_id = d.id;\n      // this.global.presentLoading();\n      console.log('  this.incident_id ', this.incident_id);\n      this.global.getData(\"Investigator/getInvestigationAction/\" + this.loggedInUser['id']).subscribe((res: any) => {\n        console.log('getInvestigationAction 1', res);\n        if (res) {\n          res?.data?.forEach((el) => {\n            console.log('getInvestigationAction 2', el);\n            if (el.incident_id == this.incident_id) {\n              console.log('here');\n              this.description_of_required_action = el.description_of_required_action;\n              // this.user_name = el.user_name;\n              this.user_name = el.user_id;\n              this.priority = el.priority;\n              this.expected_completion = el.expected_completion;\n              this.id = el.id\n              // this.global.dismissLoading();\n              console.log(' this.id ', this.id);\n            }\n          })\n        }\n      }, err => {\n        console.log(\"res\", err)\n        // this.global.dismissLoading();\n      });\n    }\n  }\n\n  goBack() {\n    this.nav.back();\n  }\n\n  selectUser(e) {\n    this.data.forEach((el) => {\n      if (el.employee_id == e.detail.value) {\n        this.user_id = el.full_name\n      }\n    })\n  }\n\n  dateSelect(e) {\n    this.expected_completion = moment(e.detail.value).format(\"YYYY-MM-DD\")\n  }\n\n  onSubmit() {\n\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (this.description_of_required_action == '') {\n      this.global.presentToast(\"Please enter description of required action\")\n    }\n    else if (this.user_name == '') {\n      this.global.presentToast(\"Please Select User\")\n    }\n    else if (this.priority == '') {\n      this.global.presentToast(\"Please select the priority\")\n    } else if (this.expected_completion == '') {\n      this.global.presentToast(\"Please enter expected completion\")\n    } else {\n      this.global.presentLoading();\n      const fd = new FormData();\n      if (this.isFrom == 'edit')\n        fd.append(\"id\", this.id)\n      fd.append(\"incident_id\", this.incident_id);\n      fd.append('user_id', this.user_name);\n      fd.append(\"user_name\", this.user_id);\n      fd.append(\"priority\", this.priority);\n      fd.append(\"expected_completion\", this.expected_completion);\n      fd.append(\"description_of_required_action\", this.description_of_required_action);\n      fd.append(\"investigator_id\", userDetails.id);\n      this.global.postData(\"Investigator/InvestigationAction\", fd).subscribe((res: any) => {\n        if (res.status) {\n          this.global.presentToast(res.message)\n          this.global.dismissLoading();\n          this.nav.back();\n        } else {\n          this.global.dismissLoading();\n        }\n      }, err => {\n        console.log(err)\n        this.global.dismissLoading();\n      })\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    public loadingController: LoadingController\n  ) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3Rpb25zLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-content>\\n  <!-- <app-header [pageName]=\\\"pName\\\"></app-header> -->\\n  <div class=\\\"container\\\">\\n    <ion-card>\\n      <ion-card-content>\\n        <div class=\\\"ion-padding-start ion-padding-end \\\">\\n          <p class=\\\"question\\\">\\n            Description of Required Action\\n          </p>\\n          <ion-input placeholder=\\\"Enter here\\\" [(ngModel)]=\\\"description_of_required_action\\\"></ion-input>\\n\\n          <p class=\\\"question\\\">Allocated to</p>\\n          <ion-item class=\\\"ra ion-no-margin ion-no-padding\\\" lines=\\\"none\\\">\\n            <ion-select placeholder=\\\"Select One\\\" interface=\\\"action-sheet\\\" [(ngModel)]=\\\"user_name\\\"\\n              (ionChange)=\\\"selectUser($event)\\\">\\n              <ion-select-option value=\\\"{{item?.employee_id}}\\\" *ngFor=\\\"let item of data\\\">\\n                <p>{{item?.full_name}}</p>\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n\\n          <p class=\\\"question\\\">Priority</p>\\n          <ion-radio-group [(ngModel)]=\\\"priority\\\">\\n            <ion-row class=\\\"ion-no-padding\\\">\\n              <ion-col size=\\\"4\\\" class=\\\"ion-no-padding\\\">\\n                <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                  <ion-label>Minor</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Minor\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"4\\\" class=\\\"ion-no-padding\\\">\\n                <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n                  <ion-label>Major</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Major\\\"></ion-radio>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row>\\n          </ion-radio-group>\\n\\n          <p class=\\\"question\\\">Expected completion</p>\\n          <ion-item class=\\\"ra\\\" lines=\\\"none\\\">\\n            <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" placeholder=\\\"Select date\\\" (ionChange)=\\\"dateSelect($event)\\\"\\n              [(ngModel)]=\\\"expected_completion\\\">\\n            </ion-datetime>\\n          </ion-item>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-button class=\\\"btn\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"isFrom=='add'\\\">\\n      SUBMIT\\n    </ion-button>\\n    <ion-button class=\\\"btn\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" *ngIf=\\\"isFrom=='edit'\\\">\\n      UPDATE\\n    </ion-button>\\n\\n\\n  </div>\\n</ion-content>\";"]}