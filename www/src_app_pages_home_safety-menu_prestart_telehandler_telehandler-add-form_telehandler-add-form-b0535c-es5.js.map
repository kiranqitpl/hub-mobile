{"version":3,"sources":["webpack:///src/app/modals/image-modal/image-modal.page.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form-routing.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.module.ts","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.ts","webpack:///src/app/services/loading-service/loading.service.ts","webpack:///src/app/services/shared-service/shared.service.ts","webpack:///src/app/modals/image-modal/image-modal.page.scss","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.scss","webpack:///src/app/modals/image-modal/image-modal.page.html","webpack:///src/app/pages/home/safety-menu/prestart/telehandler/telehandler-add-form/telehandler-add-form.page.html"],"names":["ImageModalPage","modalController","sliderOpts","zoom","console","log","img","slides","update","zoomIn","getSwiper","slider","out","dismiss","ModalController","ViewChild","IonSlides","Input","Component","selector","template","routes","path","component","TelehandlerAddFormPage","TelehandlerAddFormPageRoutingModule","NgModule","imports","RouterModule","exports","TelehandlerAddFormPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","declarations","HeaderComponent","fb","globalService","toastService","nav","loadingService","sharedService","actionSheetController","camera","alertService","pName","isSubmitted","teleHandlerForm","group","competency","telehandler_number","hour_meter","data_plate","data_plate_comment","data_plate_image","engine_oil","engine_oil_comment","engine_oil_image","hydraulic_oil","hydraulic_oil_comment","hydraulic_oil_image","fuel_level","equipment_inspect","equipment_inspect_comment","equipment_inspect_image","coolant_level","coolant_level_comment","coolant_level_image","belts_and_hoses","belts_and_hoses_comment","belts_and_hoses_image","wheels_tyres","Validators","wheels_tyres_comment","wheels_tyres_image","fire_extinguisher","fire_extinguisher_comment","fire_extinguisher_image","fuel_flash","fuel_flash_comment","fuel_flash_image","hydraulics_functional","hydraulics_functional_comment","hydraulics_functional_image","lift_arms","lift_arms_comment","lift_arms_image","chain_hose","chain_hose_comment","chain_hose_image","cap_bolts","cap_bolts_comment","cap_bolts_image","safety_stops","safety_stops_comment","safety_stops_image","forks","forks_comment","forks_image","overhead_guards","overhead_guards_comment","overhead_guards_image","counterweight","counterweight_comment","counterweight_image","engine_bay_components","engine_bay_components_comment","engine_bay_components_image","horn","horn_comment","horn_image","audible","audible_comment","audible_image","headlights","headlights_comment","headlights_image","turn_signals","turn_signals_comment","turn_signals_image","warning_brake_lights","warning_brake_lights_comment","warning_brake_lights_image","foot_brake","foot_brake_comment","foot_brake_image","parking_brake","parking_brake_comment","parking_brake_image","clutch_gear_shift","clutch_gear_shift_comment","clutch_gear_shift_image","engine_noise","engine_noise_comment","engine_noise_image","dash_gauges","dash_gauges_comment","dash_gauges_image","operational_controls","operational_controls_comment","operational_controls_image","fluid_leaks","fluid_leaks_comment","fluid_leaks_image","first_aid_kit","first_aid_kit_comment","first_aid_kit_image","comment","loggedInUser","JSON","parse","localStorage","getItem","controls","create","cssClass","componentProps","modal","present","sourceType","rowName","options","quality","PictureSourceType","PHOTOLIBRARY","CAMERA","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","getPicture","then","imageData","image","setValue","err","header","buttons","text","handler","pickImage","role","actionSheet","event","type","mobileUploads","getBase64","target","files","error","value","valid","formData","id","data","postData","subscribe","result","toast","back","detail","alert","FormBuilder","GlobalService","ToastService","NavController","LoadingService","SharedService","ActionSheetController","Camera","AlertService","loadingController","message","loading","LoadingController","Injectable","providedIn","notViewNotiCount","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","images"],"mappings":"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","file":"src_app_pages_home_safety-menu_prestart_telehandler_telehandler-add-form_telehandler-add-form-b0535c-es5.js","sourcesContent":["\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, IonSlides } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.page.html',\n  styleUrls: ['./image-modal.page.scss'],\n})\nexport class ImageModalPage implements OnInit {\n\n  @ViewChild(IonSlides) slides: IonSlides;\n  @Input('img') img: any;\n\n  sliderOpts = {\n    zoom: true\n  };\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n\n    console.log('img', this.img);\n\n    console.log('slides', this.slides);\n  }\n\n  ionViewDidEnter() {\n    this.slides.update();\n  }\n\n  async zoom(zoomIn: boolean) {\n    const slider = await this.slides.getSwiper();\n    const zoom = slider.zoom;\n    zoomIn ? zoom.in() : zoom.out();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TelehandlerAddFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TelehandlerAddFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TelehandlerAddFormPageRoutingModule } from './telehandler-add-form-routing.module';\n\nimport { TelehandlerAddFormPage } from './telehandler-add-form.page';\n\nimport { HeaderComponent } from 'src/app/shared-component/header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TelehandlerAddFormPageRoutingModule\n  ],\n  declarations: [\n    TelehandlerAddFormPage,\n    HeaderComponent\n  ]\n})\nexport class TelehandlerAddFormPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Camera, CameraOptions } from '@ionic-native/Camera/ngx';\nimport { NavController } from '@ionic/angular';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\n\nimport { GlobalService } from 'src/app/services/global-service/global.service';\nimport { ToastService } from 'src/app/services/toast-service/toast.service';\nimport { LoadingService } from 'src/app/services/loading-service/loading.service';\nimport { SharedService } from 'src/app/services/shared-service/shared.service';\nimport { ImageModalPage } from 'src/app/modals/image-modal/image-modal.page';\nimport { AlertService } from 'src/app/services/alert-service/alert.service';\n\n\n@Component({\n  selector: 'app-telehandler-add-form',\n  templateUrl: './telehandler-add-form.page.html',\n  styleUrls: ['./telehandler-add-form.page.scss'],\n})\nexport class TelehandlerAddFormPage implements OnInit {\n\n  pName: String = 'Telehandler'\n  teleHandlerForm: FormGroup;\n  isSubmitted: boolean = false;\n  loggedInUser: any;\n  // showMsg: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private globalService: GlobalService,\n    private toastService: ToastService,\n    private nav: NavController,\n    private loadingService: LoadingService,\n    private modalController: ModalController,\n    private sharedService: SharedService,\n    public actionSheetController: ActionSheetController,\n    private camera: Camera,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.teleHandlerForm = this.fb.group({\n\n      competency: [''],\n      telehandler_number: ['TH40'],\n\n      hour_meter: [''],\n\n      data_plate: [''],\n      data_plate_comment: [''],\n      data_plate_image: [''],\n\n      engine_oil: [''],\n      engine_oil_comment: [''],\n      engine_oil_image: [''],\n\n      hydraulic_oil: [''],\n      hydraulic_oil_comment: [''],\n      hydraulic_oil_image: [''],\n\n      fuel_level: [''],\n\n      equipment_inspect: [''],\n      equipment_inspect_comment: [''],\n      equipment_inspect_image: [''],\n\n      coolant_level: [''],\n      coolant_level_comment: [''],\n      coolant_level_image: [''],\n\n      belts_and_hoses: [''],\n      belts_and_hoses_comment: [''],\n      belts_and_hoses_image: [''],\n\n      wheels_tyres: ['', Validators.required],\n      wheels_tyres_comment: [''],\n      wheels_tyres_image: [''],\n\n      fire_extinguisher: ['', Validators.required],\n      fire_extinguisher_comment: [''],\n      fire_extinguisher_image: [''],\n\n      fuel_flash: ['', Validators.required],\n      fuel_flash_comment: [''],\n      fuel_flash_image: [''],\n\n      hydraulics_functional: ['', Validators.required],\n      hydraulics_functional_comment: [''],\n      hydraulics_functional_image: [''],\n\n      lift_arms: ['', Validators.required],\n      lift_arms_comment: [''],\n      lift_arms_image: [''],\n\n      chain_hose: ['', Validators.required],\n      chain_hose_comment: [''],\n      chain_hose_image: [''],\n\n      cap_bolts: ['', Validators.required],\n      cap_bolts_comment: [''],\n      cap_bolts_image: [''],\n\n      safety_stops: ['', Validators.required],\n      safety_stops_comment: [''],\n      safety_stops_image: [''],\n\n      forks: ['', Validators.required],\n      forks_comment: [''],\n      forks_image: [''],\n\n      overhead_guards: ['', Validators.required],\n      overhead_guards_comment: [''],\n      overhead_guards_image: [''],\n\n      counterweight: ['', Validators.required],\n      counterweight_comment: [''],\n      counterweight_image: [''],\n\n      engine_bay_components: ['', Validators.required],\n      engine_bay_components_comment: [''],\n      engine_bay_components_image: [''],\n\n      horn: ['', Validators.required],\n      horn_comment: [''],\n      horn_image: [''],\n\n      audible: ['', Validators.required],\n      audible_comment: [''],\n      audible_image: [''],\n\n      headlights: ['', Validators.required],\n      headlights_comment: [''],\n      headlights_image: [''],\n\n      turn_signals: ['', Validators.required],\n      turn_signals_comment: [''],\n      turn_signals_image: [''],\n\n      warning_brake_lights: ['', Validators.required],\n      warning_brake_lights_comment: [''],\n      warning_brake_lights_image: [''],\n\n      foot_brake: ['', Validators.required],\n      foot_brake_comment: [''],\n      foot_brake_image: [''],\n\n      parking_brake: ['', Validators.required],\n      parking_brake_comment: [''],\n      parking_brake_image: [''],\n\n      clutch_gear_shift: ['', Validators.required],\n      clutch_gear_shift_comment: [''],\n      clutch_gear_shift_image: [''],\n\n      engine_noise: ['', Validators.required],\n      engine_noise_comment: [''],\n      engine_noise_image: [''],\n\n      dash_gauges: ['', Validators.required],\n      dash_gauges_comment: [''],\n      dash_gauges_image: [''],\n\n      operational_controls: ['', Validators.required],\n      operational_controls_comment: [''],\n      operational_controls_image: [''],\n\n      fluid_leaks: ['', Validators.required],\n      fluid_leaks_comment: [''],\n      fluid_leaks_image: [''],\n\n      first_aid_kit: ['', Validators.required],\n      first_aid_kit_comment: [''],\n      first_aid_kit_image: [''],\n\n      comment: [''],\n    })\n    this.loggedInUser = JSON.parse(localStorage.getItem('userDetails'));\n  }\n\n  get errorControls() {\n    return this.teleHandlerForm.controls;\n  }\n\n  async onOpenPreview(img) {\n    const modal = await this.modalController.create({\n      component: ImageModalPage,\n      cssClass: 'transparent-modal',\n      componentProps: {\n        img\n      }\n    });\n    modal.present();\n  }\n\n  async pickImage(sourceType, rowName) {\n    let image: any;\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType == 0 ? this.camera.PictureSourceType.PHOTOLIBRARY : (sourceType == 1 ? this.camera.PictureSourceType.CAMERA : 0),\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n\n    this.camera.getPicture(options).then((imageData) => {\n      // console.log('imageData', imageData);\n      image = imageData != '' ? 'data:image/jpeg;base64,' + imageData : '';\n      if (rowName == 'data_plate_image') {\n        this.teleHandlerForm.controls['data_plate_image'].setValue(image);\n      } else if (rowName == 'engine_oil_image') {\n        this.teleHandlerForm.controls['engine_oil_image'].setValue(image);\n      } else if (rowName == 'hydraulic_oil_image') {\n        this.teleHandlerForm.controls['hydraulic_oil_image'].setValue(image);\n      } else if (rowName == 'equipment_inspect_image') {\n        this.teleHandlerForm.controls['equipment_inspect_image'].setValue(image);\n      } else if (rowName == 'coolant_level_image') {\n        this.teleHandlerForm.controls['coolant_level_image'].setValue(image);\n      } else if (rowName == 'belts_and_hoses_image') {\n        this.teleHandlerForm.controls['belts_and_hoses_image'].setValue(image);\n      } else if (rowName == 'wheels_tyres_image') {\n        this.teleHandlerForm.controls['wheels_tyres_image'].setValue(image);\n      } else if (rowName == 'fire_extinguisher_image') {\n        this.teleHandlerForm.controls['fire_extinguisher_image'].setValue(image);\n      } else if (rowName == 'fuel_flash_image') {\n        this.teleHandlerForm.controls['fuel_flash_image'].setValue(image);\n      } else if (rowName == 'hydraulics_functional_image') {\n        this.teleHandlerForm.controls['hydraulics_functional_image'].setValue(image);\n      } else if (rowName == 'lift_arms_image') {\n        this.teleHandlerForm.controls['lift_arms_image'].setValue(image);\n      } else if (rowName == 'chain_hose_image') {\n        this.teleHandlerForm.controls['chain_hose_image'].setValue(image);\n      } else if (rowName == 'cap_bolts_image') {\n        this.teleHandlerForm.controls['cap_bolts_image'].setValue(image);\n      } else if (rowName == 'safety_stops_image') {\n        this.teleHandlerForm.controls['safety_stops_image'].setValue(image);\n      } else if (rowName == 'forks_image') {\n        this.teleHandlerForm.controls['forks_image'].setValue(image);\n      } else if (rowName == 'overhead_guards_image') {\n        this.teleHandlerForm.controls['overhead_guards_image'].setValue(image);\n      } else if (rowName == 'counterweight_image') {\n        this.teleHandlerForm.controls['counterweight_image'].setValue(image);\n      } else if (rowName == 'engine_bay_components_image') {\n        this.teleHandlerForm.controls['engine_bay_components_image'].setValue(image);\n      } else if (rowName == 'horn_image') {\n        this.teleHandlerForm.controls['horn_image'].setValue(image);\n      } else if (rowName == 'audible_image') {\n        this.teleHandlerForm.controls['audible_image'].setValue(image);\n      } else if (rowName == 'headlights_image') {\n        this.teleHandlerForm.controls['headlights_image'].setValue(image);\n      } else if (rowName == 'turn_signals_image') {\n        this.teleHandlerForm.controls['turn_signals_image'].setValue(image);\n      } else if (rowName == 'warning_brake_lights_image') {\n        this.teleHandlerForm.controls['warning_brake_lights_image'].setValue(image);\n      } else if (rowName == 'foot_brake_image') {\n        this.teleHandlerForm.controls['foot_brake_image'].setValue(image);\n      } else if (rowName == 'parking_brake_image') {\n        this.teleHandlerForm.controls['parking_brake_image'].setValue(image);\n      } else if (rowName == 'clutch_gear_shift_image') {\n        this.teleHandlerForm.controls['clutch_gear_shift_image'].setValue(image);\n      } else if (rowName == 'engine_noise_image') {\n        this.teleHandlerForm.controls['engine_noise_image'].setValue(image);\n      } else if (rowName == 'dash_gauges_image') {\n        this.teleHandlerForm.controls['dash_gauges_image'].setValue(image);\n      } else if (rowName == 'operational_controls_image') {\n        this.teleHandlerForm.controls['operational_controls_image'].setValue(image);\n      } else if (rowName == 'fluid_leaks_image') {\n        this.teleHandlerForm.controls['fluid_leaks_image'].setValue(image);\n      } else if (rowName == 'first_aid_kit_image') {\n        this.teleHandlerForm.controls['first_aid_kit_image'].setValue(image);\n      }\n    }, (err) => {\n      console.log(\"errOf Image \", err)\n    });\n\n  }\n\n  async mobileUploads(rowName) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY, rowName)\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            this.pickImage(this.camera.PictureSourceType.CAMERA, rowName);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async onSelectImage(event, type, rowName) {\n    if (type == 1) {\n      this.mobileUploads(rowName);\n    } else {\n      this.sharedService.getBase64(event.target.files[0]).then(image => {\n        if (rowName == 'data_plate_image') {\n          this.teleHandlerForm.controls['data_plate_image'].setValue(image);\n        } else if (rowName == 'engine_oil_image') {\n          this.teleHandlerForm.controls['engine_oil_image'].setValue(image);\n        } else if (rowName == 'hydraulic_oil_image') {\n          this.teleHandlerForm.controls['hydraulic_oil_image'].setValue(image);\n        } else if (rowName == 'equipment_inspect_image') {\n          this.teleHandlerForm.controls['equipment_inspect_image'].setValue(image);\n        } else if (rowName == 'coolant_level_image') {\n          this.teleHandlerForm.controls['coolant_level_image'].setValue(image);\n        } else if (rowName == 'belts_and_hoses_image') {\n          this.teleHandlerForm.controls['belts_and_hoses_image'].setValue(image);\n        } else if (rowName == 'wheels_tyres_image') {\n          this.teleHandlerForm.controls['wheels_tyres_image'].setValue(image);\n        } else if (rowName == 'fire_extinguisher_image') {\n          this.teleHandlerForm.controls['fire_extinguisher_image'].setValue(image);\n        } else if (rowName == 'fuel_flash_image') {\n          this.teleHandlerForm.controls['fuel_flash_image'].setValue(image);\n        } else if (rowName == 'hydraulics_functional_image') {\n          this.teleHandlerForm.controls['hydraulics_functional_image'].setValue(image);\n        } else if (rowName == 'lift_arms_image') {\n          this.teleHandlerForm.controls['lift_arms_image'].setValue(image);\n        } else if (rowName == 'chain_hose_image') {\n          this.teleHandlerForm.controls['chain_hose_image'].setValue(image);\n        } else if (rowName == 'cap_bolts_image') {\n          this.teleHandlerForm.controls['cap_bolts_image'].setValue(image);\n        } else if (rowName == 'safety_stops_image') {\n          this.teleHandlerForm.controls['safety_stops_image'].setValue(image);\n        } else if (rowName == 'forks_image') {\n          this.teleHandlerForm.controls['forks_image'].setValue(image);\n        } else if (rowName == 'overhead_guards_image') {\n          this.teleHandlerForm.controls['overhead_guards_image'].setValue(image);\n        } else if (rowName == 'counterweight_image') {\n          this.teleHandlerForm.controls['counterweight_image'].setValue(image);\n        } else if (rowName == 'engine_bay_components_image') {\n          this.teleHandlerForm.controls['engine_bay_components_image'].setValue(image);\n        } else if (rowName == 'horn_image') {\n          this.teleHandlerForm.controls['horn_image'].setValue(image);\n        } else if (rowName == 'audible_image') {\n          this.teleHandlerForm.controls['audible_image'].setValue(image);\n        } else if (rowName == 'headlights_image') {\n          this.teleHandlerForm.controls['headlights_image'].setValue(image);\n        } else if (rowName == 'turn_signals_image') {\n          this.teleHandlerForm.controls['turn_signals_image'].setValue(image);\n        } else if (rowName == 'warning_brake_lights_image') {\n          this.teleHandlerForm.controls['warning_brake_lights_image'].setValue(image);\n        } else if (rowName == 'foot_brake_image') {\n          this.teleHandlerForm.controls['foot_brake_image'].setValue(image);\n        } else if (rowName == 'parking_brake_image') {\n          this.teleHandlerForm.controls['parking_brake_image'].setValue(image);\n        } else if (rowName == 'clutch_gear_shift_image') {\n          this.teleHandlerForm.controls['clutch_gear_shift_image'].setValue(image);\n        } else if (rowName == 'engine_noise_image') {\n          this.teleHandlerForm.controls['engine_noise_image'].setValue(image);\n        } else if (rowName == 'dash_gauges_image') {\n          this.teleHandlerForm.controls['dash_gauges_image'].setValue(image);\n        } else if (rowName == 'operational_controls_image') {\n          this.teleHandlerForm.controls['operational_controls_image'].setValue(image);\n        } else if (rowName == 'fluid_leaks_image') {\n          this.teleHandlerForm.controls['fluid_leaks_image'].setValue(image);\n        } else if (rowName == 'first_aid_kit_image') {\n          this.teleHandlerForm.controls['first_aid_kit_image'].setValue(image);\n        }\n      }).catch(error => {\n        console.log('error', error);\n      });\n    }\n  }\n\n  onDeleteImage(rowName) {\n    if (rowName == 'data_plate_image') {\n      this.teleHandlerForm.controls['data_plate_image'].setValue('');\n    } else if (rowName == 'engine_oil_image') {\n      this.teleHandlerForm.controls['engine_oil_image'].setValue('');\n    } else if (rowName == 'hydraulic_oil_image') {\n      this.teleHandlerForm.controls['hydraulic_oil_image'].setValue('');\n    } else if (rowName == 'equipment_inspect_image') {\n      this.teleHandlerForm.controls['equipment_inspect_image'].setValue('');\n    } else if (rowName == 'coolant_level_image') {\n      this.teleHandlerForm.controls['coolant_level_image'].setValue('');\n    } else if (rowName == 'belts_and_hoses_image') {\n      this.teleHandlerForm.controls['belts_and_hoses_image'].setValue('');\n    } else if (rowName == 'wheels_tyres_image') {\n      this.teleHandlerForm.controls['wheels_tyres_image'].setValue('');\n    } else if (rowName == 'fire_extinguisher_image') {\n      this.teleHandlerForm.controls['fire_extinguisher_image'].setValue('');\n    } else if (rowName == 'fuel_flash_image') {\n      this.teleHandlerForm.controls['fuel_flash_image'].setValue('');\n    } else if (rowName == 'hydraulics_functional_image') {\n      this.teleHandlerForm.controls['hydraulics_functional_image'].setValue('');\n    } else if (rowName == 'lift_arms_image') {\n      this.teleHandlerForm.controls['lift_arms_image'].setValue('');\n    } else if (rowName == 'chain_hose_image') {\n      this.teleHandlerForm.controls['chain_hose_image'].setValue('');\n    } else if (rowName == 'cap_bolts_image') {\n      this.teleHandlerForm.controls['cap_bolts_image'].setValue('');\n    } else if (rowName == 'safety_stops_image') {\n      this.teleHandlerForm.controls['safety_stops_image'].setValue('');\n    } else if (rowName == 'forks_image') {\n      this.teleHandlerForm.controls['forks_image'].setValue('');\n    } else if (rowName == 'overhead_guards_image') {\n      this.teleHandlerForm.controls['overhead_guards_image'].setValue('');\n    } else if (rowName == 'counterweight_image') {\n      this.teleHandlerForm.controls['counterweight_image'].setValue('');\n    } else if (rowName == 'engine_bay_components_image') {\n      this.teleHandlerForm.controls['engine_bay_components_image'].setValue('');\n    } else if (rowName == 'horn_image') {\n      this.teleHandlerForm.controls['horn_image'].setValue('');\n    } else if (rowName == 'audible_image') {\n      this.teleHandlerForm.controls['audible_image'].setValue('');\n    } else if (rowName == 'headlights_image') {\n      this.teleHandlerForm.controls['headlights_image'].setValue('');\n    } else if (rowName == 'turn_signals_image') {\n      this.teleHandlerForm.controls['turn_signals_image'].setValue('');\n    } else if (rowName == 'warning_brake_lights_image') {\n      this.teleHandlerForm.controls['warning_brake_lights_image'].setValue('');\n    } else if (rowName == 'foot_brake_image') {\n      this.teleHandlerForm.controls['foot_brake_image'].setValue('');\n    } else if (rowName == 'parking_brake_image') {\n      this.teleHandlerForm.controls['parking_brake_image'].setValue('');\n    } else if (rowName == 'clutch_gear_shift_image') {\n      this.teleHandlerForm.controls['clutch_gear_shift_image'].setValue('');\n    } else if (rowName == 'engine_noise_image') {\n      this.teleHandlerForm.controls['engine_noise_image'].setValue('');\n    } else if (rowName == 'dash_gauges_image') {\n      this.teleHandlerForm.controls['dash_gauges_image'].setValue('');\n    } else if (rowName == 'operational_controls_image') {\n      this.teleHandlerForm.controls['operational_controls_image'].setValue('');\n    } else if (rowName == 'fluid_leaks_image') {\n      this.teleHandlerForm.controls['fluid_leaks_image'].setValue('');\n    } else if (rowName == 'first_aid_kit_image') {\n      this.teleHandlerForm.controls['first_aid_kit_image'].setValue('');\n    }\n  }\n\n  onSubmit() {\n    // this.loadingService.presentLoading();\n    this.isSubmitted = true;\n    // let count = 0\n    // Object.values(this.teleHandlerForm.value).forEach(key => {\n    //   if (key == 'Faulty') {\n    //     count++;\n    //   }\n    // });\n    // if (count > 0) {\n    //   this.showMsg = true;\n    // } else {\n    //   this.showMsg = false;\n    // }\n    if ((this.teleHandlerForm.value['data_plate'] == 'Faulty' && this.teleHandlerForm.value['data_plate_comment'] == '') ||\n      (this.teleHandlerForm.value['engine_oil'] == 'Faulty' && this.teleHandlerForm.value['engine_oil_comment'] == '') ||\n      (this.teleHandlerForm.value['hydraulic_oil'] == 'Faulty' && this.teleHandlerForm.value['hydraulic_oil_comment'] == '') ||\n      (this.teleHandlerForm.value['equipment_inspect'] == 'Faulty' && this.teleHandlerForm.value['equipment_inspect_comment'] == '') ||\n      (this.teleHandlerForm.value['coolant_level'] == 'Faulty' && this.teleHandlerForm.value['coolant_level_comment'] == '') ||\n      (this.teleHandlerForm.value['belts_and_hoses'] == 'Faulty' && this.teleHandlerForm.value['belts_and_hoses_comment'] == '') ||\n      (this.teleHandlerForm.value['wheels_tyres'] == 'Faulty' && this.teleHandlerForm.value['wheels_tyres_comment'] == '') ||\n      (this.teleHandlerForm.value['fire_extinguisher'] == 'Faulty' && this.teleHandlerForm.value['fire_extinguisher_comment'] == '') ||\n      (this.teleHandlerForm.value['fuel_flash'] == 'Faulty' && this.teleHandlerForm.value['fuel_flash_comment'] == '') ||\n      (this.teleHandlerForm.value['hydraulics_functional'] == 'Faulty' && this.teleHandlerForm.value['hydraulics_functional_comment'] == '') ||\n      (this.teleHandlerForm.value['lift_arms'] == 'Faulty' && this.teleHandlerForm.value['lift_arms_comment'] == '') ||\n      (this.teleHandlerForm.value['chain_hose'] == 'Faulty' && this.teleHandlerForm.value['chain_hose_comment'] == '') ||\n      (this.teleHandlerForm.value['cap_bolts'] == 'Faulty' && this.teleHandlerForm.value['cap_bolts_comment'] == '') ||\n      (this.teleHandlerForm.value['safety_stops'] == 'Faulty' && this.teleHandlerForm.value['safety_stops_comment'] == '') ||\n      (this.teleHandlerForm.value['forks'] == 'Faulty' && this.teleHandlerForm.value['forks_comment'] == '') ||\n      (this.teleHandlerForm.value['overhead_guards'] == 'Faulty' && this.teleHandlerForm.value['overhead_guards_comment'] == '') ||\n      (this.teleHandlerForm.value['counterweight'] == 'Faulty' && this.teleHandlerForm.value['counterweight_comment'] == '') ||\n      (this.teleHandlerForm.value['engine_bay'] == 'Faulty' && this.teleHandlerForm.value['engine_bay_components_comment'] == '') ||\n      (this.teleHandlerForm.value['horn'] == 'Faulty' && this.teleHandlerForm.value['horn_comment'] == '') ||\n      (this.teleHandlerForm.value['audible'] == 'Faulty' && this.teleHandlerForm.value['audible_comment'] == '') ||\n      (this.teleHandlerForm.value['headlights'] == 'Faulty' && this.teleHandlerForm.value['headlights_comment'] == '') ||\n      (this.teleHandlerForm.value['turn_signals'] == 'Faulty' && this.teleHandlerForm.value['turn_signals_comment'] == '') ||\n      (this.teleHandlerForm.value['warning_brake_lights'] == 'Faulty' && this.teleHandlerForm.value['warning_brake_lights_comment'] == '') ||\n      (this.teleHandlerForm.value['foot_brake'] == 'Faulty' && this.teleHandlerForm.value['foot_brake_comment'] == '') ||\n      (this.teleHandlerForm.value['parking_brake'] == 'Faulty' && this.teleHandlerForm.value['parking_brake_comment'] == '') ||\n      (this.teleHandlerForm.value['clutch_gear_shift'] == 'Faulty' && this.teleHandlerForm.value['clutch_gear_shift_comment'] == '') ||\n      (this.teleHandlerForm.value['engine_noise'] == 'Faulty' && this.teleHandlerForm.value['engine_noise_comment'] == '') ||\n      (this.teleHandlerForm.value['dash_gauges'] == 'Faulty' && this.teleHandlerForm.value['dash_gauges_comment'] == '') ||\n      (this.teleHandlerForm.value['operational_controls'] == 'Faulty' && this.teleHandlerForm.value['operational_controls_comment'] == '') ||\n      (this.teleHandlerForm.value['fluid_leaks'] == 'Faulty' && this.teleHandlerForm.value['fluid_leaks_comment'] == '') ||\n      (this.teleHandlerForm.value['first_aid_kit'] == 'Faulty' && this.teleHandlerForm.value['first_aid_kit_comment'] == '')) {\n      // this.loadingService.dismissLoading();\n      return;\n    } else {\n      if (this.teleHandlerForm.valid) {\n        let formData = this.teleHandlerForm.value;\n        formData['user_id'] = this.loggedInUser.id\n        let data = { 'formData': formData };\n        this.globalService.postData('Telehandler/submit', data).subscribe(result => {\n          console.log('result', result);\n          if (result && result['status']) {\n            this.toastService.toast(result['message'], 'success');\n            this.nav.back();\n          } else {\n            this.toastService.toast(result['message'], 'danger');\n          }\n        }, error => {\n          console.log('error', error);\n        })\n        // this.loadingService.dismissLoading();\n      } else {\n        // this.loadingService.dismissLoading();\n        return false;\n      }\n    }\n  }\n\n  onCompetency(event) {\n    if (event.detail.value == 'Not completed') {\n      this.alertService.alert('STOP do not proceed and see your supervisor to complete a VOC.')\n    }\n  }\n\n  onFuelLevel(event) {\n    if (event.detail.value == 'Empty') {\n      this.alertService.alert('Please ensure you fill up the Telehandler prior to use.')\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    public loadingController: LoadingController\n  ) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...'\n    });\n    await loading.present();\n  }\n\n  async dismissLoading() {\n    await this.loadingController.dismiss();\n  }\n}\n","import { Injectable, } from '@angular/core';\nimport { GlobalService } from '../global-service/global.service';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/Camera/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  notViewNotiCount: any = 0;\n\n  constructor(\n    private globalService: GlobalService,\n    public actionSheetController: ActionSheetController,\n    public camera: Camera\n  ) { }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // fileToBase64 = (file) => {\n  //   let image: any;\n  //   let reader = new FileReader();\n  //   reader.onload = (function (file) {\n  //     return function (e) {\n  //       image = e.target.result;\n  //       this.base64Image = e.target.result;\n  //     };\n  //   })(file);\n  //   reader.readAsDataURL(file);\n  // };\n\n  // convertDataURIToBinary(dataURI) {\n  //   var BASE64_MARKER = ';base64,';\n  //   var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  //   var base64 = dataURI.substring(base64Index);\n  //   var raw = window.atob(base64);\n  //   var rawLength = raw.length;\n  //   var array = new Uint8Array(new ArrayBuffer(rawLength));\n  //   for (let i = 0; i < rawLength; i++) {\n  //     array[i] = raw.charCodeAt(i);\n  //   }\n  //   return array;\n  // }\n\n  async mobileUploadImages() {\n    let images: any;\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image source',\n      buttons: [\n        {\n          text: 'Load from Library',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n          },\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            return images = this.pickImage(this.camera.PictureSourceType.CAMERA);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async pickImage(sourceType) {\n    console.log('sourceType', sourceType);\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    await this.camera.getPicture(options).then(\n      (imageData) => {\n        console.log('imageData', imageData);\n        // const file = this.DataURIToBlob('data:image/jpeg;base64,' + imageData);\n        let image = 'data:image/jpeg;base64,' + imageData;\n        console.log('pickImage', image);\n        return image;\n      },\n      (err) => {\n        console.log(\"errOf Image \", err)\n      }\n    );\n  }\n}\n","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\nion-footer {\\n  margin-bottom: 10px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6ImltYWdlLW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmlvbi1mb290ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW9uLXNsaWRlcyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZWxlaGFuZGxlci1hZGQtZm9ybS5wYWdlLnNjc3MifQ== */\";","export default \"\\n<ion-content>\\n  <ion-slides [options]=\\\"sliderOpts\\\">\\n    <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [src]=\\\"img\\\">\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(false)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"remove\\\" slot=\\\"start\\\"></ion-icon>\\n        out\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n        close\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-button (click)=\\\"zoom(true)\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"add\\\" slot=\\\"start\\\"></ion-icon>\\n        in\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";","export default \"<ion-content>\\n  <app-header [pageName]=\\\"pName\\\"></app-header>\\n  <div class=\\\"container\\\" [formGroup]=\\\"teleHandlerForm\\\">\\n\\n    <ion-card>\\n      <ion-radio-group formControlName=\\\"competency\\\" (ionChange)=\\\"onCompetency($event)\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label>Verification of Competency : </ion-label>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Completed</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Completed\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Not completed</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Not completed\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-label> Telehandler Number : </ion-label>\\n        </ion-row>\\n        <ion-row>\\n          <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"telehandler_number\\\"></ion-input>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-label> Hour / Meter :</ion-label>\\n        </ion-row>\\n        <ion-row>\\n          <ion-input placeholder=\\\"Please enter value\\\" formControlName=\\\"hour_meter\\\"></ion-input>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <ion-radio-group formControlName=\\\"data_plate\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label>Data plate attached and legible : </ion-label>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.data_plate.value && errorControls.data_plate.value =='Faulty'\\\">\\n\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"data_plate_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.data_plate_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'data_plate_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"data_plate_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'data_plate_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['data_plate_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['data_plate_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['data_plate_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('data_plate_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"engine_oil\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label> Engine Oil Level :</ion-label>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.engine_oil.value  && errorControls.engine_oil.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_oil_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_oil_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_oil_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"engine_oil_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'engine_oil_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['engine_oil_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['engine_oil_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['engine_oil_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('engine_oil_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"hydraulic_oil\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            Hydraulic Oil :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.hydraulic_oil.value && errorControls.hydraulic_oil.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"hydraulic_oil_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.hydraulic_oil_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'hydraulic_oil_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"hydraulic_oil_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'hydraulic_oil_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['hydraulic_oil_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['hydraulic_oil_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['hydraulic_oil_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('hydraulic_oil_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"fuel_level\\\" (ionChange)=\\\"onFuelLevel($event)\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            Fuel Level :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Full</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Full\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Half</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Half\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"4\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Empty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Empty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <ion-radio-group formControlName=\\\"equipment_inspect\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            Verify Equipment Inspections are Current :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.equipment_inspect.value && errorControls.equipment_inspect.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"equipment_inspect_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.equipment_inspect_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'equipment_inspect_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"equipment_inspect_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'equipment_inspect_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['equipment_inspect_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['equipment_inspect_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['equipment_inspect_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('equipment_inspect_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"coolant_level\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            Coolant Level :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.coolant_level.value && errorControls.coolant_level.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"coolant_level_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.coolant_level_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'coolant_level_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"coolant_level_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'coolant_level_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['coolant_level_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['coolant_level_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['coolant_level_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('coolant_level_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"belts_and_hoses\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            Belts and Hoses :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n\\n      <div *ngIf=\\\"errorControls.belts_and_hoses.value && errorControls.belts_and_hoses.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"belts_and_hoses_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.belts_and_hoses_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'belts_and_hoses_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"belts_and_hoses_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'belts_and_hoses_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['belts_and_hoses_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['belts_and_hoses_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['belts_and_hoses_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('belts_and_hoses_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"wheels_tyres\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <span class=\\\"error\\\">* </span> Wheels, Tyres and nuts :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.wheels_tyres.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.wheels_tyres.value && errorControls.wheels_tyres.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"wheels_tyres_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.wheels_tyres_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'wheels_tyres_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"wheels_tyres_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'wheels_tyres_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['wheels_tyres_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['wheels_tyres_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['wheels_tyres_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('wheels_tyres_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"fire_extinguisher\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <span class=\\\"error\\\">* </span> Fire-Extinguisher :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.fire_extinguisher.value && errorControls.fire_extinguisher.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fire_extinguisher_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.fire_extinguisher_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fire_extinguisher_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"fire_extinguisher_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'fire_extinguisher_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['fire_extinguisher_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['fire_extinguisher_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['fire_extinguisher_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('fire_extinguisher_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"fuel_flash\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <span class=\\\"error\\\">* </span> Fuel Flash Screen: in Place :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fuel_flash.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.fuel_flash.value && errorControls.fuel_flash.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fuel_flash_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fuel_flash_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fuel_flash_image')\\\">Upload\\n            Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"fuel_flash_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'fuel_flash_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['fuel_flash_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['fuel_flash_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['fuel_flash_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('fuel_flash_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"hydraulics_functional\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <span class=\\\"error\\\">* </span> Hydraulics Functional and No Leaks :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.hydraulics_functional.value  && errorControls.hydraulics_functional.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"hydraulics_functional_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.hydraulics_functional_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'hydraulics_functional_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"hydraulics_functional_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'hydraulics_functional_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['hydraulics_functional_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['hydraulics_functional_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['hydraulics_functional_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('hydraulics_functional_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-radio-group formControlName=\\\"lift_arms\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <span class=\\\"error\\\">* </span> Boom, Lift Arms, Extending Structure :\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Ok</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Faulty</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.lift_arms.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.lift_arms.value && errorControls.lift_arms.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"lift_arms_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.lift_arms_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'lift_arms_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"lift_arms_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'lift_arms_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['lift_arms_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['lift_arms_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['lift_arms_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('lift_arms_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        In place / Correctly Tensioned\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"chain_hose\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Chain and Hose Guards :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.chain_hose.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.chain_hose.value && errorControls.chain_hose.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"chain_hose_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.chain_hose_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'chain_hose_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"chain_hose_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'chain_hose_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['chain_hose_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['chain_hose_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['chain_hose_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('chain_hose_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col> In place</ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"cap_bolts\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Mast Cap Bolts :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.cap_bolts.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.cap_bolts.value && errorControls.cap_bolts.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"cap_bolts_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.cap_bolts_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'cap_bolts_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"cap_bolts_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'cap_bolts_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['cap_bolts_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['cap_bolts_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['cap_bolts_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('cap_bolts_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">In place and secure</ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"safety_stops\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Safety Stops and Latches :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.safety_stops.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.safety_stops.value && errorControls.safety_stops.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"safety_stops_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.safety_stops_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'safety_stops_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"safety_stops_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'safety_stops_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['safety_stops_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['safety_stops_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['safety_stops_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('safety_stops_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> In place</ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"forks\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Forks :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.forks.value && errorControls.forks.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"forks_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.forks_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'forks_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"forks_image\\\" (change)=\\\"onSelectImage($event, 2, 'forks_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"teleHandlerForm.value['forks_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['forks_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['forks_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('forks_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> Condition / Tips Even</ion-col>\\n      </ion-row>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-radio-group formControlName=\\\"overhead_guards\\\">\\n          <!-- <ion-row> -->\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Overhead Guards :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          <!-- </ion-row> -->\\n        </ion-radio-group>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.overhead_guards.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.overhead_guards.value && errorControls.overhead_guards.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"overhead_guards_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.overhead_guards_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'overhead_guards_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"overhead_guards_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'overhead_guards_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['overhead_guards_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['overhead_guards_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['overhead_guards_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('overhead_guards_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          In place / Condition\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"counterweight\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Counterweight / Counterweight bolts :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.counterweight.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.counterweight.value && errorControls.counterweight.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"counterweight_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.counterweight_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'counterweight_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"counterweight_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'counterweight_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['counterweight_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['counterweight_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['counterweight_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('counterweight_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Condition / Leaks\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"engine_bay_components\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Engine Bay Components :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_bay_components.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.engine_bay_components.value && errorControls.engine_bay_components.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_bay_components_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.engine_bay_components_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_bay_components_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"engine_bay_components_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'engine_bay_components_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['engine_bay_components_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['engine_bay_components_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['engine_bay_components_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('engine_bay_components_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Operating\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"horn\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Horn :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.horn.value && errorControls.horn.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"horn_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.horn_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'horn_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"horn_image\\\" (change)=\\\"onSelectImage($event, 2, 'horn_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"teleHandlerForm.value['horn_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['horn_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['horn_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('horn_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"audible\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Audible, Visual Warning Devices :\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.audible.value && errorControls.audible.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"audible_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.audible_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'audible_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"audible_image\\\" (change)=\\\"onSelectImage($event, 2, 'audible_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\" *ngIf=\\\"teleHandlerForm.value['audible_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['audible_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['audible_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('audible_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"headlights\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Headlights :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.headlights.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.headlights.value && errorControls.headlights.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"headlights_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.headlights_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'headlights_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"headlights_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'headlights_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['headlights_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['headlights_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['headlights_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('headlights_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"turn_signals\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Turn Signals :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.turn_signals.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.turn_signals.value && errorControls.turn_signals.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"turn_signals_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.turn_signals_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'turn_signals_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"turn_signals_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'turn_signals_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['turn_signals_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['turn_signals_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['turn_signals_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('turn_signals_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"warning_brake_lights\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Warning / Brake Lights :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.warning_brake_lights.value && errorControls.warning_brake_lights.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"warning_brake_lights_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.warning_brake_lights_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'warning_brake_lights_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"warning_brake_lights_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'warning_brake_lights_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['warning_brake_lights_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['warning_brake_lights_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['warning_brake_lights_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('warning_brake_lights_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-radio-group formControlName=\\\"foot_brake\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Foot Brake :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.foot_brake.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.foot_brake.value && errorControls.foot_brake.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"foot_brake_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.foot_brake_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'foot_brake_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"foot_brake_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'foot_brake_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['foot_brake_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['foot_brake_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['foot_brake_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('foot_brake_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Pedal Holds / Smooth Stop\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"parking_brake\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Parking Brake :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.parking_brake.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.parking_brake.value && errorControls.parking_brake.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"parking_brake_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.parking_brake_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'parking_brake_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"parking_brake_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'parking_brake_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['parking_brake_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['parking_brake_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['parking_brake_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('parking_brake_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Holds against Accelerator\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"clutch_gear_shift\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Clutch / Gear Shift :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.clutch_gear_shift.value && errorControls.clutch_gear_shift.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"clutch_gear_shift_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.clutch_gear_shift_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'clutch_gear_shift_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"clutch_gear_shift_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'clutch_gear_shift_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['clutch_gear_shift_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['clutch_gear_shift_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['clutch_gear_shift_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('clutch_gear_shift_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Smooth operation\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"engine_noise\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Engine Noise :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_noise.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.engine_noise.value && errorControls.engine_noise.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"engine_noise_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.engine_noise_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'engine_noise_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"engine_noise_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'engine_noise_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['engine_noise_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['engine_noise_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['engine_noise_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('engine_noise_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Sounds Normal\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"dash_gauges\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Dash Gauges :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.dash_gauges.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.dash_gauges.value && errorControls.dash_gauges.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"dash_gauges_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.dash_gauges_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'dash_gauges_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"dash_gauges_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'dash_gauges_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['dash_gauges_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['dash_gauges_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['dash_gauges_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('dash_gauges_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n\\n      </div>\\n\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"operational_controls\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> Operational Controls :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.operational_controls.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.operational_controls.value && errorControls.operational_controls.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"operational_controls_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\"\\n          *ngIf=\\\"isSubmitted && errorControls.operational_controls_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'operational_controls_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"operational_controls_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'operational_controls_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['operational_controls_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['operational_controls_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['operational_controls_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('operational_controls_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Smooth operation\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"fluid_leaks\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span>Fluid Leaks :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fluid_leaks.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.fluid_leaks.value && errorControls.fluid_leaks.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"fluid_leaks_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.fluid_leaks_comment.value  == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'fluid_leaks_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"fluid_leaks_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'fluid_leaks_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['fluid_leaks_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['fluid_leaks_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['fluid_leaks_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('fluid_leaks_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          Under truck and Near Hoses\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-item lines=\\\"none\\\"> -->\\n        <ion-radio-group formControlName=\\\"first_aid_kit\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <span class=\\\"error\\\">* </span> First Aid Kit :\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label> Ok</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Ok\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>Faulty</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Faulty\\\"></ion-radio>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-radio-group>\\n      <!-- </ion-item> -->\\n      <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.first_aid_kit.errors?.required\\\">\\n        Please select value.\\n      </ion-item>\\n\\n      <div *ngIf=\\\"errorControls.first_aid_kit.value && errorControls.first_aid_kit.value =='Faulty'\\\">\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"error\\\">* </span>\\n            <ion-label> Comment : </ion-label>\\n          </ion-item>\\n        </ion-row>\\n        <ion-row>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"first_aid_kit_comment\\\">\\n            </ion-textarea>\\n          </ion-item>\\n        </ion-row>\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControls.first_aid_kit_comment.value == ''\\\">\\n          Please enter comment.\\n        </ion-item>\\n\\n\\n        <ion-row *ngIf=\\\"globalService.platform === 'cordova'\\\">\\n          <ion-button class=\\\"camera\\\" expand=\\\"block\\\" (click)=\\\"onSelectImage($event, 1, 'first_aid_kit_image')\\\">\\n            Upload Image\\n          </ion-button>\\n        </ion-row>\\n\\n        <div *ngIf=\\\"globalService.platform === 'browser'\\\">\\n          <ion-row>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label> Upload Image :</ion-label>\\n            </ion-item>\\n          </ion-row>\\n          <ion-input type=\\\"file\\\" formControlName=\\\"first_aid_kit_image\\\"\\n            (change)=\\\"onSelectImage($event, 2, 'first_aid_kit_image')\\\">\\n          </ion-input>\\n        </div>\\n\\n        <ion-slides [options]=\\\"sliderOpts\\\" class=\\\"preview-slides\\\"\\n          *ngIf=\\\"teleHandlerForm.value['first_aid_kit_image'] !='' \\\">\\n          <ion-slide>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size=\\\"11\\\">\\n                  <img [src]=\\\"teleHandlerForm.value['first_aid_kit_image']\\\" tappable\\n                    (click)=\\\"onOpenPreview(teleHandlerForm.value['first_aid_kit_image'])\\\">\\n                </ion-col>\\n                <ion-col size=\\\"1\\\">\\n                  <p class=\\\"question\\\">\\n                    <ion-icon name=\\\"close\\\" (click)=\\\"onDeleteImage('first_aid_kit_image')\\\"></ion-icon>\\n                  </p>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-label>Comment : </ion-label>\\n        </ion-row>\\n        <ion-row>\\n          <ion-textarea placeholder=\\\"Enter Comment\\\" autoGrow=\\\"true\\\" formControlName=\\\"comment\\\">\\n          </ion-textarea>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <div *ngIf=\\\"this.teleHandlerForm.valid\\\">\\n        <p>\\n          <ion-text color=\\\"danger\\\">By clicking the submit button below you are stating that you have done the safety\\n            check on the fork truck to the best of you ability and that all details in this inspection are true and\\n            correct at the time of the inspection.</ion-text>\\n        </p>\\n        <p>\\n          <ion-text color=\\\"tertiary\\\"> Your name, date and the time the inspection is submitted will also be added to\\n            this report.</ion-text>\\n        </p>\\n      </div>\\n\\n      <ion-button class=\\\"btn\\\" (click)=\\\"onSubmit()\\\">SUBMIT</ion-button>\\n    </ion-card>\\n\\n  </div>\\n</ion-content>\";"]}